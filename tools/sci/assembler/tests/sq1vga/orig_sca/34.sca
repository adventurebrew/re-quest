.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.EXPORTS
OBJECT rm34 of 0x43

.CODE
rm34::107:
		link	0x01
		pushi	0x04
		pushi	0x0084
		pushi	0x01a6
		pushi	0x01af
		pushi	0x01a3
		calle	0x03be, 0x0000, 0x08
		push2	
		pushi	0x0080
		pushi	0x18
		calle	0x03be, 0x0000, 0x04
		push0	
		callb	0x2, 0x0
		pushi	0x009d
		push0	
		pushi	0x06
		push1	
		push0	
		lag	0x64
		send	0x0a
		pushi	0x6b
		push0	
		lofsa	holodude
		send	0x04
		pushi	0x6b
		push0	
		super	0x43, 0x4
		pushi	0x6b
		push0	
		pushi	0x04
		push1	
		pushi	0x00b4
		pushi	0x03
		push1	
		pushi	0x00e1
		lag	0x00
		send	0x10
		pushi	0x03
		dup	
		push1	
		pushi	0x3d
		callb	0x1, 0x6
		pushi	0x008c
		push1	
		lofsa	startUp
		push	
		self	0x06
		ret	

rm34::266:
		lsp	0x01
		dup	
		ldi	0x02
		eq?	
		bnt	code_137
		push2	
		pushi	0x22
		push0	
		calle	0xff, 0x00, 0x04
		jmp	code_287
code_137:
		dup	
		ldi	0x03
		eq?	
		bnt	code_155
		push2	
		pushi	0x22
		push1	
		calle	0xff, 0x00, 0x04
		jmp	code_287
code_155:
		dup	
		ldi	0x05
		eq?	
		bnt	code_173
		push2	
		pushi	0x22
		push2	
		calle	0xff, 0x00, 0x04
		jmp	code_287
code_173:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_192
		push2	
		pushi	0x22
		pushi	0x03
		calle	0xff, 0x00, 0x04
		jmp	code_287
code_192:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_211
		push2	
		pushi	0x22
		pushi	0x04
		calle	0xff, 0x00, 0x04
		jmp	code_287
code_211:
		dup	
		ldi	0x04
		eq?	
		bnt	code_274
		lsp	0x02
		dup	
		ldi	0x08
		eq?	
		bnt	code_242
		pushi	0x008c
		push1	
		lofsa	egoDropOratPart
		push	
		lag	0x00
		send	0x06
		jmp	code_270
code_242:
		dup	
		ldi	0x05
		eq?	
		bnt	code_261
		push2	
		pushi	0x22
		pushi	0x05
		calle	0xff, 0x00, 0x04
		jmp	code_270
code_261:
		push2	
		pushi	0x22
		pushi	0x06
		calle	0xff, 0x00, 0x04
code_270:
		toss	
		jmp	code_287
code_274:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x43, 0x8
code_287:
		toss	
		ret	

		bnot	

.OBJECT rm34 of 0x43
Exported
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x43
  [#1] = 0x43
  [#2] = 0x0
  [#3] = {'val': 'rm34', 'id': 'string_0'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x63
  [#11] = 0xffff
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0xa0
  [#21] = 0x8ad0
  [#22] = 0x0
Overriden functions: 2
  [0x6b]  = rm34::107   	 ; @0xe
  [0x10a]  = rm34::266   	 ; @0x75

.CODE
startUp::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_383
		ldi	0x03
		aTop	0x10
		jmp	code_860
code_383:
		dup	
		ldi	0x01
		eq?	
		bnt	code_412
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00b4
		pushi	0x00af
		pushSelf	
		lag	0x00
		send	0x0c
		jmp	code_860
code_412:
		dup	
		ldi	0x02
		eq?	
		bnt	code_426
		ldi	0x09
		aTop	0x10
		jmp	code_860
code_426:
		dup	
		ldi	0x03
		eq?	
		bnt	code_490
		push1	
		pushi	0x06
		callb	0x6, 0x2
		not	
		bnt	code_483
		pushi	0x07
		pushi	0x22
		pushi	0x07
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x07
		pushi	0x22
		pushi	0x08
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
code_483:
		ldi	0x06
		aTop	0x10
		jmp	code_860
code_490:
		dup	
		ldi	0x04
		eq?	
		bnt	code_593
		pushi	0x2b
		push1	
		pushi	0x00d3
		push1	
		pushi	0x08
		lag	0x00
		send	0x06
		bnt	code_528
		push1	
		pushi	0x30
		callb	0x6, 0x2
		bnt	code_528
		ldi	0x01b2
		jmp	code_560
code_528:
		push1	
		pushi	0x30
		callb	0x6, 0x2
		bnt	code_557
		pushi	0x00d3
		push1	
		pushi	0x08
		lag	0x00
		send	0x06
		not	
		bnt	code_557
		ldi	0x01a6
		jmp	code_560
code_557:
		ldi	0x01af
code_560:
		push	
		pushi	0x06
		push1	
		pushi	0xff
		pushi	0x2a
		push0	
		lag	0x64
		send	0x10
		pushi	0x018b
		push2	
		pushi	0x01b2
		pushi	0x64
		lag	0x02
		send	0x08
		ldi	0x14
		aTop	0x10
		jmp	code_860
code_593:
		dup	
		ldi	0x05
		eq?	
		bnt	code_620
		pushi	0x018b
		push2	
		pushi	0x014e
		pushi	0x64
		lag	0x02
		send	0x08
		ldi	0x14
		aTop	0x10
		jmp	code_860
code_620:
		dup	
		ldi	0x06
		eq?	
		bnt	code_647
		pushi	0x018b
		push2	
		pushi	0x00ea
		pushi	0x64
		lag	0x02
		send	0x08
		ldi	0x14
		aTop	0x10
		jmp	code_860
code_647:
		dup	
		ldi	0x07
		eq?	
		bnt	code_674
		pushi	0x018b
		push2	
		pushi	0x0086
		pushi	0x64
		lag	0x02
		send	0x08
		ldi	0x14
		aTop	0x10
		jmp	code_860
code_674:
		dup	
		ldi	0x08
		eq?	
		bnt	code_706
		pushi	0x018a
		push1	
		pushi	0x22
		lag	0x02
		send	0x06
		pushi	0x6b
		push0	
		lofsa	holoMouth
		send	0x04
		ldi	0x14
		aTop	0x10
		jmp	code_860
code_706:
		dup	
		ldi	0x09
		eq?	
		bnt	code_851
		push2	
		pushi	0x0081
		pushi	0x01b2
		callk	UnLoad, 0x4
		push2	
		pushi	0x0081
		pushi	0x014e
		callk	UnLoad, 0x4
		push2	
		pushi	0x0081
		pushi	0x00ea
		callk	UnLoad, 0x4
		push2	
		pushi	0x0081
		pushi	0x0086
		callk	UnLoad, 0x4
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	holoEyes
		send	0x0a
		push1	
		pushi	0x31
		callb	0x6, 0x2
		bnt	code_814
		push1	
		pushi	0x30
		callb	0x6, 0x2
		bnt	code_800
		pushi	0x008c
		push2	
		lofsa	translatorOn2
		push	
		pushSelf	
		self	0x08
		jmp	code_860
code_800:
		pushi	0x008c
		push2	
		lofsa	translatorOff2
		push	
		pushSelf	
		self	0x08
		jmp	code_860
code_814:
		push1	
		pushi	0x30
		callb	0x6, 0x2
		bnt	code_837
		pushi	0x008c
		push2	
		lofsa	translatorOn1
		push	
		pushSelf	
		self	0x08
		jmp	code_860
code_837:
		pushi	0x008c
		push2	
		lofsa	translatorOff1
		push	
		pushSelf	
		self	0x08
		jmp	code_860
code_851:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_860
		ldi	0x00
code_860:
		toss	
		ret	


.OBJECT startUp of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'startUp', 'id': 'string_1'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = startUp::138   	 ; @0x16c

.CODE
translatorOn1::79:
		pushi	0x4f
		push0	
		rest	0x01
		super	0x80, 0x4
		ldi	0x00
		sal	0x01
		ret	

translatorOn1::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_972
		pushi	0x07
		pushi	0x22
		pushi	0x09
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		ldi	0x03
		aTop	0x10
		jmp	code_1574
code_972:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1025
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x0a
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x08
		aTop	0x12
		jmp	code_1574
code_1025:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1044
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_1574
code_1044:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1097
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x0b
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x08
		aTop	0x12
		jmp	code_1574
code_1097:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1116
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_1574
code_1116:
		dup	
		ldi	0x05
		eq?	
		bnt	code_1139
		push2	
		pushi	0x22
		pushi	0x0c
		calle	0xff, 0x00, 0x04
		ldi	0x02
		aTop	0x10
		jmp	code_1574
code_1139:
		dup	
		ldi	0x06
		eq?	
		bnt	code_1192
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x0d
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x06
		aTop	0x12
		jmp	code_1574
code_1192:
		dup	
		ldi	0x07
		eq?	
		bnt	code_1211
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_1574
code_1211:
		dup	
		ldi	0x08
		eq?	
		bnt	code_1264
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x0e
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x06
		aTop	0x12
		jmp	code_1574
code_1264:
		dup	
		ldi	0x09
		eq?	
		bnt	code_1283
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_1574
code_1283:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_1336
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x0f
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x0d
		aTop	0x12
		jmp	code_1574
code_1336:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_1355
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_1574
code_1355:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_1408
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x10
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x06
		aTop	0x12
		jmp	code_1574
code_1408:
		dup	
		ldi	0x0d
		eq?	
		bnt	code_1438
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x06
		aTop	0x10
		push1	
		push	
		callb	0x7, 0x2
		push1	
		pushi	0x31
		callb	0x7, 0x2
		jmp	code_1574
code_1438:
		dup	
		ldi	0x0e
		eq?	
		bnt	code_1525
		pushi	0x00d3
		push1	
		pushi	0x08
		lag	0x00
		send	0x06
		bnt	code_1487
		ldi	0x0a
		aTop	0x12
		push0	
		callb	0x3, 0x0
		pushi	0x0118
		push1	
		push0	
		class	0x31
		send	0x06
		pushi	0x00c7
		push1	
		push0	
		lag	0x45
		send	0x06
		jmp	code_1574
code_1487:
		pushi	0x07
		pushi	0x22
		pushi	0x11
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
		pushi	0x6c
		push0	
		self	0x04
		jmp	code_1574
code_1525:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_1574
		ldi	0x00
		sal	0x02
		bnt	code_1569
		pushi	0x07
		pushi	0x22
		pushi	0x12
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
code_1569:
		pushi	0x6c
		push0	
		self	0x04
code_1574:
		toss	
		ret	


.OBJECT translatorOn1 of 0x80
Function area offset: 0x2c
Selectors [21]:
  [#0] = 0x80
  [#1] = 0x80
  [#2] = 0x0
  [#3] = {'val': 'translatorOn1', 'id': 'string_2'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0xa
  [#19] = 0x0
  [#20] = 0x1
Overriden functions: 2
  [0x8a]  = translatorOn1::138   	 ; @0x3a5
  [0x4f]  = translatorOn1::79   	 ; @0x398

.CODE
translatorOff1::79:
		pushi	0x4f
		push0	
		rest	0x01
		super	0x80, 0x4
		ldi	0x00
		sal	0x01
		ret	

translatorOff1::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1698
		pushi	0x07
		pushi	0x22
		pushi	0x13
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		ldi	0x03
		aTop	0x10
		jmp	code_2048
code_1698:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1751
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x14
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x04
		aTop	0x12
		jmp	code_2048
code_1751:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1770
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_2048
code_1770:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1823
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x15
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x05
		aTop	0x12
		jmp	code_2048
code_1823:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1842
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_2048
code_1842:
		dup	
		ldi	0x05
		eq?	
		bnt	code_1895
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x16
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x05
		aTop	0x12
		jmp	code_2048
code_1895:
		dup	
		ldi	0x06
		eq?	
		bnt	code_1914
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_2048
code_1914:
		dup	
		ldi	0x07
		eq?	
		bnt	code_1967
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x17
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x05
		aTop	0x12
		jmp	code_2048
code_1967:
		dup	
		ldi	0x08
		eq?	
		bnt	code_1986
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x02
		aTop	0x12
		jmp	code_2048
code_1986:
		dup	
		ldi	0x09
		eq?	
		bnt	code_2020
		pushi	0x07
		pushi	0x22
		pushi	0x18
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		ldi	0x03
		aTop	0x10
		jmp	code_2048
code_2020:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_2048
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
		push1	
		pushi	0x06
		callb	0x7, 0x2
		pushi	0x6c
		push0	
		self	0x04
code_2048:
		toss	
		ret	


.OBJECT translatorOff1 of 0x80
Function area offset: 0x2c
Selectors [21]:
  [#0] = 0x80
  [#1] = 0x80
  [#2] = 0x0
  [#3] = {'val': 'translatorOff1', 'id': 'string_3'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0xa
  [#19] = 0x0
  [#20] = 0x1
Overriden functions: 2
  [0x8a]  = translatorOff1::138   	 ; @0x67b
  [0x4f]  = translatorOff1::79   	 ; @0x66e

.CODE
translatorOn2::79:
		pushi	0x4f
		push0	
		rest	0x01
		super	0x80, 0x4
		ldi	0x00
		sal	0x01
		ret	

translatorOn2::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_2172
		pushi	0x07
		pushi	0x22
		pushi	0x19
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		ldi	0x03
		aTop	0x10
		jmp	code_2375
code_2172:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2225
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x1a
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x03
		aTop	0x12
		jmp	code_2375
code_2225:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2312
		pushi	0x00d3
		push1	
		pushi	0x08
		lag	0x00
		send	0x06
		bnt	code_2274
		ldi	0x06
		aTop	0x12
		push0	
		callb	0x3, 0x0
		pushi	0x0118
		push1	
		push0	
		class	0x31
		send	0x06
		pushi	0x00c7
		push1	
		push0	
		lag	0x45
		send	0x06
		jmp	code_2375
code_2274:
		pushi	0x07
		pushi	0x22
		pushi	0x1b
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
		pushi	0x6c
		push0	
		self	0x04
		jmp	code_2375
code_2312:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2331
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x06
		aTop	0x10
		jmp	code_2375
code_2331:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2375
		ldi	0x00
		sal	0x02
		bnt	code_2375
		pushi	0x07
		pushi	0x22
		pushi	0x1c
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
code_2375:
		toss	
		ret	

		bnot	

.OBJECT translatorOn2 of 0x80
Function area offset: 0x2c
Selectors [21]:
  [#0] = 0x80
  [#1] = 0x80
  [#2] = 0x0
  [#3] = {'val': 'translatorOn2', 'id': 'string_4'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0xa
  [#19] = 0x0
  [#20] = 0x1
Overriden functions: 2
  [0x8a]  = translatorOn2::138   	 ; @0x855
  [0x4f]  = translatorOn2::79   	 ; @0x848

.CODE
translatorOff2::79:
		pushi	0x4f
		push0	
		rest	0x01
		super	0x80, 0x4
		ldi	0x00
		sal	0x01
		ret	

translatorOff2::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_2489
		push2	
		pushi	0x22
		pushi	0x19
		calle	0xff, 0x00, 0x04
		ldi	0x03
		aTop	0x10
		jmp	code_2587
code_2489:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2542
		pushi	0x025f
		push1	
		pushi	0x0e
		pushi	0x22
		pushi	0x1d
		pushi	0x65
		push1	
		pushi	0x69
		push0	
		pushi	0x6a
		pushi	0x0096
		pushi	0x64
		pushi	0x0a
		pushi	0x28
		pushi	0x66
		lsg	0x89
		pushi	0x6b
		callk	Display, 0x1c
		push	
		self	0x06
		ldi	0x03
		aTop	0x12
		jmp	code_2587
code_2542:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2561
		pushi	0x4f
		push0	
		self	0x04
		ldi	0x06
		aTop	0x10
		jmp	code_2587
code_2561:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2587
		push2	
		pushi	0x22
		pushi	0x1e
		calle	0xff, 0x00, 0x04
		pushi	0x0177
		push1	
		pushi	0x16
		lag	0x02
		send	0x06
code_2587:
		toss	
		ret	

		bnot	

.OBJECT translatorOff2 of 0x80
Function area offset: 0x2c
Selectors [21]:
  [#0] = 0x80
  [#1] = 0x80
  [#2] = 0x0
  [#3] = {'val': 'translatorOff2', 'id': 'string_5'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0xa
  [#19] = 0x0
  [#20] = 0x1
Overriden functions: 2
  [0x8a]  = translatorOff2::138   	 ; @0x99d
  [0x4f]  = translatorOff2::79   	 ; @0x990

.CODE
egoDropOratPart::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_2691
		push0	
		callb	0x2, 0x0
		ldi	0x01
		sal	0x02
		ldi	0x03
		aTop	0x10
		ldi	0x01
		sal	0x00
		jmp	code_2994
code_2691:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2732
		pushi	0x05
		push1	
		pushi	0x18
		pushi	0x07
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x0a
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x04
		push1	
		pushSelf	
		lag	0x00
		send	0x1e
		jmp	code_2994
code_2732:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2779
		pushi	0x2b
		push1	
		pushi	0x01a3
		pushi	0x06
		push1	
		push0	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0146
		push2	
		pushi	0x08
		pushi	0x22
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x00
		send	0x10
		jmp	code_2994
code_2779:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2849
		pushi	0x07
		pushi	0x22
		pushi	0x1f
		pushi	0x43
		pushi	0x0a
		pushi	0x50
		pushi	0x46
		pushi	0x64
		calle	0xff, 0x00, 0x0e
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lag	0x00
		send	0x04
		push	
		pushi	0x03
		push0	
		lag	0x00
		send	0x04
		push	
		pushi	0x6b
		push0	
		lofsa	oratPart
		send	0x0c
		ldi	0x03
		aTop	0x10
		push	
		push	
		push1	
		pushi	0x3d
		callb	0x1, 0x6
		jmp	code_2994
code_2849:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2872
		push2	
		pushi	0x22
		pushi	0x20
		calle	0xff, 0x00, 0x04
		ldi	0x03
		aTop	0x10
		jmp	code_2994
code_2872:
		dup	
		ldi	0x05
		eq?	
		bnt	code_2929
		pushi	0x2b
		push1	
		pushi	0x01b1
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x6b
		push0	
		pushi	0x011a
		push2	
		pushi	0x52
		pushi	0x6a
		pushi	0x00d9
		push1	
		pushi	0x08
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	door
		send	0x1a
		jmp	code_2994
code_2929:
		dup	
		ldi	0x06
		eq?	
		bnt	code_2977
		pushi	0x009a
		push0	
		lag	0xb1
		send	0x04
		pushi	0x42
		push1	
		pushi	0x0a
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x58
		pushi	0x70
		pushSelf	
		lag	0x00
		send	0x12
		pushi	0x009d
		push0	
		lag	0x64
		send	0x04
		jmp	code_2994
code_2977:
		dup	
		ldi	0x07
		eq?	
		bnt	code_2994
		pushi	0x0177
		push1	
		pushi	0x23
		lag	0x02
		send	0x06
code_2994:
		toss	
		ret	


.OBJECT egoDropOratPart of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'egoDropOratPart', 'id': 'string_6'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = egoDropOratPart::138   	 ; @0xa64

.CODE
holoMouth::60:
		pushi	0x3c
		push0	
		super	0x2f, 0x4
		lsl	0x01
		ldi	0x00
		eq?	
		bnt	code_3119
		pushi	0x0088
		push0	
		lofsa	startUp
		send	0x04
		bnt	code_3119
		pushi	0x025f
		push0	
		pushi	0x0088
		push0	
		lofsa	startUp
		send	0x04
		send	0x04
		bnt	code_3119
		pToa	0x50
		not	
		bnt	code_3119
		pushi	0x0094
		push2	
		class	0x5f
		push	
		pushi	0x03
		self	0x08
		ldi	0x01
		sal	0x01
code_3119:
		ret	

holoMouth::266:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		lofsa	holodude
		send	0x08
		ret	


.OBJECT holoMouth of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'holoMouth', 'id': 'string_7'}
  [#4] = 0xd8
  [#5] = 0x7b
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x86
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x8
  [#27] = 0x0
  [#28] = 0x10
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 2
  [0x3c]  = holoMouth::60   	 ; @0xbee
  [0x10a]  = holoMouth::266   	 ; @0xc30

.CODE
holoEyes::107:
		pushi	0x6b
		push0	
		rest	0x01
		super	0x2f, 0x4
		pushi	0x0094
		push1	
		class	0x5f
		push	
		self	0x06
		ret	

holoEyes::60:
		pushi	0x3c
		push0	
		super	0x2f, 0x4
		pushi	0x07
		push0	
		lofsa	holoMouth
		send	0x04
		bnt	code_3292
		pushi	0x00c0
		push0	
		self	0x04
		jmp	code_3297
code_3292:
		pushi	0x69
		push0	
		self	0x04
code_3297:
		ret	

holoEyes::266:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		lofsa	holodude
		send	0x08
		ret	


.OBJECT holoEyes of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'holoEyes', 'id': 'string_8'}
  [#4] = 0xd8
  [#5] = 0x47
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x86
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x1
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 3
  [0x6b]  = holoEyes::107   	 ; @0xcb0
  [0x3c]  = holoEyes::60   	 ; @0xcc2
  [0x10a]  = holoEyes::266   	 ; @0xce2

.CODE
head::266:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		lofsa	holodude
		send	0x08
		ret	


.OBJECT head of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'head', 'id': 'string_9'}
  [#4] = 0xda
  [#5] = 0x92
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x3d
  [#24] = 0x8
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = head::266   	 ; @0xd66

.CODE
holodude::266:
		lsp	0x01
		dup	
		ldi	0x02
		eq?	
		bnt	code_3575
		push2	
		pushi	0x22
		pushi	0x21
		calle	0xff, 0x00, 0x04
		jmp	code_3823
code_3575:
		dup	
		ldi	0x03
		eq?	
		bnt	code_3593
		push2	
		pushi	0x22
		dup	
		calle	0xff, 0x00, 0x04
		jmp	code_3823
code_3593:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_3612
		push2	
		pushi	0x22
		pushi	0x23
		calle	0xff, 0x00, 0x04
		jmp	code_3823
code_3612:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_3631
		push2	
		pushi	0x22
		pushi	0x24
		calle	0xff, 0x00, 0x04
		jmp	code_3823
code_3631:
		dup	
		ldi	0x05
		eq?	
		bnt	code_3650
		push2	
		pushi	0x22
		pushi	0x25
		calle	0xff, 0x00, 0x04
		jmp	code_3823
code_3650:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3810
		lsp	0x02
		dup	
		ldi	0x08
		eq?	
		bnt	code_3681
		pushi	0x008c
		push1	
		lofsa	egoDropOratPart
		push	
		lag	0x00
		send	0x06
		jmp	code_3806
code_3681:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_3700
		push2	
		pushi	0x22
		pushi	0x26
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3700:
		dup	
		ldi	0x00
		eq?	
		bnt	code_3719
		push2	
		pushi	0x22
		pushi	0x27
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3719:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_3738
		push2	
		pushi	0x22
		pushi	0x28
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3738:
		dup	
		ldi	0x06
		eq?	
		bnt	code_3757
		push2	
		pushi	0x22
		pushi	0x29
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3757:
		dup	
		ldi	0x05
		eq?	
		bnt	code_3776
		push2	
		pushi	0x22
		pushi	0x05
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3776:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3795
		push2	
		pushi	0x22
		pushi	0x2a
		calle	0xff, 0x00, 0x04
		jmp	code_3806
code_3795:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x2c, 0x8
code_3806:
		toss	
		jmp	code_3823
code_3810:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x2c, 0x8
code_3823:
		toss	
		ret	

		bnot	

.OBJECT holodude of 0x2c
Function area offset: 0x2e
Selectors [22]:
  [#0] = 0x2c
  [#1] = 0x2c
  [#2] = 0x0
  [#3] = {'val': 'holodude', 'id': 'string_10'}
  [#4] = 0xdb
  [#5] = 0x37
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'holodude', 'id': 'string_10'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x400
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'holodude look string', 'id': 'string_11'}
Overriden functions: 1
  [0x10a]  = holodude::266   	 ; @0xde2

.OBJECT door of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'door', 'id': 'string_12'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0xea
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4800
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0xa
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.OBJECT oratPart of 0x2e
Function area offset: 0x4e
Selectors [38]:
  [#0] = 0x2e
  [#1] = 0x2e
  [#2] = 0x0
  [#3] = {'val': 'oratPart', 'id': 'string_13'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x86
  [#24] = 0x2
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4000
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
Overriden functions: 0

.STRINGS
string_0: "rm34"		 ; special
string_1: "startUp"		 ; special
string_2: "translatorOn1"		 ; special
string_3: "translatorOff1"		 ; special
string_4: "translatorOn2"		 ; special
string_5: "translatorOff2"		 ; special
string_6: "egoDropOratPart"		 ; special
string_7: "holoMouth"		 ; special
string_8: "holoEyes"		 ; special
string_9: "head"		 ; special
string_10: "holodude"		 ; special
string_11: "holodude look string"
string_12: "door"		 ; special
string_13: "oratPart"		 ; special
string_unused_14: ""
string_unused_15: ""


.PRELOAD_TEXT

.LOCAL_VARS
0x0, 0x0, 0x0

.RELOCATION
 ; This section is automatically created on assembling, regardless of the content written here
 ; the following is only for informative purposes
num of pointers: 33
; code_67  ; lofsa
; code_110  ; lofsa
; code_231  ; lofsa
; OBJECT rm34 of 0x43 selector #3
; code_694  ; lofsa
; code_763  ; lofsa
; code_790  ; lofsa
; code_804  ; lofsa
; code_827  ; lofsa
; code_841  ; lofsa
; OBJECT startUp of 0x6 selector #3
; OBJECT translatorOn1 of 0x80 selector #3
; OBJECT translatorOff1 of 0x80 selector #3
; OBJECT translatorOn2 of 0x80 selector #3
; OBJECT translatorOff2 of 0x80 selector #3
; code_2829  ; lofsa
; code_2921  ; lofsa
; OBJECT egoDropOratPart of 0x6 selector #3
; code_3072  ; lofsa
; code_3088  ; lofsa
; code_3128  ; lofsa
; OBJECT holoMouth of 0x2f selector #3
; code_3275  ; lofsa
; code_3306  ; lofsa
; OBJECT holoEyes of 0x2f selector #3
; code_3438  ; lofsa
; OBJECT head of 0x2f selector #3
; code_3670  ; lofsa
; OBJECT holodude of 0x2c selector #3
; OBJECT holodude of 0x2c selector #13
; OBJECT holodude of 0x2c selector #21
; OBJECT door of 0x2f selector #3
; OBJECT oratPart of 0x2e selector #3
