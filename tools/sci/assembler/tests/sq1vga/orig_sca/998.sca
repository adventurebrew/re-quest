.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.CODE
PicView::110:
		pushi	0x05
		pTos	0x6
		pushi	0x52
		pTos	0x2c
		pTos	0x2e
		pTos	0x30
		calle	0xff, 0x00, 0x0a
		ret	

PicView::107:
		pushi	0x73
		push1	
		pushSelf	
		lag	0xa
		send	0x6
		push1	
		pushSelf	
		callk	0xc, 0x2
		pushi	0x6b
		push0	
		rest	0x1
		super	0x2c, 0x4
		ret	

PicView::108:
		pToa	0x1e
		bnt	code_57
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x1e
code_57:
		pushi	0x54
		push1	
		pushSelf	
		lag	0x20
		send	0x6
		push1	
		pushSelf	
		callk	0x5, 0x2
		ret	

PicView::194:
		pTos	0x34
		ldi	0x0080
		and	
		bnt	code_85
		ldi	0x00
		jmp	code_94
code_85:
		pushi	0x00c2
		push0	
		rest	0x1
		super	0x2c, 0x4
code_94:
		ret	

		bnot	

.CLASS PicView of 0x2c
Function area offset: 0x72
Selectors [28]:
  [0x0] = 0x2d
  [0x1] = 0x2c
  [0x2] = 0x8000
  [0x17] = {'val': 'PicView', 'id': 'string_0'}
  [0x4] = 0x0
  [0x3] = 0x0
  [0x55] = 0x0
  [0x3a] = 0x0
  [0x10b] = 0x0
  [0x9] = 0x0
  [0xa] = 0x0
  [0xb] = 0x0
  [0xc] = 0x0
  [0x10c] = 0x0
  [0x10d] = 0x6789
  [0x109] = 0x0
  [0x10e] = 0x6789
  [0x10f] = 0x0
  [0x110] = 0x0
  [0x111] = 0x0
  [0x112] = 0x6789
  [0x113] = 0x0
  [0x5] = 0x0
  [0x6] = 0x0
  [0x7] = 0x0
  [0x3f] = 0xffff
  [0x11] = 0x0
  [0x5b] = 0x0
Overriden functions: 4
  [0x6b]  = PicView::107   	 ; @0x15
  [0x6c]  = PicView::108   	 ; @0x2b
  [0x6e]  = PicView::110   	 ; @0x4
  [0xc2]  = PicView::194   	 ; @0x47

.CODE
View::107:
		pTos	0x38
		ldi	0x7fff
		and	
		aTop	0x38
		pushi	0x77
		push1	
		pushSelf	
		lag	0x5
		send	0x6
		not	
		bnt	code_282
		ldi	0x00
		aTop	0x3a
		aTop	0x3c
		aTop	0x3e
		aTop	0x40
		pTos	0x38
		ldi	0xff77
		and	
		aTop	0x38
code_282:
		push1	
		pushSelf	
		callk	0x4b, 0x2
		pushi	0x6b
		push0	
		rest	0x2
		super	0x2c, 0x4
		pushi	0x0122
		push0	
		self	0x4
		ret	

View::282:
		lsp	0x0
		ldi	0x01
		ge?	
		bnt	code_338
		lap	0x1
		aTop	0x8
		lsp	0x0
		ldi	0x02
		ge?	
		bnt	code_338
		lap	0x2
		aTop	0xa
		lsp	0x0
		ldi	0x03
		ge?	
		bnt	code_338
		lap	0x3
		aTop	0xc
code_338:
		push1	
		pushSelf	
		callk	0x4b, 0x2
		pushi	0x011c
		push0	
		self	0x4
		ret	

View::108:
		pushi	0x011d
		push0	
		pushi	0x69
		push0	
		self	0x8
		pTos	0x38
		ldi	0x8000
		or	
		aTop	0x38
		ret	

View::105:
		pTos	0x38
		ldi	0x08
		or	
		aTop	0x38
		ret	

View::192:
		pTos	0x38
		ldi	0xf7
		and	
		aTop	0x38
		ret	

View::84:
		pTos	0x38
		ldi	0x8000
		and	
		bnt	code_530
		pTos	0x38
		ldi	0x7fff
		and	
		aTop	0x38
		pushi	0x54
		push1	
		pushSelf	
		lag	0x5
		send	0x6
		pToa	0x36
		bnt	code_426
		push2	
		pushi	0x0085
		push	
		callk	0x1, 0x4
		ldi	0x00
		aTop	0x36
code_426:
		pTos	0x38
		ldi	0x20
		and	
		bnt	code_505
		pushi	0x73
		push1	
		pushi	0x05
		push1	
		pTos	0x2e
		pushi	0x06
		push1	
		pTos	0x30
		pushi	0x07
		push1	
		pTos	0x32
		pushi	0x04
		push1	
		pTos	0x8
		pushi	0x03
		push1	
		pTos	0xa
		pushi	0x55
		push1	
		pTos	0xc
		pushi	0x3f
		push1	
		pTos	0x34
		pushi	0x11
		push1	
		pTos	0x38
		pushi	0x72
		push0	
		pushi	0x6a
		push0	
		class	0x2d
		send	0x4
		send	0x34
		push	
		lag	0xa
		send	0x6
		pushi	0x73
		push1	
		pushSelf	
		lag	0x20
		send	0x6
		jmp	code_510
code_505:
		push1	
		pushSelf	
		callk	0x5, 0x2
code_510:
		push1	
		pTos	0x1e
		callk	0x6, 0x2
		bnt	code_526
		pushi	0x6c
		push0	
		pToa	0x1e
		send	0x4
code_526:
		ldi	0x00
		aTop	0x1e
code_530:
		ret	

View::283:
		pTos	0x38
		ldi	0x01
		or	
		aTop	0x38
		pTos	0x38
		ldi	0xfd
		and	
		aTop	0x38
		ret	

View::284:
		pTos	0x38
		ldi	0x40
		or	
		aTop	0x38
		ret	

View::285:
		pTos	0x38
		ldi	0x02
		or	
		aTop	0x38
		pTos	0x38
		ldi	0xfe
		and	
		aTop	0x38
		ret	

View::66:
		lsp	0x0
		ldi	0x00
		eq?	
		bnt	code_587
		pTos	0x38
		ldi	0x10
		or	
		aTop	0x38
		jmp	code_616
code_587:
		lsp	0x1
		ldi	0xff
		eq?	
		bnt	code_605
		pTos	0x38
		ldi	0xef
		and	
		aTop	0x38
		jmp	code_616
code_605:
		lap	0x1
		aTop	0x34
		pTos	0x38
		ldi	0x10
		or	
		aTop	0x38
code_616:
		pushi	0x011c
		push0	
		self	0x4
		ret	

View::160:
		lsp	0x0
		ldi	0x00
		eq?	
		bnt	code_642
		pTos	0x38
		ldi	0x0800
		or	
		aTop	0x38
		jmp	code_673
code_642:
		lsp	0x1
		ldi	0xff
		eq?	
		bnt	code_661
		pTos	0x38
		ldi	0xf7ff
		and	
		aTop	0x38
		jmp	code_673
code_661:
		lap	0x1
		aTop	0x30
		pTos	0x38
		ldi	0x0800
		or	
		aTop	0x38
code_673:
		pushi	0x011c
		push0	
		self	0x4
		ret	

View::286:
		lsp	0x0
		ldi	0x00
		eq?	
		bnt	code_699
		pTos	0x38
		ldi	0x1000
		or	
		aTop	0x38
		jmp	code_751
code_699:
		lsp	0x1
		ldi	0xff
		eq?	
		bnt	code_718
		pTos	0x38
		ldi	0xefff
		and	
		aTop	0x38
		jmp	code_751
code_718:
		pTos	0x38
		ldi	0x1000
		or	
		aTop	0x38
		lsp	0x1
		pushi	0x00db
		push0	
		self	0x4
		ge?	
		bnt	code_747
		pushi	0x00db
		push0	
		self	0x4
		jmp	code_749
code_747:
		lap	0x1
code_749:
		aTop	0x32
code_751:
		pushi	0x011c
		push0	
		self	0x4
		ret	

View::287:
		push0	
		lap	0x0
		eq?	
		bt	code_767
		lap	0x1
code_767:
		bnt	code_781
		pTos	0x38
		ldi	0x4000
		or	
		aTop	0x38
		jmp	code_789
code_781:
		pTos	0x38
		ldi	0xbfff
		and	
		aTop	0x38
code_789:
		ret	

View::288:
		pushi	0x77
		push1	
		pushSelf	
		lag	0x5
		send	0x6
		not	
		bnt	code_807
		pushi	0x6b
		push0	
		self	0x4
code_807:
		pushi	0x11
		push1	
		pTos	0x38
		ldi	0x8021
		or	
		push	
		self	0x6
		ret	

View::219:
		push1	
		pushSelf	
		callk	0xe, 0x2
		push	
		ldi	0x01
		sub	
		ret	

View::110:
		pushi	0x05
		pTos	0x6
		pushi	0x52
		pTos	0x2e
		pTos	0x30
		pTos	0x32
		calle	0xff, 0x00, 0x0a
		ret	

View::289:
		link	0x01
		pTos	0x38
		ldi	0x0200
		and	
		sat	0x0
		lap	0x0
		bnt	code_886
		lap	0x1
		bnt	code_878
		pTos	0x38
		ldi	0x0200
		or	
		aTop	0x38
		jmp	code_886
code_878:
		pTos	0x38
		ldi	0xfdff
		and	
		aTop	0x38
code_886:
		lat	0x0
		ret	

View::216:
		ret	

View::290:
		ret	

View::278:
		pTos	0x38
		ldi	0x0088
		and	
		not	
		ret	

View::194:
		pushi	0x0116
		push0	
		self	0x4
		bnt	code_920
		pushi	0x00c2
		push0	
		rest	0x1
		super	0x2c, 0x4
		jmp	code_922
code_920:
		ldi	0x00
code_922:
		ret	

		bnot	

.CLASS View of 0x2c
Function area offset: 0x9a
Selectors [38]:
  [0x0] = 0x2e
  [0x1] = 0x2c
  [0x2] = 0x8000
  [0x17] = {'val': 'View', 'id': 'string_1'}
  [0x4] = 0x0
  [0x3] = 0x0
  [0x55] = 0x0
  [0x3a] = 0x0
  [0x10b] = 0x0
  [0x9] = 0x0
  [0xa] = 0x0
  [0xb] = 0x0
  [0xc] = 0x0
  [0x10c] = 0x0
  [0x10d] = 0x6789
  [0x109] = 0x0
  [0x10e] = 0x6789
  [0x10f] = 0x0
  [0x110] = 0x0
  [0x111] = 0x0
  [0x112] = 0x6789
  [0x113] = 0x0
  [0x37] = 0x2
  [0x5] = 0x0
  [0x6] = 0x0
  [0x7] = 0x0
  [0x3f] = 0x0
  [0x8] = 0x0
  [0x11] = 0x101
  [0xd] = 0x0
  [0xe] = 0x0
  [0xf] = 0x0
  [0x10] = 0x0
  [0x13] = 0x0
  [0x14] = 0x0
  [0x15] = 0x0
  [0x16] = 0x0
  [0x5b] = 0x0
Overriden functions: 21
  [0x6b]  = View::107   	 ; @0xf4
  [0x6c]  = View::108   	 ; @0x15e
  [0x6e]  = View::110   	 ; @0x33e
  [0x116]  = View::278   	 ; @0x37b
  [0xc2]  = View::194   	 ; @0x383
  [0x11a]  = View::282   	 ; @0x12e
  [0x11b]  = View::283   	 ; @0x213
  [0x11c]  = View::284   	 ; @0x222
  [0x11d]  = View::285   	 ; @0x22a
  [0x42]  = View::66   	 ; @0x239
  [0xa0]  = View::160   	 ; @0x26f
  [0x11e]  = View::286   	 ; @0x2a8
  [0x11f]  = View::287   	 ; @0x2f6
  [0x69]  = View::105   	 ; @0x170
  [0xc0]  = View::192   	 ; @0x178
  [0x54]  = View::84   	 ; @0x180
  [0x120]  = View::288   	 ; @0x316
  [0xdb]  = View::219   	 ; @0x334
  [0x121]  = View::289   	 ; @0x34f
  [0xd8]  = View::216   	 ; @0x379
  [0x122]  = View::290   	 ; @0x37a

.CODE
Prop::60:
		link	0x01
		push2	
		pushSelf	
		pTos	0x12
		callk	0xc, 0x4
		pTos	0x38
		ldi	0x8000
		and	
		bnt	code_1199
		ret	

code_1199:
		pToa	0x4e
		bnt	code_1209
		pushi	0x3c
		push0	
		send	0x4
code_1209:
		pTos	0x38
		ldi	0x04
		and	
		bnt	code_1227
		pTos	0x38
		ldi	0x02
		and	
		not	
		bnt	code_1227
		ret	

code_1227:
		pToa	0x50
		bnt	code_1237
		pushi	0x3c
		push0	
		send	0x4
code_1237:
		ret	

Prop::129:
		pToa	0x4e
		bnt	code_1251
		pushi	0x0081
		push1	
		lsp	0x1
		send	0x6
code_1251:
		pushi	0x0081
		push1	
		lsp	0x1
		super	0x2e, 0x6
		ret	

Prop::148:
		pToa	0x50
		bnt	code_1271
		pushi	0x6c
		push0	
		send	0x4
code_1271:
		lap	0x1
		bnt	code_1331
		pushi	0x011e
		push1	
		pushi	0xff
		self	0x6
		pushi	0x011d
		push0	
		self	0x4
		push2	
		push0	
		lap	0x1
		send	0x4
		push	
		ldi	0x8000
		and	
		bnt	code_1314
		pushi	0x6a
		push0	
		lap	0x1
		send	0x4
		jmp	code_1316
code_1314:
		lap	0x1
code_1316:
		aTop	0x50
		pushi	0x6b
		push1	
		pushSelf	
		rest	0x2
		pToa	0x50
		send	0x6
		jmp	code_1335
code_1331:
		ldi	0x00
		aTop	0x50
code_1335:
		ret	

Prop::84:
		pTos	0x38
		ldi	0x8000
		and	
		bnt	code_1373
		pushi	0x008c
		push1	
		push0	
		pushi	0x0094
		push1	
		push0	
		self	0xc
		pToa	0x52
		bnt	code_1367
		pushi	0x6c
		push0	
		send	0x4
code_1367:
		pushi	0x54
		push0	
		super	0x2e, 0x4
code_1373:
		ret	

Prop::139:
		pToa	0x4e
		bnt	code_1385
		pushi	0x008b
		push0	
		send	0x4
code_1385:
		ret	

Prop::140:
		push1	
		pTos	0x4e
		callk	0x6, 0x2
		bnt	code_1402
		pushi	0x6c
		push0	
		pToa	0x4e
		send	0x4
code_1402:
		lap	0x1
		bnt	code_1415
		pushi	0x6b
		push1	
		pushSelf	
		rest	0x2
		send	0x6
code_1415:
		ret	

Prop::216:
		pToa	0x50
		bnt	code_1438
		pushi	0x00d5
		push0	
		send	0x4
		bnt	code_1438
		pushi	0x00d8
		push0	
		pToa	0x50
		send	0x4
code_1438:
		ret	

Prop::290:
		pToa	0x54
		not	
		bnt	code_1448
		jmp	code_1493
code_1448:
		lap	0x0
		bnt	code_1458
		lap	0x1
		jmp	code_1466
code_1458:
		pushi	0x0123
		push0	
		lag	0x1
		send	0x4
code_1466:
		push	
		pToa	0x54
		lt?	
		bnt	code_1482
		pushi	0x011b
		push0	
		self	0x4
		jmp	code_1493
code_1482:
		pToa	0x50
		bnt	code_1493
		pushi	0x011d
		push0	
		self	0x4
code_1493:
		ret	


.CLASS Prop of 0x2e
Function area offset: 0xae
Selectors [43]:
  [0x0] = 0x2f
  [0x1] = 0x2e
  [0x2] = 0x8000
  [0x17] = {'val': 'Prop', 'id': 'string_2'}
  [0x4] = 0x0
  [0x3] = 0x0
  [0x55] = 0x0
  [0x3a] = 0x0
  [0x10b] = 0x0
  [0x9] = 0x0
  [0xa] = 0x0
  [0xb] = 0x0
  [0xc] = 0x0
  [0x10c] = 0x0
  [0x10d] = 0x6789
  [0x109] = 0x0
  [0x10e] = 0x6789
  [0x10f] = 0x0
  [0x110] = 0x0
  [0x111] = 0x0
  [0x112] = 0x6789
  [0x113] = 0x0
  [0x37] = 0x2
  [0x5] = 0x0
  [0x6] = 0x0
  [0x7] = 0x0
  [0x3f] = 0x0
  [0x8] = 0x0
  [0x11] = 0x0
  [0xd] = 0x0
  [0xe] = 0x0
  [0xf] = 0x0
  [0x10] = 0x0
  [0x13] = 0x0
  [0x14] = 0x0
  [0x15] = 0x0
  [0x16] = 0x0
  [0x5b] = 0x0
  [0xd9] = 0x0
  [0x88] = 0x0
  [0xda] = 0x0
  [0x83] = 0x0
  [0x123] = 0x0
Overriden functions: 8
  [0x3c]  = Prop::60   	 ; @0x49c
  [0x81]  = Prop::129   	 ; @0x4d6
  [0x54]  = Prop::84   	 ; @0x538
  [0xd8]  = Prop::216   	 ; @0x588
  [0x122]  = Prop::290   	 ; @0x59f
  [0x94]  = Prop::148   	 ; @0x4ed
  [0x8c]  = Prop::140   	 ; @0x56a
  [0x8b]  = Prop::139   	 ; @0x55e

.CODE
Actor::107:
		pushi	0x6b
		push0	
		rest	0x1
		super	0x2f, 0x4
		pToa	0x8
		aTop	0x58
		pToa	0xa
		aTop	0x5a
		ret	

Actor::60:
		link	0x03
		pTos	0x38
		ldi	0x8000
		and	
		bnt	code_1747
		ret	

code_1747:
		pToa	0x4e
		bnt	code_1757
		pushi	0x3c
		push0	
		send	0x4
code_1757:
		pToa	0x6c
		bnt	code_1768
		pushi	0x3c
		push1	
		pushSelf	
		send	0x6
code_1768:
		pTos	0x38
		ldi	0x04
		and	
		bnt	code_1786
		pTos	0x38
		ldi	0x02
		and	
		not	
		bnt	code_1786
		ret	

code_1786:
		pToa	0x68
		bnt	code_1797
		pushi	0x3c
		push1	
		pushSelf	
		send	0x6
code_1797:
		pToa	0x6a
		bnt	code_1810
		pushi	0x3c
		push0	
		send	0x4
		jmp	code_1820
code_1810:
		pToa	0x64
		bnt	code_1820
		pushi	0x3c
		push0	
		send	0x4
code_1820:
		pToa	0x50
		bnt	code_1889
		pToa	0x44
		sat	0x1
		pToa	0x48
		sat	0x2
		pushi	0x3c
		push0	
		pToa	0x50
		send	0x4
		pToa	0x62
		bnt	code_1854
		pushi	0x3c
		push1	
		pushSelf	
		send	0x6
		jmp	code_1859
code_1854:
		push1	
		pushSelf	
		callk	0x4b, 0x2
code_1859:
		lst	0x1
		pToa	0x44
		ne?	
		bt	code_1872
		lst	0x2
		pToa	0x48
		ne?	
code_1872:
		bnt	code_1889
		pushi	0x39
		push0	
		self	0x4
		bnt	code_1889
		pushi	0x012f
		push0	
		self	0x4
code_1889:
		pToa	0x8
		aTop	0x58
		pToa	0xa
		aTop	0x5a
		ret	

Actor::282:
		pushi	0x011a
		push2	
		lsp	0x1
		lsp	0x2
		rest	0x3
		super	0x2f, 0x8
		lap	0x1
		aTop	0x58
		lap	0x2
		aTop	0x5a
		pushi	0x39
		push0	
		self	0x4
		bnt	code_1933
		pushi	0x012f
		push0	
		self	0x4
code_1933:
		ret	

Actor::281:
		pToa	0x64
		bnt	code_1953
		push	
		ldi	0xff
		ne?	
		bnt	code_1953
		pushi	0x6c
		push0	
		pToa	0x64
		send	0x4
code_1953:
		lap	0x1
		bnt	code_2005
		pushi	0x011d
		push0	
		self	0x4
		push2	
		push0	
		lap	0x1
		send	0x4
		push	
		ldi	0x8000
		and	
		bnt	code_1988
		pushi	0x6a
		push0	
		lap	0x1
		send	0x4
		jmp	code_1990
code_1988:
		lap	0x1
code_1990:
		aTop	0x64
		pushi	0x6b
		push1	
		pushSelf	
		rest	0x2
		pToa	0x64
		send	0x6
		jmp	code_2009
code_2005:
		ldi	0x00
		aTop	0x64
code_2009:
		ret	

Actor::297:
		pToa	0x6a
		bnt	code_2020
		pushi	0x6c
		push0	
		send	0x4
code_2020:
		push1	
		lsp	0x1
		callk	0x6, 0x2
		bnt	code_2053
		push2	
		push0	
		lap	0x1
		send	0x4
		push	
		ldi	0x8000
		and	
		bnt	code_2053
		pushi	0x6a
		push0	
		lap	0x1
		send	0x4
		jmp	code_2055
code_2053:
		lap	0x1
code_2055:
		aTop	0x6a
		pToa	0x6a
		bnt	code_2070
		pushi	0x6b
		push1	
		pushSelf	
		rest	0x2
		send	0x6
code_2070:
		ret	

Actor::220:
		push1	
		pTos	0x64
		callk	0x6, 0x2
		not	
		bt	code_2106
		pTos	0x8
		pushi	0x00de
		push0	
		pToa	0x64
		send	0x4
		eq?	
		bnt	code_2106
		pTos	0xa
		pushi	0x00df
		push0	
		pToa	0x64
		send	0x4
		eq?	
code_2106:
		ret	

Actor::61:
		pTos	0x38
		ldi	0x0400
		and	
		ret	

Actor::84:
		pTos	0x38
		ldi	0x8000
		and	
		bnt	code_2241
		pTos	0x64
		ldi	0xff
		ne?	
		bnt	code_2138
		pushi	0x0119
		push1	
		push0	
		self	0x6
code_2138:
		pushi	0x0129
		push1	
		push0	
		self	0x6
		pToa	0x62
		bnt	code_2159
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x62
code_2159:
		pToa	0x66
		bnt	code_2173
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x66
code_2173:
		pToa	0x68
		bnt	code_2187
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x68
code_2187:
		pToa	0x60
		bnt	code_2201
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x60
code_2201:
		pToa	0x6c
		bnt	code_2215
		pushi	0x6c
		push0	
		send	0x4
		ldi	0x00
		aTop	0x6c
code_2215:
		push1	
		pTos	0x1e
		callk	0x6, 0x2
		bnt	code_2235
		pushi	0x6c
		push0	
		pToa	0x1e
		send	0x4
		ldi	0x00
		aTop	0x1e
code_2235:
		pushi	0x54
		push0	
		super	0x2f, 0x4
code_2241:
		ret	

Actor::298:
		lap	0x0
		not	
		bt	code_2250
		lap	0x1
code_2250:
		bnt	code_2264
		pTos	0x38
		ldi	0x2000
		or	
		aTop	0x38
		jmp	code_2272
code_2264:
		pTos	0x38
		ldi	0xdfff
		and	
		aTop	0x38
code_2272:
		ret	

Actor::299:
		link	0x01
		ldi	0x00
		sat	0x0
code_2279:
		lst	0x0
		lap	0x0
		lt?	
		bnt	code_2301
		pTos	0x56
		lat	0x0
		lapi	0x1
		or	
		aTop	0x56
		+at	0x0
		jmp	code_2279
code_2301:
		ret	

Actor::300:
		link	0x01
		ldi	0x00
		sat	0x0
code_2308:
		lst	0x0
		lap	0x0
		lt?	
		bnt	code_2331
		pTos	0x56
		lat	0x0
		lapi	0x1
		bnot	
		and	
		aTop	0x56
		+at	0x0
		jmp	code_2308
code_2331:
		ret	

Actor::301:
		pToa	0x60
		not	
		bnt	code_2347
		pushi	0x6a
		push0	
		class	0x4
		send	0x4
		aTop	0x60
code_2347:
		pushi	0x73
		push0	
		rest	0x1
		pToa	0x60
		send	0x4
		ret	

Actor::302:
		pushi	0x54
		push0	
		rest	0x1
		pToa	0x60
		send	0x4
		pushi	0x78
		push0	
		pToa	0x60
		send	0x4
		bnt	code_2387
		pushi	0x6c
		push0	
		pToa	0x60
		send	0x4
		ldi	0x00
		aTop	0x60
code_2387:
		ret	

Actor::228:
		pushi	0x05
		pTos	0x8
		pTos	0xa
		pushi	0x04
		push0	
		lap	0x1
		send	0x4
		push	
		pushi	0x03
		push0	
		lap	0x1
		send	0x4
		push	
		lsg	0x1f
		callk	0x40, 0xa
		ret	

Actor::57:
		link	0x01
		pToa	0x62
		bnt	code_2432
		pushi	0x3c
		push1	
		pushSelf	
		send	0x6
		jmp	code_2437
code_2432:
		push1	
		pushSelf	
		callk	0x4b, 0x2
code_2437:
		push2	
		pushSelf	
		pushi	0x1b
		push0	
		lag	0x5
		send	0x4
		push	
		callk	0x4d, 0x4
		bnt	code_2456
		jmp	code_2513
code_2456:
		pTos	0x38
		ldi	0x2000
		and	
		not	
		bnt	code_2494
		push1	
		lsg	0x2
		callk	0x6, 0x2
		bnt	code_2494
		pTos	0xa
		pushi	0x0134
		push0	
		lag	0x2
		send	0x4
		lt?	
		bnt	code_2494
		ldi	0xff
		jmp	code_2513
code_2494:
		pToa	0x60
		bnt	code_2513
		pushi	0x76
		push2	
		pushi	0x3c
		pushSelf	
		send	0x8
		not	
		bnt	code_2513
		ldi	0xfe
code_2513:
		sat	0x0
		ret	

Actor::303:
		link	0x05
		pToa	0x8
		sat	0x2
		pToa	0xa
		sat	0x3
		ldi	0x00
		sat	0x4
		ldi	0x01
		sat	0x1
code_2534:
		lat	0x4
		not	
		bnt	code_2641
		ldi	0x00
		sat	0x0
code_2544:
		lat	0x4
		not	
		bnt	code_2636
		lst	0x0
		ldi	0x08
		lt?	
		bnt	code_2636
		lst	0x2
		lst	0x1
		push1	
		push2	
		lst	0x0
		ldi	0x2d
		mul	
		push	
		pushi	0x64
		callk	0x69, 0x4
		push	
		calle	0x03e7, 0x0000, 0x02
		mul	
		add	
		aTop	0x8
		lst	0x3
		lst	0x1
		push1	
		push2	
		lst	0x0
		ldi	0x2d
		mul	
		push	
		pushi	0x64
		callk	0x68, 0x4
		push	
		calle	0x03e7, 0x0000, 0x02
		mul	
		sub	
		aTop	0xa
		pushi	0x39
		push0	
		self	0x4
		not	
		bnt	code_2629
		pushi	0x0131
		push0	
		self	0x4
code_2629:
		sat	0x4
		+at	0x0
		jmp	code_2544
code_2636:
		+at	0x1
		jmp	code_2534
code_2641:
		pushi	0x011a
		push2	
		pTos	0x8
		pTos	0xa
		self	0x8
		ret	

Actor::304:
		lsp	0x1
		pToa	0x8
		le?	
		bnt	code_2681
		pTos	0x8
		lap	0x3
		lt?	
		bnt	code_2681
		lsp	0x2
		pToa	0xa
		le?	
		bnt	code_2681
		pTos	0xa
		lap	0x4
		lt?	
code_2681:
		ret	

Actor::305:
		lap	0x0
		bnt	code_2706
		lap	0x1
		bnt	code_2706
		pushi	0x03
		pushi	0x04
		pTos	0x8
		pTos	0xa
		callk	0x4e, 0x6
		jmp	code_2721
code_2706:
		pushi	0x05
		pushi	0x04
		pTos	0x44
		pTos	0x42
		pTos	0x48
		pTos	0x46
		callk	0x4e, 0xa
code_2721:
		ret	

Actor::306:
		lsp	0x0
		ldi	0x01
		ge?	
		bnt	code_2742
		lsp	0x1
		ldi	0xff
		ne?	
		bnt	code_2742
		lap	0x1
		aTop	0x5c
code_2742:
		lsp	0x0
		ldi	0x02
		ge?	
		bnt	code_2762
		lsp	0x2
		ldi	0xff
		ne?	
		bnt	code_2762
		lap	0x2
		aTop	0x2c
code_2762:
		pToa	0x64
		bnt	code_2796
		pushi	0xff
		ne?	
		bnt	code_2796
		pushi	0x70
		push1	
		class	0x1e
		push	
		pToa	0x64
		send	0x6
		bnt	code_2796
		pushi	0x6b
		push0	
		pushi	0x3b
		push0	
		self	0x4
		send	0x4
code_2796:
		ret	

Actor::307:
		link	0x08
		pushi	0x0135
		push0	
		lag	0x2
		send	0x4
		sat	0x1
		push	
		ldi	0x8ad0
		eq?	
		bnt	code_2822
		pToa	0x8
		jmp	code_2830
code_2822:
		pushi	0x0136
		push0	
		lag	0x2
		send	0x4
code_2830:
		sat	0x0
		pTos	0x5c
		ldi	0x00
		eq?	
		bnt	code_2849
		pTos	0x2c
		ldi	0x00
		eq?	
		bnt	code_2849
		ret	

code_2849:
		pushi	0x7d00
		push2	
		pTos	0x5c
		pTos	0x2c
		calle	0x03e7, 0x0003, 0x04
		div	
		sat	0x5
		lsp	0x1
		dup	
		ldi	0x00
		eq?	
		bnt	code_2886
		pushi	0x0119
		push1	
		push0	
		self	0x6
		ret	

		jmp	code_3042
code_2886:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2910
		lst	0x0
		pToa	0x8
		sub	
		sat	0x2
		lst	0x1
		pToa	0xa
		sub	
		sat	0x3
		jmp	code_3042
code_2910:
		dup	
		ldi	0x05
		eq?	
		bnt	code_2934
		pTos	0x8
		lat	0x0
		sub	
		sat	0x2
		pTos	0xa
		lat	0x1
		sub	
		sat	0x3
		jmp	code_3042
code_2934:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2952
		lat	0x5
		sat	0x2
		ldi	0x00
		sat	0x3
		jmp	code_3042
code_2952:
		dup	
		ldi	0x07
		eq?	
		bnt	code_2971
		lat	0x5
		neg	
		sat	0x2
		ldi	0x00
		sat	0x3
		jmp	code_3042
code_2971:
		pushi	0x00b4
		pushi	0x04
		pTos	0x8
		pTos	0xa
		lst	0x0
		lst	0x1
		callk	0x3f, 0x8
		sat	0x4
		lt?	
		bnt	code_3001
		lst	0x4
		ldi	0x0168
		sub	
		sat	0x4
code_3001:
		lst	0x4
		ldi	0x5a
		add	
		push	
		ldi	0x02
		div	
		push	
		pushi	0x2d
		lsp	0x1
		ldi	0x02
		sub	
		mul	
		add	
		sat	0x4
		push2	
		push	
		pushi	0x64
		callk	0x68, 0x4
		sat	0x2
		push2	
		lst	0x4
		pushi	0x64
		callk	0x69, 0x4
		neg	
		sat	0x3
code_3042:
		toss	
		lst	0x5
		ldi	0x05
		div	
		sat	0x5
code_3050:
		push1	
		lst	0x3
		callk	0x3d, 0x2
		push	
		lat	0x5
		lt?	
		bnt	code_3093
		push1	
		lst	0x2
		callk	0x3d, 0x2
		push	
		lat	0x5
		lt?	
		bnt	code_3093
		lst	0x2
		ldi	0x05
		mul	
		sat	0x2
		lst	0x3
		ldi	0x05
		mul	
		sat	0x3
		jmp	code_3050
code_3093:
		pushi	0x00e8
		push0	
		lag	0x2
		send	0x4
		sat	0x7
		bnt	code_3191
		lag	0x43
		bnt	code_3191
		pushi	0x07
		pTos	0x8
		pTos	0xa
		pTos	0x8
		lat	0x2
		add	
		push	
		pTos	0xa
		lat	0x3
		add	
		push	
		pushi	0x1b
		push0	
		lat	0x7
		send	0x4
		push	
		pushi	0x59
		push0	
		lat	0x7
		send	0x4
		push	
		push0	
		callk	0x77, 0xe
		sat	0x6
		push2	
		push	
		push2	
		calle	0x03e7, 0x0006, 0x04
		push	
		pToa	0x8
		sub	
		sat	0x2
		push2	
		lst	0x6
		pushi	0x03
		calle	0x03e7, 0x0006, 0x04
		push	
		pToa	0xa
		sub	
		sat	0x3
		push2	
		pushi	0x03
		lst	0x6
		callk	0x72, 0x4
code_3191:
		lat	0x2
		bt	code_3198
		lat	0x3
code_3198:
		bnt	code_3226
		pushi	0x0119
		pushi	0x03
		class	0x1e
		push	
		pTos	0x8
		lat	0x2
		add	
		push	
		pTos	0xa
		lat	0x3
		add	
		push	
		self	0xa
		jmp	code_3261
code_3226:
		lap	0x1
		bnt	code_3254
		pushi	0x0119
		push1	
		push0	
		pushi	0x00e2
		push1	
		push	
		ldi	0x01
		sub	
		push	
		ldi	0x2d
		mul	
		push	
		self	0xc
		jmp	code_3261
code_3254:
		pushi	0x0119
		push1	
		push0	
		self	0x6
code_3261:
		ret	

Actor::216:
		pToa	0x64
		bnt	code_3284
		pushi	0x00d5
		push0	
		send	0x4
		bnt	code_3284
		pushi	0x00d8
		push0	
		pToa	0x64
		send	0x4
code_3284:
		pushi	0x00d8
		push0	
		super	0x2f, 0x4
		ret	

Actor::160:
		link	0x01
		lsp	0x0
		ldi	0x00
		eq?	
		bnt	code_3314
		pushi	0x00a0
		push0	
		super	0x2f, 0x4
		ldi	0x00
		jmp	code_3366
code_3314:
		push1	
		lsp	0x1
		callk	0x6, 0x2
		not	
		bnt	code_3340
		pushi	0x00a0
		push1	
		lsp	0x1
		rest	0x2
		super	0x2f, 0x6
		ldi	0x00
		jmp	code_3366
code_3340:
		push2	
		push0	
		lap	0x1
		send	0x4
		push	
		ldi	0x8000
		and	
		bnt	code_3364
		pushi	0x6a
		push0	
		lap	0x1
		send	0x4
		jmp	code_3366
code_3364:
		lap	0x1
code_3366:
		sat	0x0
		bnt	code_3393
		pToa	0x66
		bnt	code_3381
		pushi	0x6c
		push0	
		send	0x4
code_3381:
		pushi	0x6b
		push1	
		pushSelf	
		rest	0x2
		lat	0x0
		aTop	0x66
		send	0x6
code_3393:
		ret	

Actor::290:
		pToa	0x54
		not	
		bnt	code_3403
		jmp	code_3453
code_3403:
		lap	0x0
		bnt	code_3413
		lap	0x1
		jmp	code_3421
code_3413:
		pushi	0x0123
		push0	
		lag	0x1
		send	0x4
code_3421:
		push	
		pToa	0x54
		lt?	
		bnt	code_3437
		pushi	0x011b
		push0	
		self	0x4
		jmp	code_3453
code_3437:
		pToa	0x50
		bt	code_3444
		pToa	0x64
code_3444:
		bnt	code_3453
		pushi	0x011d
		push0	
		self	0x4
code_3453:
		ret	

Actor::226:
		lap	0x0
		bnt	code_3463
		lap	0x1
		aTop	0xe
code_3463:
		pToa	0x66
		bnt	code_3493
		pushi	0x3c
		pushi	0x03
		pushSelf	
		pTos	0xe
		lsp	0x0
		ldi	0x02
		ge?	
		bnt	code_3485
		lap	0x2
code_3485:
		push	
		pToa	0x66
		send	0xa
		jmp	code_3527
code_3493:
		push2	
		pushSelf	
		pTos	0xe
		callk	0x4c, 0x4
		lsp	0x0
		ldi	0x02
		ge?	
		bnt	code_3527
		push1	
		lsp	0x2
		callk	0x6, 0x2
		bnt	code_3527
		pushi	0x008b
		push0	
		rest	0x3
		lap	0x2
		send	0x4
code_3527:
		pToa	0xe
		ret	


.CLASS Actor of 0x2f
Function area offset: 0xde
Selectors [55]:
  [0x0] = 0x30
  [0x1] = 0x2f
  [0x2] = 0x8000
  [0x17] = {'val': 'Actor', 'id': 'string_3'}
  [0x4] = 0x0
  [0x3] = 0x0
  [0x55] = 0x0
  [0x3a] = 0x0
  [0x10b] = 0x0
  [0x9] = 0x0
  [0xa] = 0x0
  [0xb] = 0x0
  [0xc] = 0x0
  [0x10c] = 0x0
  [0x10d] = 0x6789
  [0x109] = 0x0
  [0x10e] = 0x6789
  [0x10f] = 0x0
  [0x110] = 0x0
  [0x111] = 0x0
  [0x112] = 0x6789
  [0x113] = 0x0
  [0x37] = 0x2
  [0x5] = 0x0
  [0x6] = 0x0
  [0x7] = 0x0
  [0x3f] = 0x0
  [0x8] = 0x0
  [0x11] = 0x0
  [0xd] = 0x0
  [0xe] = 0x0
  [0xf] = 0x0
  [0x10] = 0x0
  [0x13] = 0x0
  [0x14] = 0x0
  [0x15] = 0x0
  [0x16] = 0x0
  [0x5b] = 0x0
  [0xd9] = 0x0
  [0x88] = 0x0
  [0xda] = 0x0
  [0x83] = 0x0
  [0x123] = 0x0
  [0x12] = 0x8000
  [0xde] = 0x0
  [0xdf] = 0x0
  [0x36] = 0x3
  [0x38] = 0x0
  [0x124] = 0x0
  [0x125] = 0x0
  [0x3b] = 0x0
  [0x3e] = 0x0
  [0x126] = 0x0
  [0x127] = 0x0
  [0x128] = 0x0
Overriden functions: 24
  [0x6b]  = Actor::107   	 ; @0x6b6
  [0x3c]  = Actor::60   	 ; @0x6c7
  [0x11a]  = Actor::282   	 ; @0x76a
  [0xa0]  = Actor::160   	 ; @0xcdc
  [0x54]  = Actor::84   	 ; @0x842
  [0xd8]  = Actor::216   	 ; @0xcbe
  [0x122]  = Actor::290   	 ; @0xd42
  [0x119]  = Actor::281   	 ; @0x78e
  [0x129]  = Actor::297   	 ; @0x7da
  [0x12a]  = Actor::298   	 ; @0x8c2
  [0x12b]  = Actor::299   	 ; @0x8e1
  [0x12c]  = Actor::300   	 ; @0x8fe
  [0x12d]  = Actor::301   	 ; @0x91c
  [0x12e]  = Actor::302   	 ; @0x935
  [0xdc]  = Actor::220   	 ; @0x817
  [0x3d]  = Actor::61   	 ; @0x83b
  [0x12f]  = Actor::303   	 ; @0x9d4
  [0x130]  = Actor::304   	 ; @0xa5c
  [0x131]  = Actor::305   	 ; @0xa7a
  [0xe4]  = Actor::228   	 ; @0x954
  [0x39]  = Actor::57   	 ; @0x970
  [0x132]  = Actor::306   	 ; @0xaa2
  [0x133]  = Actor::307   	 ; @0xaed
  [0xe2]  = Actor::226   	 ; @0xd7e

.STRINGS
string_0: "PicView"		 ; special
string_1: "View"		 ; special
string_2: "Prop"		 ; special
string_3: "Actor"		 ; special
string_unused_4: ""


.RELOCATION
num of pointers: 4
0x72, 0x3ae, 0x5e8, 0xddc
