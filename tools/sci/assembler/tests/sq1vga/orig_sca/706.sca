.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.EXPORTS
OBJECT viewCartridge of 0x80

.OBJECT screen of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'screen', 'id': 'string_0'}
  [#4] = 0x98
  [#5] = 0x87
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0xa1
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.CODE
viewCartridge::108:
		pushi	0x6c
		push0	
		rest	0x01
		super	0x80, 0x4
		push2	
		pushi	0x0081
		pushi	0x63
		callk	0x1, 0x4
		push1	
		pushi	0x02c2
		callk	0x3, 0x2
		ret	

viewCartridge::129:
		pToa	0x28
		bnt	code_173
		pTos	0x26
		ldi	0x00
		le?	
		bnt	code_182
		pushi	0x4c
		push1	
		push1	
		lap	0x01
		send	0x06
		ldi	0x00
		aTop	0x12
		ldi	0x01
		aTop	0x10
		jmp	code_182
code_173:
		pushi	0x0081
		push1	
		lsp	0x01
		super	0x80, 0x6
code_182:
		ret	

viewCartridge::60:
		pushi	0x3c
		push0	
		super	0x80, 0x4
		dpToa	0x26
		ret	

viewCartridge::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_223
		push0	
		callb	0x2, 0x0
		pushi	0x009d
		push0	
		lag	0x64
		send	0x04
		ldi	0x12
		aTop	0x16
		jmp	code_1260
code_223:
		dup	
		ldi	0x01
		eq?	
		bnt	code_257
		pushi	0x011f
		push1	
		push1	
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x008b
		pushi	0x00b2
		pushSelf	
		lag	0x00
		send	0x12
		jmp	code_1260
code_257:
		dup	
		ldi	0x02
		eq?	
		bnt	code_278
		pushi	0x00e2
		push2	
		pushi	0x2d
		pushSelf	
		lag	0x00
		send	0x08
		jmp	code_1260
code_278:
		dup	
		ldi	0x03
		eq?	
		bnt	code_313
		pushi	0x6b
		push0	
		pushi	0x00a0
		push1	
		push1	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	screen
		send	0x18
		jmp	code_1260
code_313:
		dup	
		ldi	0x04
		eq?	
		bnt	code_413
		pushi	0x74
		push1	
		pushi	0x69
		lag	0x05
		send	0x06
		pushi	0x74
		push1	
		pushi	0x011b
		lag	0x05
		send	0x06
		pushi	0x6c
		push0	
		push2	
		pushi	0x02bf
		pushi	0x0e
		callk	0x2, 0x4
		send	0x04
		pushi	0x6c
		push0	
		push2	
		pushi	0x02bf
		pushi	0x0f
		callk	0x2, 0x4
		send	0x04
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0a
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		push0	
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x03
		aTop	0x12
		jmp	code_1260
code_413:
		dup	
		ldi	0x05
		eq?	
		bnt	code_484
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x2b
		push1	
		pushi	0x019d
		pushi	0x06
		push1	
		pushi	0xff
		pushi	0x2a
		push0	
		lag	0x9a
		send	0x10
		pushi	0x0b
		pushi	0x02c2
		push1	
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0a
		aTop	0x12
		jmp	code_1260
code_484:
		dup	
		ldi	0x06
		eq?	
		bnt	code_537
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		push2	
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x10
		aTop	0x12
		jmp	code_1260
code_537:
		dup	
		ldi	0x07
		eq?	
		bnt	code_591
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x03
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0a
		aTop	0x12
		jmp	code_1260
code_591:
		dup	
		ldi	0x08
		eq?	
		bnt	code_645
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x04
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0c
		aTop	0x12
		jmp	code_1260
code_645:
		dup	
		ldi	0x09
		eq?	
		bnt	code_699
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x05
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0c
		aTop	0x12
		jmp	code_1260
code_699:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_753
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x06
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0c
		aTop	0x12
		jmp	code_1260
code_753:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_807
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x07
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0c
		aTop	0x12
		jmp	code_1260
code_807:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_861
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x08
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x0a
		aTop	0x12
		jmp	code_1260
code_861:
		dup	
		ldi	0x0d
		eq?	
		bnt	code_939
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		push2	
		pushi	0x05
		pushi	0x0098
		callb	0xb, 0x4
		pushi	0x04
		lea	0x02, 0x00
		push	
		pushi	0x02c2
		pushi	0x09
		lsg	0xb8
		callk	0x48, 0x8
		pushi	0x0a
		lea	0x02, 0x00
		push	
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x14
		ldi	0x14
		aTop	0x12
		jmp	code_1260
code_939:
		dup	
		ldi	0x0e
		eq?	
		bnt	code_993
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x0a
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x10
		aTop	0x12
		jmp	code_1260
code_993:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_1047
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x0b
		pushi	0x02c2
		pushi	0x0b
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a5
		pushi	0x64
		pushi	0x4e
		pushi	0x28
		pushi	0x66
		lsg	0x88
		callk	0x1b, 0x16
		ldi	0x04
		aTop	0x12
		jmp	code_1260
code_1047:
		dup	
		ldi	0x10
		eq?	
		bnt	code_1222
		pushi	0x018a
		push2	
		pushi	0x63
		pushi	0x0d
		lag	0x02
		send	0x08
		pushi	0x009d
		push0	
		pushi	0x06
		push1	
		push0	
		lag	0x9a
		send	0x0a
		pushi	0x2a
		push1	
		push0	
		pushi	0x009d
		pushi	0x04
		pushi	0x7f
		pushi	0x19
		pushi	0x0a
		push0	
		lag	0x64
		send	0x12
		pushi	0x74
		push1	
		pushi	0x00c0
		lag	0x05
		send	0x06
		pushi	0x74
		push1	
		pushi	0x011d
		lag	0x05
		send	0x06
		pushi	0x011f
		push1	
		push0	
		lag	0x00
		send	0x06
		pushi	0x6b
		push0	
		pushi	0x024d
		push0	
		push2	
		pushi	0x02bf
		pushi	0x0e
		callk	0x2, 0x4
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x024d
		push0	
		push2	
		pushi	0x02bf
		pushi	0x0f
		callk	0x2, 0x4
		send	0x08
		pushi	0x69
		push0	
		pushi	0x021c
		push0	
		lag	0x00
		send	0x04
		send	0x04
		pushi	0x018a
		push2	
		pushi	0x3d
		pushi	0x0a
		lag	0x02
		send	0x08
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x14
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	screen
		send	0x18
		ldi	0x03
		aTop	0x12
		jmp	code_1260
code_1222:
		dup	
		ldi	0x11
		eq?	
		bnt	code_1244
		pushi	0x6c
		push0	
		lofsa	screen
		send	0x04
		ldi	0x01
		aTop	0x12
		jmp	code_1260
code_1244:
		dup	
		ldi	0x12
		eq?	
		bnt	code_1260
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x04
code_1260:
		toss	
		ret	


.OBJECT viewCartridge of 0x80
Exported
Function area offset: 0x2c
Selectors [21]:
  [#0] = 0x80
  [#1] = 0x80
  [#2] = 0x0
  [#3] = {'val': 'viewCartridge', 'id': 'string_1'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0xa
  [#19] = 0x0
  [#20] = 0x1
Overriden functions: 4
  [0x3c]  = viewCartridge::60   	 ; @0xb7
  [0x6c]  = viewCartridge::108   	 ; @0x74
  [0x8a]  = viewCartridge::138   	 ; @0xc0
  [0x81]  = viewCartridge::129   	 ; @0x8d

.STRINGS
string_0: "screen"		 ; special
string_1: "viewCartridge"		 ; special
string_unused_2: ""
string_unused_3: ""


.PRELOAD_TEXT

.LOCAL_VARS
0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

.RELOCATION
 ; This section is automatically created on assembling, regardless of the content written here
 ; the following is only for informative purposes
num of pointers: 5
; OBJECT screen of 0x2f selector #3
; code_305  ; lofsa
; code_1210  ; lofsa
; code_1232  ; lofsa
; OBJECT viewCartridge of 0x80 selector #3
