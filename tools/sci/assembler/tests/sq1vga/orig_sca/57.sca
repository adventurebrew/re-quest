.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.EXPORTS
OBJECT rm57 of 0x43
OBJECT helmet of 0x30

.CODE
rm57::107:
		push1	
		pushi	0x3e
		callb	0x7, 0x2
		pushi	0x0187
		push1	
		pushi	0x02bf
		self	0x6
		push0	
		callb	0x2, 0x0
		ldi	0x02
		sag	0xa6
		pushi	0x0b
		pushi	0x0080
		pushi	0x25
		pushi	0x24
		pushi	0x009d
		pushi	0x01a1
		pushi	0x55
		pushi	0x01a2
		pushi	0x27
		push1	
		pushi	0x3d
		push2	
		calle	0x03be, 0x0000, 0x16
		pushi	0x0a
		pushi	0x0084
		pushi	0x0193
		pushi	0x0202
		pushi	0x0201
		pushi	0x01fa
		pushi	0x01fc
		pushi	0x0210
		pushi	0x0211
		pushi	0x0218
		pushi	0x021a
		calle	0x03be, 0x0000, 0x14
		pushi	0x6b
		push0	
		lofsa	sarien
		send	0x4
		pushi	0x6b
		push0	
		lofsa	vent
		send	0x4
		pushi	0x6b
		push0	
		lofsa	washerDoor
		send	0x4
		lsg	0xc
		dup	
		ldi	0x37
		eq?	
		bnt	code_168
		pushi	0x05
		push1	
		pushi	0x25
		pushi	0x06
		push1	
		push1	
		pushi	0x011a
		push2	
		pushi	0x6f
		pushi	0x76
		lag	0x0
		send	0x14
		jmp	code_266
code_168:
		dup	
		ldi	0x36
		eq?	
		bnt	code_252
		push1	
		pushi	0x1d
		callb	0x7, 0x2
		push1	
		pushi	0x22
		callb	0x8, 0x2
		push1	
		pushi	0x23
		callb	0x7, 0x2
		push2	
		pushi	0x0084
		pushi	0x0193
		callk	0x0, 0x4
		pushi	0x6b
		push0	
		pushi	0x69
		push0	
		pushi	0x011f
		push1	
		push1	
		pushi	0x011b
		push0	
		lofsa	trunk
		send	0x12
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	trunk
		send	0x4
		push	
		pushi	0x03
		push0	
		lofsa	trunk
		send	0x4
		push	
		lag	0x0
		send	0x8
		jmp	code_266
code_252:
		pushi	0x011a
		push2	
		pushi	0x010e
		pushi	0x00b1
		lag	0x0
		send	0x8
code_266:
		toss	
		pushi	0x6b
		push0	
		super	0x43, 0x4
		pushi	0x2b
		push0	
		lag	0x64
		send	0x4
		push	
		ldi	0x021a
		ne?	
		bnt	code_306
		pushi	0x2b
		push1	
		pushi	0x021a
		pushi	0x06
		push1	
		pushi	0xff
		pushi	0x2a
		push0	
		lag	0x64
		send	0x10
code_306:
		pushi	0x73
		pushi	0x06
		lofsa	ventShaft
		push	
		lofsa	shadows
		push	
		lofsa	floor2
		push	
		lofsa	floor3
		push	
		lofsa	floor4
		push	
		lofsa	washerFeature
		push	
		pushi	0x74
		push1	
		pushi	0x6b
		pushi	0x3c
		push0	
		lag	0x20
		send	0x1a
		pushi	0x6b
		push0	
		pushi	0x69
		push0	
		lag	0x0
		send	0x8
		push1	
		pushi	0x1d
		callb	0x6, 0x2
		bnt	code_402
		pushi	0x5a
		push1	
		lea	0x2, 0x0
		push	
		pushi	0x59
		push1	
		pushi	0x1f
		lofsa	openPoly
		send	0xc
		pushi	0x5a
		push1	
		lea	0x2, 0x3c
		push	
		pushi	0x59
		push1	
		pushi	0x1c
		lofsa	closedPoly
		send	0xc
		jmp	code_436
code_402:
		pushi	0x5a
		push1	
		lea	0x2, 0x74
		push	
		pushi	0x59
		push1	
		pushi	0x19
		lofsa	openPoly
		send	0xc
		pushi	0x5a
		push1	
		lea	0x2, 0xa6
		push	
		pushi	0x59
		push1	
		pushi	0x17
		lofsa	closedPoly
		send	0xc
code_436:
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		eq?	
		bnt	code_470
		pushi	0x04
		pushi	0x0080
		pushi	0x01df
		pushi	0x01a1
		pushi	0x30
		calle	0x03be, 0x0000, 0x08
code_470:
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		ne?	
		bnt	code_496
		pushi	0x6b
		push0	
		lofsa	scraps
		send	0x4
		jmp	code_528
code_496:
		pushi	0x6b
		push0	
		pushi	0x008c
		push1	
		lofsa	killEgoTimeOut
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	washerDoor
		send	0x4
		push	
		ldi	0x01
		sub	
		push	
		lofsa	helmet
		send	0x10
code_528:
		push1	
		pushi	0x45
		callb	0x6, 0x2
		bnt	code_550
		pushi	0x0174
		push1	
		lofsa	openPoly
		push	
		self	0x6
		jmp	code_560
code_550:
		pushi	0x0174
		push1	
		lofsa	closedPoly
		push	
		self	0x6
code_560:
		lsg	0xc
		dup	
		ldi	0x37
		eq?	
		bnt	code_592
		pushi	0x00c0
		push0	
		lag	0x0
		send	0x4
		pushi	0x008c
		push1	
		lofsa	climbOutOfVent
		push	
		lag	0x2
		send	0x6
		jmp	code_634
code_592:
		dup	
		ldi	0x36
		eq?	
		bnt	code_614
		pushi	0x008c
		push1	
		lofsa	egoClimbOutTrunk
		push	
		lag	0x2
		send	0x6
		jmp	code_634
code_614:
		pushi	0x00c0
		push0	
		lag	0x0
		send	0x4
		pushi	0x008c
		push1	
		lofsa	walkInRoom
		push	
		lag	0x2
		send	0x6
code_634:
		toss	
		ret	

rm57::60:
		pToa	0x8
		bnt	code_646
		ldi	0x00
		jmp	code_695
code_646:
		lal	0xd4
		bnt	code_669
		pushi	0x008c
		push1	
		push2	
		pushi	0x009d
		push0	
		callk	0x2, 0x4
		push	
		self	0x6
		jmp	code_695
code_669:
		pushi	0x0131
		push1	
		push0	
		lag	0x0
		send	0x6
		push	
		ldi	0x02
		and	
		bnt	code_695
		pushi	0x008c
		push1	
		lofsa	walkOutRoom
		push	
		self	0x6
code_695:
		pushi	0x3c
		push0	
		super	0x43, 0x4
		ret	

rm57::375:
		pushi	0x009d
		push0	
		lag	0x64
		send	0x4
		pushi	0x0177
		push1	
		lsp	0x1
		super	0x43, 0x6
		ret	


.OBJECT rm57 of 0x43
Exported
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x43
  [#1] = 0x43
  [#2] = 0x0
  [#3] = {'val': 'rm57', 'id': 'string_1'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = {'val': 'This room is similar to the storage room, with a large machine installed in one bulkhead.', 'id': 'string_0'}
  [#10] = 0x39
  [#11] = 0xffff
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x42
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0xa0
  [#21] = 0x8ad0
  [#22] = 0x0
Overriden functions: 3
  [0x6b]  = rm57::107   	 ; @0x12
  [0x3c]  = rm57::60   	 ; @0x27c
  [0x177]  = rm57::375   	 ; @0x2be

.OBJECT openPoly of 0x23
Function area offset: 0x12
Selectors [8]:
  [#0] = 0x23
  [#1] = 0x23
  [#2] = 0x0
  [#3] = {'val': 'openPoly', 'id': 'string_2'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x2
  [#7] = 0x0
Overriden functions: 0

.OBJECT closedPoly of 0x23
Function area offset: 0x12
Selectors [8]:
  [#0] = 0x23
  [#1] = 0x23
  [#2] = 0x0
  [#3] = {'val': 'closedPoly', 'id': 'string_3'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x2
  [#7] = 0x0
Overriden functions: 0

.CODE
trunk::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_882
		push2	
		pushi	0x39
		push0	
		calle	0xff, 0x00, 0x04
		jmp	code_965
code_882:
		dup	
		ldi	0x02
		eq?	
		bnt	code_900
		push2	
		pushi	0x39
		push1	
		calle	0xff, 0x00, 0x04
		jmp	code_965
code_900:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_918
		push2	
		pushi	0x39
		push2	
		calle	0xff, 0x00, 0x04
		jmp	code_965
code_918:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_936
		push2	
		pushi	0x39
		push2	
		calle	0xff, 0x00, 0x04
		jmp	code_965
code_936:
		dup	
		ldi	0x04
		eq?	
		bnt	code_954
		push2	
		pushi	0x39
		push2	
		calle	0xff, 0x00, 0x04
		jmp	code_965
code_954:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x2f, 0x6
code_965:
		toss	
		ret	

		bnot	

.OBJECT trunk of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'trunk', 'id': 'string_5'}
  [#4] = 0x68
  [#5] = 0x73
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'On the floor sits the trunk you rode here in.', 'id': 'string_4'}
  [#22] = 0x2
  [#23] = 0x9a
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = trunk::266   	 ; @0x35e

.CODE
vent::107:
		pushi	0x6b
		push0	
		rest	0x1
		super	0x2f, 0x4
		push1	
		pushi	0x25
		callb	0x6, 0x2
		bnt	code_1108
		pushi	0x011e
		push1	
		pushi	0x00db
		push0	
		self	0x4
		push	
		self	0x6
code_1108:
		pushi	0x011b
		push0	
		self	0x4
		ret	

vent::266:
		lsp	0x1
		dup	
		ldi	0x02
		eq?	
		bnt	code_1157
		push1	
		pushi	0x25
		callb	0x6, 0x2
		bnt	code_1145
		push2	
		pushi	0x39
		pushi	0x03
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1145:
		push2	
		pushi	0x39
		pushi	0x04
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1157:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1278
		lsp	0x2
		ldi	0x04
		eq?	
		bnt	code_1264
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		ne?	
		bnt	code_1199
		push2	
		pushi	0x39
		pushi	0x05
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1199:
		push1	
		pushi	0x1d
		callb	0x6, 0x2
		not	
		bnt	code_1224
		pushi	0x008c
		push1	
		lofsa	cantReachIt
		push	
		lag	0x2
		send	0x6
		jmp	code_1427
code_1224:
		pushi	0x07
		push0	
		lofsa	vent
		send	0x4
		not	
		not	
		bnt	code_1249
		push2	
		pushi	0x39
		pushi	0x06
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1249:
		pushi	0x008c
		push1	
		lofsa	egoTestVent
		push	
		lag	0x2
		send	0x6
		jmp	code_1427
code_1264:
		pushi	0x010a
		push2	
		lsp	0x1
		lsp	0x2
		super	0x2f, 0x8
		jmp	code_1427
code_1278:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1376
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		ne?	
		bnt	code_1312
		push2	
		pushi	0x39
		pushi	0x05
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1312:
		push1	
		pushi	0x1d
		callb	0x6, 0x2
		not	
		bnt	code_1337
		pushi	0x008c
		push1	
		lofsa	cantReachIt
		push	
		lag	0x2
		send	0x6
		jmp	code_1427
code_1337:
		pushi	0x07
		push0	
		lofsa	vent
		send	0x4
		not	
		bnt	code_1364
		pushi	0x008c
		push1	
		lofsa	egoTestVent
		push	
		lag	0x2
		send	0x6
		jmp	code_1427
code_1364:
		push2	
		pushi	0x39
		pushi	0x06
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1376:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_1395
		push2	
		pushi	0x39
		pushi	0x07
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1395:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_1414
		push2	
		pushi	0x39
		pushi	0x08
		calle	0xff, 0x00, 0x04
		jmp	code_1427
code_1414:
		pushi	0x010a
		push2	
		lsp	0x1
		lsp	0x2
		rest	0x3
		super	0x2f, 0x8
code_1427:
		toss	
		ret	

		bnot	

.OBJECT vent of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'vent', 'id': 'string_7'}
  [#4] = 0x5c
  [#5] = 0x31
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This is the protruding terminus of the vent shaft by which you entered.', 'id': 'string_6'}
  [#22] = 0x2
  [#23] = 0x9a
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 2
  [0x6b]  = vent::107   	 ; @0x436
  [0x10a]  = vent::266   	 ; @0x45b

.CODE
washerDoor::107:
		pushi	0x6b
		push0	
		rest	0x1
		super	0x2f, 0x4
		push1	
		pushi	0x45
		callb	0x6, 0x2
		bnt	code_1580
		pushi	0x011e
		push1	
		pushi	0x00db
		push0	
		lofsa	washerDoor
		send	0x4
		push	
		lofsa	washerDoor
		send	0x6
code_1580:
		pushi	0x011b
		push0	
		lofsa	washerDoor
		send	0x4
		ret	

washerDoor::266:
		lsp	0x1
		dup	
		ldi	0x02
		eq?	
		bnt	code_1638
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		eq?	
		bnt	code_1626
		push2	
		pushi	0x39
		pushi	0x09
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1626:
		push2	
		pushi	0x39
		pushi	0x0a
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1638:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1712
		push1	
		pushi	0x45
		callb	0x6, 0x2
		not	
		bnt	code_1670
		pushi	0x008c
		push1	
		lofsa	openWasherDoor
		push	
		lag	0x2
		send	0x6
		jmp	code_1782
code_1670:
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		eq?	
		bnt	code_1700
		pushi	0x008c
		push1	
		lofsa	getInWasher
		push	
		lag	0x2
		send	0x6
		jmp	code_1782
code_1700:
		push2	
		pushi	0x39
		pushi	0x0b
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1712:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_1731
		push2	
		pushi	0x39
		pushi	0x0c
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1731:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_1750
		push2	
		pushi	0x39
		pushi	0x0d
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1750:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1769
		push2	
		pushi	0x39
		pushi	0x0e
		calle	0xff, 0x00, 0x04
		jmp	code_1782
code_1769:
		pushi	0x010a
		push2	
		lsp	0x1
		lsp	0x2
		rest	0x3
		super	0x2f, 0x8
code_1782:
		toss	
		ret	


.OBJECT washerDoor of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'washerDoor', 'id': 'string_9'}
  [#4] = 0xb0
  [#5] = 0x52
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'Behind the glass door of the machine, you can see a helmet that has been carelessly left inside after the dry cycle.', 'id': 'string_8'}
  [#22] = 0x2
  [#23] = 0x9d
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x8
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 2
  [0x6b]  = washerDoor::107   	 ; @0x608
  [0x10a]  = washerDoor::266   	 ; @0x636

.CODE
scraps::107:
		pushi	0x00d3
		push1	
		pushi	0x13
		lag	0x0
		send	0x6
		bnt	code_1916
		ldi	0x01
		jmp	code_1918
code_1916:
		ldi	0x00
code_1918:
		aTop	0x32
		pushi	0x6b
		push0	
		rest	0x1
		super	0x2e, 0x4
		pushi	0x0117
		pushi	0x04
		pushi	0x03
		push2	
		pushi	0x0b
		pushi	0x0c
		self	0xc
		ret	

scraps::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_1990
		pushi	0x07
		push0	
		lofsa	scraps
		send	0x4
		bnt	code_1975
		push2	
		pushi	0x39
		pushi	0x0f
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_1975:
		pushi	0x008c
		push1	
		lofsa	getId
		push	
		lag	0x2
		send	0x6
		jmp	code_2100
code_1990:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2032
		pushi	0x07
		push0	
		lofsa	scraps
		send	0x4
		bnt	code_2020
		push2	
		pushi	0x39
		pushi	0x10
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_2020:
		push2	
		pushi	0x39
		pushi	0x11
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_2032:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_2051
		push2	
		pushi	0x39
		pushi	0x12
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_2051:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_2070
		push2	
		pushi	0x39
		pushi	0x13
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_2070:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2089
		push2	
		pushi	0x39
		pushi	0x14
		calle	0xff, 0x00, 0x04
		jmp	code_2100
code_2089:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x2e, 0x6
code_2100:
		toss	
		ret	


.OBJECT scraps of 0x2e
Function area offset: 0x4e
Selectors [38]:
  [#0] = 0x2e
  [#1] = 0x2e
  [#2] = 0x0
  [#3] = {'val': 'scraps', 'id': 'string_10'}
  [#4] = 0xbf
  [#5] = 0x76
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x64
  [#10] = 0x0
  [#11] = 0x87
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0xb4
  [#18] = 0x77
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x9d
  [#24] = 0x2
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4000
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
Overriden functions: 2
  [0x6b]  = scraps::107   	 ; @0x76a
  [0x10a]  = scraps::266   	 ; @0x797

.CODE
sarien::107:
		pushi	0x6b
		push0	
		rest	0x1
		super	0x30, 0x4
		pushi	0x011b
		push0	
		pushi	0x69
		push0	
		pushi	0x011f
		push1	
		push1	
		self	0xe
		ret	

sarien::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_2250
		push2	
		pushi	0x39
		pushi	0x15
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2250:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2297
		pushi	0x05
		push0	
		lofsa	sarien
		send	0x4
		push	
		ldi	0x01a2
		eq?	
		bnt	code_2285
		push2	
		pushi	0x39
		pushi	0x16
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2285:
		push2	
		pushi	0x39
		pushi	0x17
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2297:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_2316
		push2	
		pushi	0x39
		pushi	0x15
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2316:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_2335
		push2	
		pushi	0x39
		pushi	0x15
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2335:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2354
		push2	
		pushi	0x39
		pushi	0x15
		calle	0xff, 0x00, 0x04
		jmp	code_2365
code_2354:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x30, 0x6
code_2365:
		toss	
		ret	

		bnot	

.OBJECT sarien of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'sarien', 'id': 'string_11'}
  [#4] = 0x116
  [#5] = 0xb5
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x1a1
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x3
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x3
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x6b]  = sarien::107   	 ; @0x89e
  [0x10a]  = sarien::266   	 ; @0x8b5

.CODE
helmet::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_2582
		push1	
		pushi	0x45
		callb	0x6, 0x2
		not	
		bnt	code_2540
		pushi	0x008c
		push1	
		lofsa	openWasherDoor
		push	
		lag	0x2
		send	0x6
		jmp	code_2669
code_2540:
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		eq?	
		bnt	code_2570
		pushi	0x008c
		push1	
		lofsa	getInWasher
		push	
		lag	0x2
		send	0x6
		jmp	code_2669
code_2570:
		push2	
		pushi	0x39
		pushi	0x18
		calle	0xff, 0x00, 0x04
		jmp	code_2669
code_2582:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2601
		push2	
		pushi	0x39
		pushi	0x19
		calle	0xff, 0x00, 0x04
		jmp	code_2669
code_2601:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_2620
		push2	
		pushi	0x39
		pushi	0x1a
		calle	0xff, 0x00, 0x04
		jmp	code_2669
code_2620:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_2639
		push2	
		pushi	0x39
		pushi	0x1b
		calle	0xff, 0x00, 0x04
		jmp	code_2669
code_2639:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2658
		push2	
		pushi	0x39
		pushi	0x1c
		calle	0xff, 0x00, 0x04
		jmp	code_2669
code_2658:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x30, 0x6
code_2669:
		toss	
		ret	

		bnot	

.OBJECT helmet of 0x30
Exported
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'helmet', 'id': 'string_12'}
  [#4] = 0xd2
  [#5] = 0x5e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'helmet', 'id': 'string_12'}
  [#22] = 0x2
  [#23] = 0x9d
  [#24] = 0x3
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4000
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x6
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x6
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 1
  [0x10a]  = helmet::266   	 ; @0x9ca

.CODE
ventShaft::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_2827
		push2	
		pushi	0x39
		pushi	0x1d
		calle	0xff, 0x00, 0x04
		jmp	code_2914
code_2827:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2846
		push2	
		pushi	0x39
		pushi	0x1e
		calle	0xff, 0x00, 0x04
		jmp	code_2914
code_2846:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_2865
		push2	
		pushi	0x39
		pushi	0x1f
		calle	0xff, 0x00, 0x04
		jmp	code_2914
code_2865:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_2884
		push2	
		pushi	0x39
		pushi	0x1f
		calle	0xff, 0x00, 0x04
		jmp	code_2914
code_2884:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2903
		push2	
		pushi	0x39
		pushi	0x1f
		calle	0xff, 0x00, 0x04
		jmp	code_2914
code_2903:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x7b, 0x6
code_2914:
		toss	
		ret	


.OBJECT ventShaft of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'ventShaft', 'id': 'string_15'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'vent shaft', 'id': 'string_13'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x2000
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'A large vent shaft protrudes from the left wall of the laundry room.', 'id': 'string_14'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = ventShaft::266   	 ; @0xaf6

.CODE
shadows::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_3007
		push2	
		pushi	0x39
		pushi	0x20
		calle	0xff, 0x00, 0x04
		jmp	code_3094
code_3007:
		dup	
		ldi	0x02
		eq?	
		bnt	code_3026
		push2	
		pushi	0x39
		pushi	0x21
		calle	0xff, 0x00, 0x04
		jmp	code_3094
code_3026:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_3045
		push2	
		pushi	0x39
		pushi	0x20
		calle	0xff, 0x00, 0x04
		jmp	code_3094
code_3045:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_3064
		push2	
		pushi	0x39
		pushi	0x20
		calle	0xff, 0x00, 0x04
		jmp	code_3094
code_3064:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3083
		push2	
		pushi	0x39
		pushi	0x20
		calle	0xff, 0x00, 0x04
		jmp	code_3094
code_3083:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x7b, 0x6
code_3094:
		toss	
		ret	


.OBJECT shadows of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'shadows', 'id': 'string_16'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'shadows', 'id': 'string_16'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x1000
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'Various pipes, ducts and other innocuous pieces of equipment form pronounced shadows throughout the room.', 'id': 'string_17'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = shadows::266   	 ; @0xbaa

.CODE
floor2::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_3187
		push2	
		pushi	0x39
		pushi	0x22
		calle	0xff, 0x00, 0x04
		jmp	code_3274
code_3187:
		dup	
		ldi	0x02
		eq?	
		bnt	code_3206
		push2	
		pushi	0x39
		pushi	0x23
		calle	0xff, 0x00, 0x04
		jmp	code_3274
code_3206:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_3225
		push2	
		pushi	0x39
		pushi	0x24
		calle	0xff, 0x00, 0x04
		jmp	code_3274
code_3225:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_3244
		push2	
		pushi	0x39
		pushi	0x25
		calle	0xff, 0x00, 0x04
		jmp	code_3274
code_3244:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3263
		push2	
		pushi	0x39
		pushi	0x26
		calle	0xff, 0x00, 0x04
		jmp	code_3274
code_3263:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x7b, 0x6
code_3274:
		toss	
		ret	


.OBJECT floor2 of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'floor2', 'id': 'string_19'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'storage room', 'id': 'string_18'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x10
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This room is similar to the storage room, with a large machine installed in one bulkhead.', 'id': 'string_0'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = floor2::266   	 ; @0xc5e

.CODE
floor3::266:
		pushi	0x010a
		push1	
		lsp	0x1
		lofsa	floor2
		send	0x6
		ret	


.OBJECT floor3 of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'floor3', 'id': 'string_20'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'storage room', 'id': 'string_18'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x20
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This room is similar to the storage room, with a large machine installed in one bulkhead.', 'id': 'string_0'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = floor3::266   	 ; @0xd12

.CODE
floor4::266:
		pushi	0x010a
		push1	
		lsp	0x1
		lofsa	floor2
		send	0x6
		ret	


.OBJECT floor4 of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'floor4', 'id': 'string_21'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'storage room', 'id': 'string_18'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x40
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This room is similar to the storage room, with a large machine installed in one bulkhead.', 'id': 'string_0'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = floor4::266   	 ; @0xd64

.CODE
washerFeature::266:
		lsp	0x1
		dup	
		ldi	0x03
		eq?	
		bnt	code_3586
		push1	
		pushi	0x45
		callb	0x6, 0x2
		not	
		bnt	code_3544
		pushi	0x008c
		push1	
		lofsa	openWasherDoor
		push	
		lag	0x2
		send	0x6
		jmp	code_3673
code_3544:
		pushi	0x0242
		push0	
		class	0x7c
		send	0x4
		push	
		ldi	0x00
		eq?	
		bnt	code_3574
		pushi	0x008c
		push1	
		lofsa	getInWasher
		push	
		lag	0x2
		send	0x6
		jmp	code_3673
code_3574:
		push2	
		pushi	0x39
		pushi	0x18
		calle	0xff, 0x00, 0x04
		jmp	code_3673
code_3586:
		dup	
		ldi	0x02
		eq?	
		bnt	code_3605
		push2	
		pushi	0x39
		pushi	0x27
		calle	0xff, 0x00, 0x04
		jmp	code_3673
code_3605:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_3624
		push2	
		pushi	0x39
		pushi	0x28
		calle	0xff, 0x00, 0x04
		jmp	code_3673
code_3624:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_3643
		push2	
		pushi	0x39
		pushi	0x29
		calle	0xff, 0x00, 0x04
		jmp	code_3673
code_3643:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3662
		push2	
		pushi	0x39
		pushi	0x2a
		calle	0xff, 0x00, 0x04
		jmp	code_3673
code_3662:
		pushi	0x010a
		push1	
		lsp	0x1
		rest	0x2
		super	0x7b, 0x6
code_3673:
		toss	
		ret	

		bnot	

.OBJECT washerFeature of 0x7b
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x7b
  [#1] = 0x7b
  [#2] = 0x0
  [#3] = {'val': 'washerFeature', 'id': 'string_24'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'washing machine', 'id': 'string_22'}
  [#14] = 0x2d
  [#15] = 0x0
  [#16] = 0x4000
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "This is almost certainly a cheap Sarien knock-off of the genuine Cleanse-O-Matic Rinse 'n Dip used to launder the crew uniforms aboard the Arcada.", 'id': 'string_23'}
  [#22] = 0x2
Overriden functions: 1
  [0x10a]  = washerFeature::266   	 ; @0xdb6

.CODE
egoClimbOutTrunk::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_3807
		push0	
		callb	0x2, 0x0
		pushi	0x011d
		push0	
		pushi	0x00c0
		push0	
		pushi	0x05
		push1	
		pushi	0x24
		pushi	0x06
		push1	
		push1	
		pushi	0x04
		push1	
		pushi	0x67
		pushi	0x00d9
		push1	
		pushi	0x06
		pushi	0x07
		push1	
		pushi	0x0c
		lofsa	trunk
		send	0x26
		ldi	0x12
		aTop	0x16
		jmp	code_4643
code_3807:
		dup	
		ldi	0x01
		eq?	
		bnt	code_3847
		pushi	0x2b
		push1	
		pushi	0x0201
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	trunk
		send	0x8
		jmp	code_4643
code_3847:
		dup	
		ldi	0x02
		eq?	
		bnt	code_3895
		pushi	0x06
		push1	
		push0	
		pushi	0x04
		push1	
		pushi	0x04
		push0	
		lofsa	trunk
		send	0x4
		push	
		ldi	0x01
		sub	
		push	
		pushi	0x07
		push1	
		pushi	0x04
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	trunk
		send	0x1a
		jmp	code_4643
code_3895:
		dup	
		ldi	0x03
		eq?	
		bnt	code_3932
		pushi	0x04
		push1	
		pushi	0x68
		pushi	0x06
		push1	
		pushi	0x05
		pushi	0x07
		push1	
		push2	
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	trunk
		send	0x1a
		jmp	code_4643
code_3932:
		dup	
		ldi	0x04
		eq?	
		bnt	code_4016
		pushi	0x2b
		push1	
		pushi	0x0202
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x05
		push1	
		pushi	0x009a
		pushi	0x06
		push1	
		push1	
		pushi	0x011b
		push0	
		pushi	0x07
		push1	
		push0	
		lofsa	trunk
		send	0x16
		pushi	0x011b
		push0	
		lofsa	vent
		send	0x4
		pushi	0x00c0
		push0	
		lag	0x0
		send	0x4
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x00e2
		push2	
		push0	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4016:
		dup	
		ldi	0x05
		eq?	
		bnt	code_4059
		pushi	0x2b
		push1	
		pushi	0x0218
		pushi	0x06
		push1	
		push1	
		pushi	0x66
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x16
		pushi	0x00e2
		push2	
		pushi	0x00b4
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4059:
		dup	
		ldi	0x06
		eq?	
		bnt	code_4079
		pushi	0x00e2
		push2	
		push0	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4079:
		dup	
		ldi	0x07
		eq?	
		bnt	code_4101
		pushi	0x00e2
		push2	
		pushi	0x00b4
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4101:
		dup	
		ldi	0x08
		eq?	
		bnt	code_4149
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x6e
		pushi	0x7e
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_4643
code_4149:
		dup	
		ldi	0x09
		eq?	
		bnt	code_4178
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x00e2
		push2	
		pushi	0x00b4
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4178:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_4198
		pushi	0x00e2
		push2	
		push0	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4198:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_4219
		pushi	0x00e2
		push2	
		pushi	0x5a
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4219:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_4269
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00a0
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x0092
		pushi	0x0082
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_4643
code_4269:
		dup	
		ldi	0x0d
		eq?	
		bnt	code_4298
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x00e2
		push2	
		pushi	0x00b4
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4298:
		dup	
		ldi	0x0e
		eq?	
		bnt	code_4318
		pushi	0x00e2
		push2	
		push0	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4318:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_4340
		pushi	0x00e2
		push2	
		pushi	0x010e
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4340:
		dup	
		ldi	0x10
		eq?	
		bnt	code_4390
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00a0
		push1	
		push1	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x0086
		pushi	0x0094
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_4643
code_4390:
		dup	
		ldi	0x11
		eq?	
		bnt	code_4436
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00d9
		push1	
		pushi	0x12
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		push2	
		push1	
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_4643
code_4436:
		dup	
		ldi	0x12
		eq?	
		bnt	code_4475
		pushi	0x2b
		push1	
		pushi	0x0193
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4643
code_4475:
		dup	
		ldi	0x13
		eq?	
		bnt	code_4530
		push2	
		pushi	0x39
		pushi	0x2b
		calle	0xff, 0x00, 0x04
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00a0
		push1	
		pushi	0x05
		pushi	0x011a
		push2	
		pushi	0x70
		pushi	0x009e
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x22
		jmp	code_4643
code_4530:
		dup	
		ldi	0x14
		eq?	
		bnt	code_4567
		pushi	0x05
		push1	
		pushi	0x20
		pushi	0x00a0
		push1	
		pushi	0x06
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x1a
		jmp	code_4643
code_4567:
		dup	
		ldi	0x15
		eq?	
		bnt	code_4643
		pushi	0x009d
		push0	
		pushi	0x66
		push1	
		push0	
		lag	0xb1
		send	0xa
		pushi	0x2b
		push1	
		pushi	0x021a
		pushi	0x06
		push1	
		pushi	0xff
		pushi	0x2a
		push1	
		pushi	0x1e
		pushi	0x009d
		pushi	0x04
		pushi	0x7f
		pushi	0x19
		pushi	0x0a
		push0	
		lag	0x64
		send	0x1e
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		pushi	0x04
		lag	0x0
		send	0x6
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_4643:
		toss	
		ret	

		bnot	

.OBJECT egoClimbOutTrunk of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'egoClimbOutTrunk', 'id': 'string_25'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = egoClimbOutTrunk::138   	 ; @0xea2

.CODE
getId::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_4734
		push0	
		callb	0x3, 0x0
		pushi	0x00e2
		push2	
		pushi	0x5a
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4856
code_4734:
		dup	
		ldi	0x01
		eq?	
		bnt	code_4779
		pushi	0x05
		push1	
		pushi	0x55
		pushi	0x06
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x0145
		push1	
		pushi	0x13
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x04
		push1	
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_4856
code_4779:
		dup	
		ldi	0x02
		eq?	
		bnt	code_4811
		pushi	0x011e
		push1	
		push1	
		lofsa	scraps
		send	0x6
		push2	
		push2	
		pushi	0x00af
		callb	0xb, 0x4
		ldi	0x12
		aTop	0x16
		jmp	code_4856
code_4811:
		dup	
		ldi	0x03
		eq?	
		bnt	code_4833
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_4856
code_4833:
		dup	
		ldi	0x04
		eq?	
		bnt	code_4856
		push0	
		calle	0x02bf, 0x0001, 0x00
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_4856:
		toss	
		ret	


.OBJECT getId of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'getId', 'id': 'string_26'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = getId::138   	 ; @0x1260

.CODE
getInWasher::60:
		pushi	0x3c
		push0	
		super	0x6, 0x4
		pToa	0x1a
		bnt	code_5040
		push	
		ldi	0x01
		gt?	
		bnt	code_4999
		pushi	0x3b
		push0	
		lofsa	helmet
		send	0x4
		not	
		bnt	code_4999
		pushi	0x0119
		pushi	0x11
		class	0x54
		push	
		pushi	0x00b9
		pushi	0x5e
		pushi	0x00c9
		pushi	0x4c
		pushi	0x00df
		pushi	0x67
		pushi	0x00ca
		pushi	0x6a
		pushi	0x00bd
		pushi	0x47
		pushi	0x00b5
		pushi	0x5c
		pushi	0x00d2
		pushi	0x51
		pushi	0x00df
		pushi	0x63
		lofsa	helmet
		send	0x26
code_4999:
		lsl	0xd5
		pushi	0x07
		push0	
		lag	0x0
		send	0x4
		ne?	
		bnt	code_5040
		pushi	0x07
		push0	
		lag	0x0
		send	0x4
		sal	0xd5
		pushi	0x2b
		push1	
		pushi	0x01fa
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push1	
		pushi	0x7f
		lag	0xb1
		send	0x12
code_5040:
		ret	

getInWasher::138:
		link	0x01
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_5098
		ldi	0x00
		sal	0xd4
		pushi	0x008c
		push1	
		push0	
		lofsa	helmet
		send	0x6
		push0	
		callb	0x2, 0x0
		ldi	0x00
		aTop	0x1a
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x00b9
		pushi	0x7f
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_6270
code_5098:
		dup	
		ldi	0x01
		eq?	
		bnt	code_5126
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00bf
		pushi	0x76
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_6270
code_5126:
		dup	
		ldi	0x02
		eq?	
		bnt	code_5165
		pushi	0x05
		push1	
		pushi	0x27
		pushi	0x06
		push1	
		push1	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x07
		push1	
		pushSelf	
		lag	0x0
		send	0x1e
		jmp	code_6270
code_5165:
		dup	
		ldi	0x03
		eq?	
		bnt	code_5202
		pushi	0x42
		push1	
		pushi	0x06
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0xe
		pushi	0x42
		push1	
		pushi	0x06
		lofsa	helmet
		send	0x6
		jmp	code_6270
code_5202:
		dup	
		ldi	0x04
		eq?	
		bnt	code_5225
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	washerDoor
		send	0x8
		jmp	code_6270
code_5225:
		dup	
		ldi	0x05
		eq?	
		bnt	code_5256
		pushi	0x2b
		push1	
		pushi	0x0210
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		ldi	0x03
		aTop	0x12
		jmp	code_6270
code_5256:
		dup	
		ldi	0x06
		eq?	
		bnt	code_5336
		push2	
		pushi	0x39
		pushi	0x2c
		calle	0xff, 0x00, 0x04
		pushi	0x00c0
		push0	
		pushi	0x011d
		push0	
		pushi	0x04
		push1	
		pushi	0x0116
		pushi	0x03
		push1	
		pushi	0x00b5
		pushi	0x05
		push1	
		pushi	0x01a1
		pushi	0x06
		push1	
		push1	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x18
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00c4
		pushi	0x008d
		pushSelf	
		lofsa	sarien
		send	0x38
		jmp	code_6270
code_5336:
		dup	
		ldi	0x07
		eq?	
		bnt	code_5379
		pushi	0x05
		push1	
		pushi	0x01a2
		pushi	0x06
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x06
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	sarien
		send	0x20
		jmp	code_6270
code_5379:
		dup	
		ldi	0x08
		eq?	
		bnt	code_5447
		pushi	0x2b
		push1	
		pushi	0x0211
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x06
		push1	
		push1	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		pushi	0x03
		class	0x19
		push	
		push2	
		push1	
		lofsa	sarien
		send	0x16
		pushi	0x07
		push1	
		push0	
		pushi	0x011e
		push1	
		push1	
		lofsa	washerDoor
		send	0xc
		ldi	0x12
		aTop	0x16
		jmp	code_6270
code_5447:
		dup	
		ldi	0x09
		eq?	
		bnt	code_5474
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x05
		push1	
		pushSelf	
		lofsa	sarien
		send	0xc
		jmp	code_6270
code_5474:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_5500
		pushi	0x0094
		push1	
		class	0x1b
		push	
		lofsa	washerDoor
		send	0x6
		ldi	0x02
		aTop	0x12
		jmp	code_6270
code_5500:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_5540
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	sarien
		send	0x8
		pushi	0x2b
		push1	
		pushi	0x0210
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		jmp	code_6270
code_5540:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_5646
		ldi	0x01
		aTop	0x1a
		pushi	0x06
		push1	
		push2	
		pushi	0x05
		push1	
		pushi	0x27
		pushi	0x00d9
		push1	
		pushi	0x1e
		pushi	0x04
		push1	
		pushi	0x00d2
		pushi	0x03
		push1	
		pushi	0x61
		pushi	0x0094
		push1	
		class	0x17
		push	
		lag	0x0
		send	0x24
		pushi	0x00a0
		push1	
		push2	
		pushi	0x04
		push1	
		pushi	0x00d2
		pushi	0x03
		push1	
		pushi	0x0090
		pushi	0x00d9
		push1	
		pushi	0x03
		pushi	0x07
		push1	
		pushi	0x05
		pushi	0x0094
		push1	
		class	0x17
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x011b
		pushi	0x00b8
		pushSelf	
		lofsa	sarien
		send	0x30
		jmp	code_6270
code_5646:
		dup	
		ldi	0x0d
		eq?	
		bnt	code_5668
		pushi	0x6c
		push0	
		lofsa	sarien
		send	0x4
		ldi	0x03
		aTop	0x12
		jmp	code_6270
code_5668:
		dup	
		ldi	0x0e
		eq?	
		bnt	code_5699
		pushi	0x00d9
		push1	
		pushi	0x07
		pushi	0x0094
		push1	
		class	0x17
		push	
		lag	0x0
		send	0xc
		ldi	0x03
		aTop	0x12
		jmp	code_6270
code_5699:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_5821
		pushi	0x0132
		push2	
		pushi	0x0a
		pushi	0x06
		pushi	0x38
		push1	
		push1	
		pushi	0x42
		push1	
		pushi	0x05
		pushi	0x00a0
		push1	
		pushi	0x03
		pushi	0x00d9
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		pushi	0x0119
		pushi	0x11
		class	0x54
		push	
		pushi	0x00b9
		pushi	0x5e
		pushi	0x00c9
		pushi	0x4c
		pushi	0x00df
		pushi	0x67
		pushi	0x00ca
		pushi	0x6a
		pushi	0x00bd
		pushi	0x47
		pushi	0x00b5
		pushi	0x5c
		pushi	0x00d2
		pushi	0x51
		pushi	0x00df
		pushi	0x63
		lofsa	helmet
		send	0x4c
		ldi	0x02
		aTop	0x1a
		pushi	0x00d9
		push1	
		push1	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lag	0x0
		send	0xc
		ldi	0x06
		aTop	0x12
		jmp	code_6270
code_5821:
		dup	
		ldi	0x10
		eq?	
		bnt	code_5864
		pushi	0x6c
		push0	
		lofsa	helmet
		send	0x4
		ldi	0x01
		aTop	0x1a
		pushi	0x00d9
		push1	
		pushi	0x07
		pushi	0x0094
		push1	
		class	0x17
		push	
		lag	0x0
		send	0xc
		ldi	0x04
		aTop	0x12
		jmp	code_6270
code_5864:
		dup	
		ldi	0x11
		eq?	
		bnt	code_5895
		pushi	0x00d9
		push1	
		pushi	0x1e
		pushi	0x0094
		push1	
		class	0x17
		push	
		lag	0x0
		send	0xc
		ldi	0x03
		aTop	0x12
		jmp	code_6270
code_5895:
		dup	
		ldi	0x12
		eq?	
		bnt	code_5922
		ldi	0x00
		aTop	0x1a
		pushi	0x0094
		push1	
		push0	
		lag	0x0
		send	0x6
		ldi	0x02
		aTop	0x12
		jmp	code_6270
code_5922:
		dup	
		ldi	0x13
		eq?	
		bnt	code_6001
		pushi	0x04
		push1	
		pushi	0x00bf
		pushi	0x03
		push1	
		pushi	0x76
		pushi	0x00d9
		push1	
		pushi	0x06
		dup	
		push1	
		pushi	0x03
		pushi	0x07
		push1	
		push0	
		pushi	0x42
		push1	
		pushi	0x06
		pushi	0x0094
		push1	
		push0	
		lag	0x0
		send	0x2a
		pushi	0x2b
		push1	
		pushi	0x0210
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	washerDoor
		send	0x8
		jmp	code_6270
code_6001:
		dup	
		ldi	0x14
		eq?	
		bnt	code_6030
		pushi	0x011e
		push1	
		push1	
		lag	0x0
		send	0x6
		pushi	0x00d9
		push0	
		lag	0x0
		send	0x4
		aTop	0x10
		jmp	code_6270
code_6030:
		dup	
		ldi	0x15
		eq?	
		bnt	code_6057
		pushi	0x42
		push1	
		pushi	0xff
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0xe
		jmp	code_6270
code_6057:
		dup	
		ldi	0x16
		eq?	
		bnt	code_6097
		pushi	0x06
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x14
		push2	
		pushi	0x05
		pushi	0x00a4
		callb	0xb, 0x4
		jmp	code_6270
code_6097:
		dup	
		ldi	0x17
		eq?	
		bnt	code_6270
		push2	
		pushi	0x39
		pushi	0x2d
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x41
		callb	0x7, 0x2
		pushi	0x00d3
		push1	
		push0	
		lag	0x0
		send	0x6
		bnt	code_6143
		push2	
		pushi	0x39
		pushi	0x2e
		calle	0xff, 0x00, 0x04
		jmp	code_6152
code_6143:
		push2	
		pushi	0x39
		pushi	0x2f
		calle	0xff, 0x00, 0x04
code_6152:
		ldi	0x01
		sat	0x0
code_6156:
		lst	0x0
		ldi	0x13
		lt?	
		bnt	code_6179
		pushi	0x0146
		push1	
		lst	0x0
		lag	0x0
		send	0x6
		+at	0x0
		jmp	code_6156
code_6179:
		pushi	0x0145
		push1	
		pushi	0x13
		lag	0x0
		send	0x6
		pushi	0x0146
		push2	
		pushi	0x13
		pushi	0x39
		lag	0x0
		send	0x8
		pushi	0x00d3
		push1	
		push0	
		lag	0x0
		send	0x6
		not	
		bnt	code_6228
		pushi	0x0145
		push1	
		pushi	0x0a
		lag	0x0
		send	0x6
		ldi	0x01
		sag	0xa5
code_6228:
		pushi	0x6b
		push0	
		lofsa	scraps
		send	0x4
		pushi	0x0242
		push1	
		push1	
		class	0x7c
		send	0x6
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		pushi	0x04
		lag	0x0
		send	0x6
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_6270:
		toss	
		ret	


.OBJECT getInWasher of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'getInWasher', 'id': 'string_27'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 2
  [0x3c]  = getInWasher::60   	 ; @0x1334
  [0x8a]  = getInWasher::138   	 ; @0x13b1

.CODE
openWasherDoor::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_6378
		push0	
		callb	0x2, 0x0
		push1	
		pushi	0x45
		callb	0x7, 0x2
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x00c0
		pushi	0x008c
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_6569
code_6378:
		dup	
		ldi	0x01
		eq?	
		bnt	code_6429
		pushi	0x05
		push1	
		pushi	0x27
		pushi	0x06
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x04
		push1	
		pushi	0x00c0
		pushi	0x03
		push1	
		pushi	0x008d
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x05
		push1	
		pushSelf	
		lag	0x0
		send	0x2a
		jmp	code_6569
code_6429:
		dup	
		ldi	0x02
		eq?	
		bnt	code_6488
		pushi	0x2b
		push1	
		pushi	0x0211
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push1	
		class	0x1a
		push	
		lag	0x0
		send	0x6
		pushi	0x011d
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	washerDoor
		send	0x12
		jmp	code_6569
code_6488:
		dup	
		ldi	0x03
		eq?	
		bnt	code_6569
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		pushi	0x06
		pushi	0x00e2
		push1	
		pushi	0x2d
		lag	0x0
		send	0xc
		pushi	0x54
		push1	
		lofsa	closedPoly
		push	
		pushi	0x00e8
		push0	
		lag	0x2
		send	0x4
		send	0x6
		pushi	0x73
		push1	
		lofsa	openPoly
		push	
		pushi	0x00e8
		push0	
		lag	0x2
		send	0x4
		send	0x6
		pushi	0x011b
		push0	
		lofsa	washerDoor
		send	0x4
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_6569:
		toss	
		ret	

		bnot	

.OBJECT openWasherDoor of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'openWasherDoor', 'id': 'string_28'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = openWasherDoor::138   	 ; @0x18be

.CODE
walkInRoom::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_6678
		push0	
		callb	0x2, 0x0
		pushi	0x06
		push1	
		pushi	0x07
		pushi	0x011f
		push1	
		push1	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00e6
		pushi	0x009e
		pushSelf	
		lag	0x0
		send	0x18
		jmp	code_6703
code_6678:
		dup	
		ldi	0x01
		eq?	
		bnt	code_6703
		pushi	0x011f
		push1	
		push0	
		lag	0x0
		send	0x6
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_6703:
		toss	
		ret	

		bnot	

.OBJECT walkInRoom of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'walkInRoom', 'id': 'string_29'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = walkInRoom::138   	 ; @0x19e6

.CODE
walkOutRoom::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_6807
		push0	
		callb	0x2, 0x0
		pushi	0x011f
		push1	
		push1	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x010e
		pushi	0x00b1
		pushSelf	
		lag	0x0
		send	0x12
		jmp	code_6824
code_6807:
		dup	
		ldi	0x01
		eq?	
		bnt	code_6824
		pushi	0x0177
		push1	
		pushi	0x42
		lag	0x2
		send	0x6
code_6824:
		toss	
		ret	


.OBJECT walkOutRoom of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'walkOutRoom', 'id': 'string_30'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = walkOutRoom::138   	 ; @0x1a6c

.CODE
openVentScript::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_6916
		push0	
		callb	0x2, 0x0
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	vent
		send	0x8
		jmp	code_6949
code_6916:
		dup	
		ldi	0x01
		eq?	
		bnt	code_6949
		pushi	0x011b
		push0	
		lofsa	vent
		send	0x4
		push0	
		callb	0x3, 0x0
		pushi	0x008b
		push0	
		pToa	0x8
		send	0x4
		pushi	0x6c
		push0	
		self	0x4
code_6949:
		toss	
		ret	

		bnot	

.OBJECT openVentScript of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'openVentScript', 'id': 'string_31'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = openVentScript::138   	 ; @0x1ae4

.CODE
climbOutOfVent::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_7087
		push0	
		callb	0x2, 0x0
		pushi	0x05
		push1	
		pushi	0x25
		pushi	0x06
		push1	
		push1	
		pushi	0x04
		push1	
		pushi	0x6f
		pushi	0x03
		push1	
		pushi	0x76
		lag	0x0
		send	0x18
		push1	
		pushi	0x25
		callb	0x6, 0x2
		not	
		bnt	code_7072
		pushi	0x008c
		push1	
		lofsa	openVentScript
		push	
		self	0x6
		jmp	code_7078
code_7072:
		pushi	0x008b
		push0	
		self	0x4
code_7078:
		push1	
		pushi	0x25
		callb	0x7, 0x2
		jmp	code_7140
code_7087:
		dup	
		ldi	0x01
		eq?	
		bnt	code_7109
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_7140
code_7109:
		dup	
		ldi	0x02
		eq?	
		bnt	code_7140
		push0	
		callb	0x3, 0x0
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		push2	
		lag	0x0
		send	0x6
		pushi	0x6c
		push0	
		self	0x4
code_7140:
		toss	
		ret	


.OBJECT climbOutOfVent of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'climbOutOfVent', 'id': 'string_32'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = climbOutOfVent::138   	 ; @0x1b62

.CODE
killEgoTimeOut::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_7219
		ldi	0x3c
		aTop	0x12
		jmp	code_7281
code_7219:
		dup	
		ldi	0x01
		eq?	
		bnt	code_7242
		push2	
		pushi	0x39
		pushi	0x30
		calle	0xff, 0x00, 0x04
		ldi	0x14
		aTop	0x12
		jmp	code_7281
code_7242:
		dup	
		ldi	0x02
		eq?	
		bnt	code_7265
		push2	
		pushi	0x39
		pushi	0x31
		calle	0xff, 0x00, 0x04
		ldi	0x0a
		aTop	0x12
		jmp	code_7281
code_7265:
		dup	
		ldi	0x03
		eq?	
		bnt	code_7281
		ldi	0x01
		sal	0xd4
		pushi	0x6c
		push0	
		self	0x4
code_7281:
		toss	
		ret	

		bnot	

.OBJECT killEgoTimeOut of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'killEgoTimeOut', 'id': 'string_33'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = killEgoTimeOut::138   	 ; @0x1c20

.CODE
egoTestVent::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_7438
		push0	
		callb	0x2, 0x0
		pushi	0x011f
		push1	
		push1	
		lofsa	trunk
		send	0x6
		pushi	0x04
		push0	
		lag	0x0
		send	0x4
		push	
		pushi	0x04
		push0	
		lofsa	trunk
		send	0x4
		eq?	
		bnt	code_7418
		pushi	0x03
		push0	
		lag	0x0
		send	0x4
		push	
		pushi	0x03
		push0	
		lofsa	trunk
		send	0x4
		eq?	
		bnt	code_7418
		pushi	0x008a
		push1	
		push2	
		self	0x6
		jmp	code_7738
code_7418:
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x6e
		pushi	0x75
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_7738
code_7438:
		dup	
		ldi	0x01
		eq?	
		bnt	code_7465
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x68
		pushi	0x73
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_7738
code_7465:
		dup	
		ldi	0x02
		eq?	
		bnt	code_7539
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	trunk
		send	0x4
		push	
		ldi	0x01
		add	
		push	
		pushi	0x05
		push1	
		pushi	0x24
		pushi	0x00d9
		push1	
		pushi	0x0c
		pushi	0x06
		push1	
		pushi	0x03
		dup	
		push1	
		pushi	0x03
		push0	
		lofsa	trunk
		send	0x4
		push	
		pushi	0x07
		push1	
		push0	
		pushi	0x0119
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x0
		send	0x32
		jmp	code_7738
code_7539:
		dup	
		ldi	0x03
		eq?	
		bnt	code_7580
		pushi	0x06
		push1	
		pushi	0x04
		dup	
		push1	
		pushi	0x61
		pushi	0x03
		push1	
		pushi	0x60
		pushi	0x07
		push1	
		pushi	0x05
		lag	0x0
		send	0x18
		ldi	0x00
		aTop	0x1a
		ldi	0x12
		aTop	0x16
		jmp	code_7738
code_7580:
		dup	
		ldi	0x04
		eq?	
		bnt	code_7608
		pushi	0x0094
		pushi	0x05
		class	0x7a
		push	
		pushi	0x05
		dup	
		pushi	0x06
		pushSelf	
		lag	0x0
		send	0xe
		jmp	code_7738
code_7608:
		dup	
		ldi	0x05
		eq?	
		bnt	code_7675
		push2	
		pushi	0x39
		pushi	0x32
		calle	0xff, 0x00, 0x04
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	trunk
		send	0x4
		push	
		pushi	0x03
		push0	
		lofsa	trunk
		send	0x4
		push	
		pushi	0x06
		push1	
		pushi	0x03
		pushi	0x011e
		push1	
		pushi	0x04
		pushi	0x42
		push1	
		pushi	0xff
		lag	0x0
		send	0x1a
		pushi	0x008b
		push0	
		self	0x4
		jmp	code_7738
code_7675:
		dup	
		ldi	0x06
		eq?	
		bnt	code_7697
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_7738
code_7697:
		dup	
		ldi	0x07
		eq?	
		bnt	code_7738
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		pushi	0x07
		lag	0x0
		send	0x6
		pushi	0x00c0
		push0	
		lofsa	trunk
		send	0x4
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_7738:
		toss	
		ret	


.OBJECT egoTestVent of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'egoTestVent', 'id': 'string_34'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = egoTestVent::138   	 ; @0x1cae

.CODE
cantReachIt::138:
		lap	0x1
		aTop	0xa
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_7834
		push0	
		callb	0x2, 0x0
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x68
		pushi	0x73
		pushSelf	
		lag	0x0
		send	0xc
		jmp	code_7973
code_7834:
		dup	
		ldi	0x01
		eq?	
		bnt	code_7883
		ldi	0x03
		aTop	0x1a
		pushi	0x05
		push1	
		pushi	0x24
		pushi	0x07
		push1	
		push0	
		pushi	0x06
		push1	
		pushi	0x04
		pushi	0x00d9
		push1	
		pushi	0x0c
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		push2	
		push1	
		pushSelf	
		lag	0x0
		send	0x24
		jmp	code_7973
code_7883:
		dup	
		ldi	0x02
		eq?	
		bnt	code_7910
		pushi	0x0094
		pushi	0x05
		class	0x7a
		push	
		pushi	0x03
		push1	
		push2	
		pushSelf	
		lag	0x0
		send	0xe
		jmp	code_7973
code_7910:
		dup	
		ldi	0x03
		eq?	
		bnt	code_7941
		push2	
		pushi	0x39
		pushi	0x33
		calle	0xff, 0x00, 0x04
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lag	0x0
		send	0x8
		jmp	code_7973
code_7941:
		dup	
		ldi	0x04
		eq?	
		bnt	code_7973
		push0	
		calle	0x02bf, 0x0001, 0x00
		pushi	0x06
		push1	
		pushi	0x07
		lag	0x0
		send	0x6
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x4
code_7973:
		toss	
		ret	

		bnot	

.OBJECT cantReachIt of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'cantReachIt', 'id': 'string_35'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = cantReachIt::138   	 ; @0x1e76

.STRINGS
string_0: "This room is similar to the storage room, with a large machine installed in one bulkhead."
string_1: "rm57"		 ; special
string_2: "openPoly"		 ; special
string_3: "closedPoly"		 ; special
string_4: "On the floor sits the trunk you rode here in."
string_5: "trunk"		 ; special
string_6: "This is the protruding terminus of the vent shaft by which you entered."
string_7: "vent"		 ; special
string_8: "Behind the glass door of the machine, you can see a helmet that has been carelessly left inside after the dry cycle."
string_9: "washerDoor"		 ; special
string_10: "scraps"		 ; special
string_11: "sarien"		 ; special
string_12: "helmet"		 ; special
string_13: "vent shaft"
string_14: "A large vent shaft protrudes from the left wall of the laundry room."
string_15: "ventShaft"		 ; special
string_16: "shadows"		 ; special
string_17: "Various pipes, ducts and other innocuous pieces of equipment form pronounced shadows throughout the room."
string_18: "storage room"
string_19: "floor2"		 ; special
string_20: "floor3"		 ; special
string_21: "floor4"		 ; special
string_22: "washing machine"
string_23: "This is almost certainly a cheap Sarien knock-off of the genuine Cleanse-O-Matic Rinse 'n Dip used to launder the crew uniforms aboard the Arcada."
string_24: "washerFeature"		 ; special
string_25: "egoClimbOutTrunk"		 ; special
string_26: "getId"		 ; special
string_27: "getInWasher"		 ; special
string_28: "openWasherDoor"		 ; special
string_29: "walkInRoom"		 ; special
string_30: "walkOutRoom"		 ; special
string_31: "openVentScript"		 ; special
string_32: "climbOutOfVent"		 ; special
string_33: "killEgoTimeOut"		 ; special
string_34: "egoTestVent"		 ; special
string_35: "cantReachIt"		 ; special
string_unused_36: ""


.PRELOAD_TEXT

.LOCAL_VARS
0x13f, 0xac, 0x11f, 0xa9, 0x101, 0x99, 0x132, 0x8a, 0x10f, 0x7c, 0x100, 0x81, 0xdf, 0x86, 0xb2, 0x73, 0x86, 0x80, 0x75, 0x73, 0xa6, 0x60, 0x8e, 0x55, 0x87, 0x58, 0x89, 0x5d, 0x82, 0x60, 0x72, 0x5e, 0x6b, 0x61, 0x81, 0x6c, 0x55, 0x79, 0x38, 0x6e, 0x34, 0x76, 0x28, 0x74, 0x1b, 0x78, 0x94, 0xb8, 0xad, 0xb8, 0xdc, 0xa8, 0x102, 0xbd, 0x0, 0xbd, 0x0, 0x0, 0x13f, 0x0, 0x13f, 0xac, 0x11f, 0xa9, 0x101, 0x99, 0x132, 0x8a, 0x10f, 0x7c, 0x100, 0x81, 0xe2, 0x87, 0x99, 0x6b, 0x9e, 0x5d, 0x8e, 0x55, 0x87, 0x58, 0x89, 0x5d, 0x82, 0x60, 0x72, 0x5e, 0x6b, 0x61, 0x81, 0x6c, 0x55, 0x79, 0x38, 0x6e, 0x34, 0x76, 0x28, 0x74, 0x1b, 0x78, 0x94, 0xb8, 0xad, 0xb8, 0xdc, 0xa8, 0x102, 0xbd, 0x0, 0xbd, 0x0, 0x0, 0x13f, 0x0, 0x13f, 0xac, 0x11f, 0xa9, 0x101, 0x99, 0x132, 0x8a, 0x10f, 0x7c, 0x100, 0x81, 0xdf, 0x86, 0xb2, 0x73, 0x86, 0x80, 0x75, 0x73, 0xa5, 0x6b, 0xa1, 0x5c, 0x8e, 0x55, 0x87, 0x58, 0x89, 0x5d, 0x34, 0x76, 0x28, 0x74, 0x1b, 0x78, 0x94, 0xb8, 0xad, 0xb8, 0xdc, 0xa8, 0x102, 0xbd, 0x0, 0xbd, 0x0, 0x0, 0x13f, 0x0, 0x13f, 0xac, 0x11f, 0xa9, 0x101, 0x99, 0x132, 0x8a, 0x10f, 0x7c, 0x100, 0x81, 0xe2, 0x87, 0x99, 0x6b, 0x9e, 0x5d, 0x8e, 0x55, 0x87, 0x58, 0x89, 0x5d, 0x3e, 0x74, 0x34, 0x76, 0x28, 0x74, 0x1b, 0x78, 0x94, 0xb8, 0xad, 0xb8, 0xdc, 0xa8, 0x102, 0xbd, 0x0, 0xbd, 0x0, 0x0, 0x13f, 0x0, 0x0, 0x0

.RELOCATION
num of pointers: 131
0x73, 0x7b, 0x83, 0xdb, 0xe7, 0xf0, 0x137, 0x13b, 0x13f, 0x143, 0x147, 0x14b, 0x17a, 0x18b, 0x19f, 0x1b0, 0x1e9, 0x1f8, 0x202, 0x20c, 0x21e, 0x22b, 0x246, 0x25c, 0x273, 0x2b2, 0x2e2, 0x2ee, 0x32c, 0x34c, 0x3da, 0x3fe, 0x4be, 0x4cc, 0x4e6, 0x52f, 0x53d, 0x54a, 0x5a8, 0x5cc, 0x622, 0x628, 0x631, 0x67c, 0x69a, 0x70a, 0x72e, 0x7a4, 0x7bc, 0x7d1, 0x848, 0x8d5, 0x952, 0x9e2, 0xa00, 0xa82, 0xaa6, 0xb76, 0xb8a, 0xb9a, 0xc2a, 0xc3e, 0xc4e, 0xcde, 0xcf2, 0xd02, 0xd19, 0xd30, 0xd44, 0xd54, 0xd6b, 0xd82, 0xd96, 0xda6, 0xdce, 0xdec, 0xe6e, 0xe82, 0xe92, 0xed4, 0xf00, 0xf19, 0xf30, 0xf55, 0xf87, 0xf90, 0x1238, 0x12b8, 0x130c, 0x134a, 0x1383, 0x13c9, 0x144b, 0x1462, 0x14d1, 0x14fc, 0x152e, 0x153c, 0x155b, 0x1571, 0x158c, 0x1607, 0x1619, 0x169e, 0x16c8, 0x176a, 0x1858, 0x1892, 0x1951, 0x1979, 0x198a, 0x199c, 0x19be, 0x1a44, 0x1abc, 0x1afd, 0x1b10, 0x1b3a, 0x1b98, 0x1bf8, 0x1c86, 0x1cc4, 0x1cd4, 0x1ce8, 0x1d37, 0x1d56, 0x1dd0, 0x1dd9, 0x1e2d, 0x1e4e, 0x1f3a
