.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.EXPORTS
OBJECT rm44 of 0x43

.CODE
rm44::107:
		link	0x1e
		pushi	0x08
		pushi	0x0084
		pushi	0x026d
		pushi	0x026b
		pushi	0x026c
		pushi	0x0271
		pushi	0x0273
		pushi	0x0274
		pushi	0x0275
		calle	0x03be, 0x0000, 0x10
		pushi	0x7d
		push1	
		pushSelf	
		lag	0x49
		send	0x06
		pushi	0x7d
		push1	
		pushSelf	
		lag	0x48
		send	0x06
		lsg	0x6a
		ldi	0x04
		lt?	
		bnt	code_80
		pushi	0x009a
		push0	
		lag	0x64
		send	0x04
code_80:
		pushi	0x6b
		push0	
		super	0x43, 0x4
		push0	
		callb	0x3, 0x0
		push1	
		pushi	0x0c
		callb	0x8, 0x2
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	tmp1
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	tmp2
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	tmp3
		send	0x08
		pushi	0x6b
		push0	
		lofsa	butn
		send	0x04
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	exitBtn
		send	0x08
		pushi	0x6b
		push0	
		lofsa	coinSlot
		send	0x04
		pushi	0x6b
		push0	
		pushi	0x07
		push1	
		push1	
		pushi	0x011b
		push0	
		lofsa	info
		send	0x0e
		pushi	0x07
		push1	
		lsg	0xae
		ldi	0x0f
		and	
		push	
		pushi	0x6b
		push0	
		lofsa	pic1
		send	0x0a
		pushi	0x07
		push1	
		lsg	0xae
		ldi	0x04
		shr	
		push	
		ldi	0x0f
		and	
		push	
		pushi	0x6b
		push0	
		lofsa	pic2
		send	0x0a
		pushi	0x07
		push1	
		lsg	0xae
		ldi	0x08
		shr	
		push	
		ldi	0x0f
		and	
		push	
		pushi	0x6b
		push0	
		lofsa	pic3
		send	0x0a
		pushi	0x009f
		push1	
		pushi	0x46
		lag	0x64
		send	0x06
		lag	0xaf
		bnt	code_288
		pushi	0x07
		push1	
		push1	
		pushi	0x011b
		push0	
		lofsa	info
		send	0x0a
		push1	
		pushi	0x05
		lea	0x04, 0x00
		push	
		pushi	0x2c
		push0	
		lsg	0xaf
		lsg	0xa5
		callk	0x48, 0xa
		push	
		call	code_5000, 2
		jmp	code_300
code_288:
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	info
		send	0x06
code_300:
		ret	

rm44::60:
		link	0x03
		pushi	0x3c
		push0	
		rest	0x01
		super	0x43, 0x4
		pushi	0x00c2
		push0	
		lofsa	coinSlot
		send	0x04
		bnt	code_334
		pushi	0x00b9
		push0	
		lag	0x01
		send	0x04
		jmp	code_350
code_334:
		lofsa	butn
		send	0x00
		bnt	code_350
		pushi	0x00b9
		push0	
		lag	0x01
		send	0x04
code_350:
		pushi	0x013f
		push0	
		class	0x31
		send	0x04
		sat	0x02
		pushi	0x04
		push0	
		pushi	0x013f
		push0	
		class	0x31
		send	0x04
		send	0x04
		sat	0x00
		pushi	0x03
		push0	
		pushi	0x013f
		push0	
		class	0x31
		send	0x04
		send	0x04
		sat	0x01
		pushi	0x00d3
		push1	
		pushi	0x0a
		lag	0x00
		send	0x06
		bnt	code_505
		pushi	0x03
		lofsa	coinSlot
		push	
		lst	0x00
		lst	0x01
		call	code_5058, 6
		bnt	code_505
		lal	0x03
		not	
		bnt	code_505
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		sal	0x03
		pushi	0x00cf
		push0	
		lag	0x45
		send	0x04
		sal	0x04
		pushi	0x43
		push1	
		pushi	0x06
		pushi	0x00cc
		push1	
		pushi	0x43
		push1	
		pushi	0x06
		lag	0x45
		send	0x06
		push	
		pushi	0x00cf
		push1	
		pushi	0x43
		push1	
		pushi	0x0a
		class	0x40
		send	0x06
		push	
		lag	0x45
		send	0x12
		pushi	0x00b9
		push1	
		pushi	0x24
		push0	
		pushi	0x00cf
		push0	
		lag	0x45
		send	0x04
		send	0x04
		push	
		lag	0x01
		send	0x06
code_505:
		lag	0xaf
		bnt	code_617
		pushi	0x03
		lofsa	butn
		push	
		lst	0x00
		lst	0x01
		call	code_5058, 6
		bnt	code_617
		lal	0x03
		not	
		bnt	code_617
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		push	
		pushi	0x43
		push1	
		push2	
		lag	0x45
		send	0x06
		ne?	
		bnt	code_617
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		sal	0x03
		pushi	0x00cf
		push0	
		lag	0x45
		send	0x04
		sal	0x04
		pushi	0x43
		push1	
		push2	
		pushi	0x00cc
		push1	
		pushi	0x43
		push1	
		push2	
		lag	0x45
		send	0x06
		push	
		lag	0x45
		send	0x0c
		pushi	0x00b9
		push1	
		pushi	0x24
		push0	
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		send	0x04
		push	
		lag	0x01
		send	0x06
code_617:
		lal	0x03
		bnt	code_735
		pushi	0x00d3
		push1	
		pushi	0x0a
		lag	0x00
		send	0x06
		not	
		bnt	code_650
		pushi	0x03
		lofsa	coinSlot
		push	
		lst	0x00
		lst	0x01
		call	code_5058, 6
code_650:
		bt	code_686
		pushi	0x03
		lofsa	coinSlot
		push	
		lst	0x00
		lst	0x01
		call	code_5058, 6
		not	
		bnt	code_735
		pushi	0x03
		lofsa	butn
		push	
		lst	0x00
		lst	0x01
		call	code_5058, 6
		not	
code_686:
		bnt	code_735
		pushi	0x00cc
		push1	
		lsl	0x03
		pushi	0x00cf
		push1	
		lsl	0x04
		lag	0x45
		send	0x0c
		pushi	0x00b9
		push1	
		pushi	0x24
		push0	
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		send	0x04
		push	
		lag	0x01
		send	0x06
		ldi	0x00
		sal	0x04
		ldi	0x00
		sal	0x03
code_735:
		pushi	0x6c
		push0	
		lat	0x02
		send	0x04
		ret	

rm44::108:
		pushi	0x07
		push0	
		lofsa	pic1
		send	0x04
		push	
		pushi	0x07
		push0	
		lofsa	pic2
		send	0x04
		push	
		ldi	0x04
		shl	
		add	
		push	
		pushi	0x07
		push0	
		lofsa	pic3
		send	0x04
		push	
		ldi	0x08
		shl	
		add	
		sag	0xae
		pushi	0x54
		push1	
		pushSelf	
		lag	0x49
		send	0x06
		pushi	0x54
		push1	
		pushSelf	
		lag	0x48
		send	0x06
		pushi	0x009f
		push1	
		pushi	0x7f
		lag	0x64
		send	0x06
		pushi	0x66
		push1	
		push0	
		lag	0x9a
		send	0x06
		pushi	0x6c
		push0	
		rest	0x01
		super	0x43, 0x4
		ret	

rm44::129:
		pushi	0x0081
		push1	
		lsp	0x01
		rest	0x02
		super	0x43, 0x6
		bnt	code_841
		jmp	code_1051
code_841:
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		push	
		pushi	0x43
		push1	
		push0	
		lag	0x45
		send	0x06
		eq?	
		bnt	code_936
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		not	
		bnt	code_936
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
		not	
		bnt	code_936
		pushi	0x28
		push0	
		lap	0x01
		send	0x04
		push	
		ldi	0x01
		eq?	
		bt	code_912
		pushi	0x22
		push0	
		lap	0x01
		send	0x04
		push	
		ldi	0x40
		and	
code_912:
		bnt	code_936
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		pushi	0x4c
		push1	
		push1	
		lap	0x01
		send	0x06
		jmp	code_1051
code_936:
		pushi	0x00cc
		push0	
		lag	0x45
		send	0x04
		push	
		pushi	0x43
		push1	
		pushi	0x06
		lag	0x45
		send	0x06
		eq?	
		bnt	code_1051
		pushi	0x00cf
		push0	
		lag	0x45
		send	0x04
		push	
		pushi	0x43
		push1	
		pushi	0x0f
		class	0x40
		send	0x06
		eq?	
		bnt	code_1051
		pushi	0x28
		push0	
		lap	0x01
		send	0x04
		push	
		ldi	0x04
		eq?	
		bnt	code_1051
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		not	
		bnt	code_1051
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
		not	
		bnt	code_1051
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		pushi	0x4c
		push1	
		push1	
		lap	0x01
		send	0x06
code_1051:
		ret	


.OBJECT rm44 of 0x43
Exported
Function area offset: 0x30
Selectors [23]:
  [#0] = 0x43
  [#1] = 0x43
  [#2] = 0x0
  [#3] = {'val': 'rm44', 'id': 'string_1'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = {'val': 'It\'s a \\"Slots-O-Death\\" slot machine. They play for keeps around here.', 'id': 'string_0'}
  [#10] = 0x2c
  [#11] = 0xffff
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0xa0
  [#21] = 0x8ad0
  [#22] = 0x0
Overriden functions: 4
  [0x6b]  = rm44::107   	 ; @0xe
  [0x3c]  = rm44::60   	 ; @0x12d
  [0x6c]  = rm44::108   	 ; @0x2e7
  [0x81]  = rm44::129   	 ; @0x338

.CODE
initScript::138:
		link	0x1e
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1159
		push0	
		callb	0x2, 0x0
		ldi	0x02
		aTop	0x10
		jmp	code_1230
code_1159:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1230
		lag	0xaf
		bnt	code_1209
		pushi	0x07
		push1	
		push1	
		pushi	0x011b
		push0	
		lofsa	info
		send	0x0a
		push1	
		pushi	0x05
		lea	0x04, 0x00
		push	
		pushi	0x2c
		push0	
		lsg	0xaf
		lsg	0xa5
		callk	0x48, 0xa
		push	
		call	code_5000, 2
		jmp	code_1221
code_1209:
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	info
		send	0x06
code_1221:
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x04
code_1230:
		toss	
		ret	


.OBJECT initScript of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'initScript', 'id': 'string_2'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = initScript::138   	 ; @0x46e

.CODE
spinPic::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1404
		pToa	0x1a
		bnt	code_1388
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pushi	0x08
		pushSelf	
		pToa	0x08
		send	0x0c
		pushi	0x06
		push1	
		push1	
		pushi	0x07
		push1	
		pushi	0x07
		push0	
		pToa	0x08
		send	0x04
		push	
		ldi	0x01
		add	
		push	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pushi	0x60
		pushi	0x0119
		pushi	0x03
		class	0x1e
		push	
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pushi	0x34
		pToa	0x1a
		send	0x1e
		jmp	code_1636
code_1388:
		pushi	0x011b
		push0	
		pToa	0x08
		send	0x04
		pushi	0x6c
		push0	
		self	0x04
		jmp	code_1636
code_1404:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1636
		pushi	0x07
		push1	
		pushi	0x07
		push0	
		pToa	0x1a
		send	0x04
		push	
		pushi	0x03
		push1	
		pushi	0x34
		pToa	0x08
		send	0x0c
		pushi	0x3f
		push0	
		pToa	0x1a
		send	0x04
		bnt	code_1446
		ldi	0x00
		jmp	code_1631
code_1446:
		pushi	0x3f
		push0	
		pToa	0x08
		send	0x04
		bnt	code_1478
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		pToa	0x08
		send	0x04
		push	
		ldi	0x01
		sub	
		push	
		pToa	0x08
		send	0x06
		jmp	code_1631
code_1478:
		lsl	0x02
		ldi	0x01
		eq?	
		bnt	code_1534
		pushi	0x07
		push0	
		pToa	0x08
		send	0x04
		push	
		ldi	0x00
		eq?	
		bnt	code_1534
		pushi	0x06
		push1	
		pushi	0x03
		pToa	0x1a
		send	0x06
		pushi	0x2b
		push1	
		pushi	0x026d
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lofsa	slotSound
		send	0x10
		ldi	0x00
		aTop	0x1a
		jmp	code_1631
code_1534:
		lal	0x02
		bnt	code_1590
		pushi	0x07
		push0	
		pToa	0x08
		send	0x04
		push	
		lsl	0x02
		ldi	0x01
		sub	
		eq?	
		bnt	code_1631
		pushi	0x2b
		push1	
		pushi	0x026d
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lofsa	slotSound
		send	0x10
		pushi	0x06
		push1	
		pushi	0x03
		pToa	0x1a
		send	0x06
		ldi	0x00
		aTop	0x1a
		jmp	code_1631
code_1590:
		push2	
		push0	
		pushi	0x04
		callk	0x3c, 0x4
		bnt	code_1631
		pushi	0x2b
		push1	
		pushi	0x026d
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lofsa	slotSound
		send	0x10
		pushi	0x06
		push1	
		pushi	0x03
		pToa	0x1a
		send	0x06
		ldi	0x00
		aTop	0x1a
code_1631:
		pushi	0x6b
		push0	
		self	0x04
code_1636:
		toss	
		ret	


.OBJECT spinPic of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'spinPic', 'id': 'string_3'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = spinPic::138   	 ; @0x50a

.CODE
spinDone::138:
		link	0x1e
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1717
		ldi	0x03
		aTop	0x10
		jmp	code_2281
code_1717:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2015
		pushi	0x07
		push0	
		lofsa	pic1
		send	0x04
		push	
		pushi	0x07
		push0	
		lofsa	pic2
		send	0x04
		eq?	
		bnt	code_1817
		pprev	
		pushi	0x07
		push0	
		lofsa	pic3
		send	0x04
		eq?	
		bnt	code_1817
		pushi	0x07
		push0	
		lofsa	pic1
		send	0x04
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1780
		ldi	0x03e8
		jmp	code_1813
code_1780:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1792
		ldi	0x05
		jmp	code_1813
code_1792:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1804
		ldi	0x0a
		jmp	code_1813
code_1804:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1813
		ldi	0x14
code_1813:
		toss	
		jmp	code_2006
code_1817:
		push2	
		pushi	0x07
		push0	
		lofsa	pic1
		send	0x04
		eq?	
		bnt	code_1848
		pprev	
		pushi	0x07
		push0	
		lofsa	pic2
		send	0x04
		eq?	
		bnt	code_1848
		ldi	0x03
		jmp	code_2006
code_1848:
		push2	
		pushi	0x07
		push0	
		lofsa	pic1
		send	0x04
		eq?	
		bnt	code_1866
		ldi	0x01
		jmp	code_2006
code_1866:
		push2	
		push0	
		pushi	0x06
		callk	0x3c, 0x4
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1892
		push2	
		pushi	0x2c
		push2	
		call	code_5000, 4
		jmp	code_2003
code_1892:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1911
		push2	
		pushi	0x2c
		pushi	0x03
		call	code_5000, 4
		jmp	code_2003
code_1911:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1930
		push2	
		pushi	0x2c
		pushi	0x04
		call	code_5000, 4
		jmp	code_2003
code_1930:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1949
		push2	
		pushi	0x2c
		pushi	0x05
		call	code_5000, 4
		jmp	code_2003
code_1949:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1968
		push2	
		pushi	0x2c
		pushi	0x06
		call	code_5000, 4
		jmp	code_2003
code_1968:
		dup	
		ldi	0x05
		eq?	
		bnt	code_1987
		push2	
		pushi	0x2c
		pushi	0x07
		call	code_5000, 4
		jmp	code_2003
code_1987:
		dup	
		ldi	0x06
		eq?	
		bnt	code_2003
		push2	
		pushi	0x2c
		pushi	0x08
		call	code_5000, 4
code_2003:
		toss	
		ldi	0x00
code_2006:
		sal	0x00
		ldi	0x03
		aTop	0x10
		jmp	code_2281
code_2015:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2093
		pushi	0x2b
		push1	
		lsl	0x00
		ldi	0x03e8
		eq?	
		bnt	code_2040
		ldi	0x0272
		jmp	code_2077
code_2040:
		lsl	0x00
		ldi	0x05
		ge?	
		bnt	code_2054
		ldi	0x026c
		jmp	code_2077
code_2054:
		push0	
		lal	0x00
		lt?	
		bnt	code_2074
		pprev	
		ldi	0x05
		lt?	
		bnt	code_2074
		ldi	0x026b
		jmp	code_2077
code_2074:
		ldi	0x0275
code_2077:
		push	
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push1	
		pushSelf	
		lag	0x9a
		send	0x12
		jmp	code_2281
code_2093:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2248
		lsl	0x00
		ldi	0x03e8
		ne?	
		bnt	code_2220
		lsg	0xa5
		lsl	0x00
		lag	0xaf
		mul	
		add	
		sag	0xa5
		lal	0x00
		bnt	code_2209
		pushi	0x00d3
		push1	
		pushi	0x0a
		lag	0x00
		send	0x06
		not	
		bnt	code_2148
		pushi	0x0145
		push1	
		pushi	0x0a
		lag	0x00
		send	0x06
code_2148:
		push1	
		pushi	0x05
		lea	0x04, 0x00
		push	
		pushi	0x2c
		pushi	0x09
		lsl	0x00
		lag	0xaf
		mul	
		push	
		lsg	0xa5
		callk	0x48, 0xa
		push	
		call	code_5000, 2
		lsg	0xa5
		ldi	0x012c
		gt?	
		bnt	code_2209
		push1	
		pushi	0x3f
		callb	0x7, 0x2
		push2	
		pushi	0x2c
		pushi	0x0a
		calle	0xff, 0x00, 0x04
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
code_2209:
		ldi	0x00
		sag	0xaf
		ldi	0x04
		aTop	0x12
		jmp	code_2281
code_2220:
		push1	
		pushi	0x27
		callb	0x7, 0x2
		push2	
		pushi	0x2c
		pushi	0x0b
		call	code_5000, 4
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_2281
code_2248:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2281
		push0	
		call	code_5040, 0
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	info
		send	0x0c
		pushi	0x6c
		push0	
		self	0x04
code_2281:
		toss	
		ret	

		bnot	

.OBJECT spinDone of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'spinDone', 'id': 'string_4'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = spinDone::138   	 ; @0x6a0

.CODE
pic1::139:
		pushi	0x42
		push1	
		push0	
		lofsa	tmp2
		send	0x06
		pushi	0x06
		push1	
		pushi	0x03
		lofsa	tmp1
		send	0x06
		pushi	0x008b
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

pic1::266:
		lsp	0x01
		dup	
		ldi	0x03
		eq?	
		bnt	code_2392
		push2	
		pushi	0x2c
		pushi	0x0c
		calle	0xff, 0x00, 0x04
		jmp	code_2550
code_2392:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_2411
		push2	
		pushi	0x2c
		pushi	0x0d
		calle	0xff, 0x00, 0x04
		jmp	code_2550
code_2411:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_2430
		push2	
		pushi	0x2c
		pushi	0x0e
		calle	0xff, 0x00, 0x04
		jmp	code_2550
code_2430:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2537
		lsp	0x02
		dup	
		ldi	0x0f
		eq?	
		bnt	code_2501
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_2466
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_2466:
		bnt	code_2474
		ldi	0x00
		jmp	code_2533
code_2474:
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_2533
code_2501:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_2520
		push2	
		pushi	0x2c
		pushi	0x0f
		calle	0xff, 0x00, 0x04
		jmp	code_2533
code_2520:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x30, 0x8
code_2533:
		toss	
		jmp	code_2550
code_2537:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x30, 0x8
code_2550:
		toss	
		ret	


.OBJECT pic1 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'pic1', 'id': 'string_7'}
  [#4] = 0x5f
  [#5] = 0x34
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0xa
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x10a]  = pic1::266   	 ; @0x943
  [0x8b]  = pic1::139   	 ; @0x926

.CODE
pic2::139:
		pushi	0x42
		push1	
		push0	
		lofsa	tmp3
		send	0x06
		pushi	0x06
		push1	
		pushi	0x03
		lofsa	tmp2
		send	0x06
		pushi	0x008b
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

pic2::266:
		pushi	0x010a
		push0	
		rest	0x01
		lofsa	pic1
		send	0x04
		ret	

		bnot	

.OBJECT pic2 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'pic2', 'id': 'string_8'}
  [#4] = 0xa0
  [#5] = 0x34
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x3
  [#26] = 0xa
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x10a]  = pic2::266   	 ; @0xa9f
  [0x8b]  = pic2::139   	 ; @0xa82

.CODE
pic3::139:
		pushi	0x008c
		push1	
		lofsa	spinDone
		push	
		lag	0x02
		send	0x06
		pushi	0x06
		push1	
		pushi	0x03
		lofsa	tmp3
		send	0x06
		pushi	0x009c
		push1	
		push0	
		lag	0x9a
		send	0x06
		pushi	0x008b
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

pic3::266:
		pushi	0x010a
		push0	
		rest	0x01
		lofsa	pic1
		send	0x04
		ret	

		bnot	

.OBJECT pic3 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'pic3', 'id': 'string_9'}
  [#4] = 0xdf
  [#5] = 0x34
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x2
  [#26] = 0xa
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x10a]  = pic3::266   	 ; @0xb5f
  [0x8b]  = pic3::139   	 ; @0xb36

.CODE
tmp1::266:
		pushi	0x010a
		push0	
		rest	0x01
		lofsa	pic1
		send	0x04
		ret	


.OBJECT tmp1 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'tmp1', 'id': 'string_10'}
  [#4] = 0x5f
  [#5] = 0x5e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 1
  [0x10a]  = tmp1::266   	 ; @0xbf6

.CODE
tmp2::266:
		pushi	0x010a
		push0	
		rest	0x01
		lofsa	pic1
		send	0x04
		ret	


.OBJECT tmp2 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'tmp2', 'id': 'string_11'}
  [#4] = 0xa0
  [#5] = 0x5e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0xa
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 1
  [0x10a]  = tmp2::266   	 ; @0xc88

.CODE
tmp3::266:
		pushi	0x010a
		push0	
		rest	0x01
		lofsa	pic1
		send	0x04
		ret	


.OBJECT tmp3 of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'tmp3', 'id': 'string_12'}
  [#4] = 0xdf
  [#5] = 0x5e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'pretty picture', 'id': 'string_5'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round.", 'id': 'string_6'}
  [#22] = 0xb
  [#23] = 0x90
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0xa
  [#27] = 0x0
  [#28] = 0x4810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 1
  [0x10a]  = tmp3::266   	 ; @0xd1a

.CODE
coinSlot::266:
		link	0x1e
		lsp	0x01
		dup	
		ldi	0x04
		eq?	
		bnt	code_3756
		lsp	0x02
		dup	
		ldi	0x0a
		eq?	
		bnt	code_3679
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_3540
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_3540:
		bnt	code_3548
		ldi	0x00
		jmp	code_3752
code_3548:
		lag	0xa5
		not	
		bnt	code_3566
		push2	
		pushi	0x2c
		pushi	0x10
		calle	0xff, 0x00, 0x04
		jmp	code_3752
code_3566:
		lsg	0xaf
		ldi	0x03
		lt?	
		bnt	code_3667
		pushi	0x2b
		push1	
		pushi	0x0271
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		lag	0xaf
		not	
		bnt	code_3615
		pushi	0x0094
		push1	
		push0	
		pushi	0x07
		push1	
		push1	
		pushi	0x011b
		push0	
		lofsa	info
		send	0x10
code_3615:
		+ag	0xaf
		-ag	0xa5
		not	
		bnt	code_3642
		push2	
		pushi	0x2c
		pushi	0x11
		calle	0xff, 0x00, 0x04
		pushi	0x0146
		push1	
		pushi	0x0a
		lag	0x00
		send	0x06
code_3642:
		push1	
		pushi	0x05
		lea	0x04, 0x00
		push	
		pushi	0x2c
		push0	
		lsg	0xaf
		lsg	0xa5
		callk	0x48, 0xa
		push	
		call	code_5000, 2
		jmp	code_3752
code_3667:
		push2	
		pushi	0x2c
		pushi	0x12
		calle	0xff, 0x00, 0x04
		jmp	code_3752
code_3679:
		dup	
		ldi	0x0f
		eq?	
		bnt	code_3741
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_3706
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_3706:
		bnt	code_3714
		ldi	0x00
		jmp	code_3752
code_3714:
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_3752
code_3741:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x2c, 0x8
code_3752:
		toss	
		jmp	code_3767
code_3756:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x2c, 0x8
code_3767:
		toss	
		ret	

		bnot	

.OBJECT coinSlot of 0x2c
Function area offset: 0x2e
Selectors [22]:
  [#0] = 0x2c
  [#1] = 0x2c
  [#2] = 0x0
  [#3] = {'val': 'coinSlot', 'id': 'string_15'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x7e
  [#10] = 0x32
  [#11] = 0x9c
  [#12] = 0x54
  [#13] = {'val': 'buckazoid slot', 'id': 'string_13'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This is where you deposit buckazoids. You may deposit up to three buckazoids for each spin.', 'id': 'string_14'}
Overriden functions: 1
  [0x10a]  = coinSlot::266   	 ; @0xdac

.CODE
butn::266:
		lsp	0x01
		dup	
		ldi	0x03
		eq?	
		bnt	code_4179
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_3867
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_3867:
		bnt	code_3875
		ldi	0x00
		jmp	code_3989
code_3875:
		lag	0xaf
		not	
		bnt	code_3896
		pushi	0x008c
		push1	
		lofsa	pleaseInsert
		push	
		lag	0x02
		send	0x06
		jmp	code_3989
code_3896:
		push1	
		pushi	0x0d
		callb	0x6, 0x2
		bnt	code_3954
		push2	
		push2	
		pushi	0x04
		callk	0x3c, 0x4
		sal	0x02
		push	
		dup	
		ldi	0x02
		eq?	
		bnt	code_3927
		ldi	0x05
		jmp	code_3948
code_3927:
		dup	
		ldi	0x03
		eq?	
		bnt	code_3939
		ldi	0x14
		jmp	code_3948
code_3939:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3948
		ldi	0x0a
code_3948:
		toss	
		sal	0x00
		jmp	code_3989
code_3954:
		lag	0xa5
		not	
		bnt	code_3967
		ldi	0x01
		sal	0x02
		jmp	code_3989
code_3967:
		push2	
		push0	
		pushi	0x06
		callk	0x3c, 0x4
		not	
		bnt	code_3985
		ldi	0x01
		sal	0x02
		jmp	code_3989
code_3985:
		ldi	0x00
		sal	0x02
code_3989:
		lag	0xaf
		bnt	code_4278
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		not	
		bnt	code_4278
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
		not	
		bnt	code_4278
		pushi	0x2b
		push1	
		pushi	0x0273
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x2b
		push1	
		pushi	0x0274
		pushi	0x06
		push1	
		push1	
		pushi	0x66
		push1	
		push1	
		pushi	0x2a
		push0	
		pushi	0x009c
		push1	
		push1	
		lag	0x9a
		send	0x1c
		pushi	0x42
		push1	
		pushi	0x0a
		pushi	0x008c
		pushi	0x03
		push1	
		lofsa	spinPic
		push	
		callk	0x4, 0x2
		push	
		lofsa	pic1
		push	
		lofsa	tmp1
		push	
		lofsa	pic1
		send	0x10
		pushi	0x42
		push1	
		pushi	0x0a
		pushi	0x008c
		pushi	0x03
		push1	
		lofsa	spinPic
		push	
		callk	0x4, 0x2
		push	
		lofsa	pic2
		push	
		lofsa	tmp2
		push	
		lofsa	pic2
		send	0x10
		pushi	0x42
		push1	
		pushi	0x0a
		pushi	0x008c
		pushi	0x03
		push1	
		lofsa	spinPic
		push	
		callk	0x4, 0x2
		push	
		lofsa	pic3
		push	
		lofsa	tmp3
		push	
		lofsa	pic3
		send	0x10
		pushi	0x42
		push1	
		push1	
		lofsa	tmp2
		send	0x06
		pushi	0x42
		push1	
		push1	
		lofsa	tmp3
		send	0x06
		jmp	code_4278
code_4179:
		dup	
		ldi	0x04
		eq?	
		bnt	code_4265
		lsp	0x02
		ldi	0x0f
		eq?	
		bnt	code_4249
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_4214
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_4214:
		bnt	code_4222
		ldi	0x00
		jmp	code_4278
code_4222:
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_4278
code_4249:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x2c, 0x8
		jmp	code_4278
code_4265:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x2c, 0x8
code_4278:
		toss	
		ret	


.OBJECT butn of 0x2c
Function area offset: 0x2e
Selectors [22]:
  [#0] = 0x2c
  [#1] = 0x2c
  [#2] = 0x0
  [#3] = {'val': 'butn', 'id': 'string_18'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x7d
  [#10] = 0xee
  [#11] = 0x9b
  [#12] = 0x110
  [#13] = {'val': 'button', 'id': 'string_16'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'Push this button to start the wheels spinning.', 'id': 'string_17'}
Overriden functions: 1
  [0x10a]  = butn::266   	 ; @0xefe

.CODE
pleaseInsert::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_4394
		push0	
		callb	0x2, 0x0
		pushi	0x0094
		push1	
		push0	
		pushi	0x07
		push1	
		push1	
		lofsa	info
		send	0x0c
		push2	
		pushi	0x2c
		pushi	0x13
		call	code_5000, 4
		ldi	0x03
		aTop	0x12
		jmp	code_4427
code_4394:
		dup	
		ldi	0x01
		eq?	
		bnt	code_4427
		push0	
		call	code_5040, 0
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	info
		send	0x06
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x04
code_4427:
		toss	
		ret	

		bnot	

.OBJECT pleaseInsert of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'pleaseInsert', 'id': 'string_19'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = pleaseInsert::138   	 ; @0x10fc

.CODE
info::266:
		lsp	0x01
		dup	
		ldi	0x04
		eq?	
		bnt	code_4576
		lsp	0x02
		ldi	0x0f
		eq?	
		bnt	code_4560
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_4525
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_4525:
		bnt	code_4533
		ldi	0x00
		jmp	code_4589
code_4533:
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_4589
code_4560:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x2f, 0x8
		jmp	code_4589
code_4576:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		rest	0x03
		super	0x2f, 0x8
code_4589:
		toss	
		ret	

		bnot	

.OBJECT info of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'info', 'id': 'string_22'}
  [#4] = 0xa6
  [#5] = 0x85
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'information window', 'id': 'string_20'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This little window tells you how to win, how much you can win, and other useful information.', 'id': 'string_21'}
  [#22] = 0x2
  [#23] = 0x90
  [#24] = 0x0
  [#25] = 0x3
  [#26] = 0xe
  [#27] = 0x0
  [#28] = 0x10
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x96
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = info::266   	 ; @0x1188

.CODE
exitBtn::266:
		lsp	0x01
		ldi	0x04
		eq?	
		bnt	code_4773
		lsp	0x02
		ldi	0x0f
		eq?	
		bnt	code_4773
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_4738
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_4738:
		bnt	code_4746
		ldi	0x00
		jmp	code_4888
code_4746:
		push2	
		pushi	0x2c
		push1	
		calle	0xff, 0x00, 0x04
		push1	
		pushi	0x0c
		callb	0x7, 0x2
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_4888
code_4773:
		pushi	0x04
		lsp	0x01
		pushi	0x03
		pushi	0x0b
		push1	
		calle	0x03e7, 0x0005, 0x08
		bnt	code_4877
		pushi	0x0088
		push0	
		lofsa	pic3
		send	0x04
		bt	code_4811
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
code_4811:
		bnt	code_4819
		ldi	0x00
		jmp	code_4888
code_4819:
		pushi	0x07
		push1	
		push1	
		self	0x06
		push2	
		pushi	0x1b
		push0	
		lag	0x05
		send	0x04
		push	
		push0	
		callk	0xb, 0x4
		push2	
		pushi	0x1b
		push0	
		lag	0x05
		send	0x04
		push	
		push0	
		callk	0xb, 0x4
		push2	
		pushi	0x1b
		push0	
		lag	0x05
		send	0x04
		push	
		push0	
		callk	0xb, 0x4
		pushi	0x0177
		push1	
		pushi	0x2b
		lag	0x02
		send	0x06
		jmp	code_4888
code_4877:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x2f, 0x8
code_4888:
		ret	

		bnot	

.OBJECT exitBtn of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'exitBtn', 'id': 'string_25'}
  [#4] = 0xa0
  [#5] = 0xba
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'exit button', 'id': 'string_23'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'This button takes you back to the bar.', 'id': 'string_24'}
  [#22] = 0x2
  [#23] = 0xf4
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = exitBtn::266   	 ; @0x125e

.CODE
code_5000:
		lal	0x01
		bnt	code_5010
		push0	
		call	code_5040, 0
code_5010:
		pushi	0x0a
		rest	0x01
		pushi	0x65
		push1	
		pushi	0x6a
		pushi	0x00a0
		pushi	0x64
		pushi	0x50
		pushi	0x7e
		pushi	0x66
		lsg	0x81
		pushi	0x6b
		callk	0x1b, 0x14
		sal	0x01
		ret	

code_5040:
		pushi	0x04
		pushi	0x2c
		pushi	0x14
		pushi	0x6c
		lsl	0x01
		callk	0x1b, 0x8
		ldi	0x00
		sal	0x01
		ret	

code_5058:
		pushi	0x06
		pushi	0x0a
		push0	
		lap	0x01
		send	0x04
		push	
		pushi	0x09
		push0	
		lap	0x01
		send	0x04
		push	
		pushi	0x0c
		push0	
		lap	0x01
		send	0x04
		push	
		pushi	0x0b
		push0	
		lap	0x01
		send	0x04
		push	
		lsp	0x02
		lsp	0x03
		calle	0x03e7, 0x0004, 0x0c
		ret	

		bnot	

.OBJECT slotSound of 0xa
Function area offset: 0x28
Selectors [19]:
  [#0] = 0xa
  [#1] = 0xa
  [#2] = 0x0
  [#3] = {'val': 'slotSound', 'id': 'string_26'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x7f
  [#9] = 0x0
  [#10] = 0x1
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0x0
Overriden functions: 0

.STRINGS
string_0: "It's a \"Slots-O-Death\" slot machine. They play for keeps around here."
string_1: "rm44"		 ; special
string_2: "initScript"		 ; special
string_3: "spinPic"		 ; special
string_4: "spinDone"		 ; special
string_5: "pretty picture"
string_6: "These are the slot machine's pretty pictures. Put some money in the slot, push the button, and watch them go 'round and 'round."
string_7: "pic1"		 ; special
string_8: "pic2"		 ; special
string_9: "pic3"		 ; special
string_10: "tmp1"		 ; special
string_11: "tmp2"		 ; special
string_12: "tmp3"		 ; special
string_13: "buckazoid slot"
string_14: "This is where you deposit buckazoids. You may deposit up to three buckazoids for each spin."
string_15: "coinSlot"		 ; special
string_16: "button"
string_17: "Push this button to start the wheels spinning."
string_18: "butn"		 ; special
string_19: "pleaseInsert"		 ; special
string_20: "information window"
string_21: "This little window tells you how to win, how much you can win, and other useful information."
string_22: "info"		 ; special
string_23: "exit button"
string_24: "This button takes you back to the bar."
string_25: "exitBtn"		 ; special
string_26: "slotSound"		 ; special
string_unused_27: ""


.PRELOAD_TEXT

.LOCAL_VARS
0x0, 0x0, 0x0, 0x0, 0x0

.RELOCATION
num of pointers: 112
0x68, 0x74, 0x80, 0x88, 0x94, 0x9c, 0xac, 0xbd, 0xd2, 0xe7, 0x103, 0x128, 0x13c, 0x14f, 0x196, 0x201, 0x27f, 0x290, 0x2a2, 0x2eb, 0x2f4, 0x302, 0x363, 0x3e7, 0x42e, 0x43a, 0x49c, 0x4c1, 0x4e2, 0x5f3, 0x622, 0x64e, 0x678, 0x6c0, 0x6c9, 0x6d6, 0x6e2, 0x71e, 0x72b, 0x73d, 0x8e0, 0x8fe, 0x92b, 0x935, 0x993, 0xa0a, 0xa1e, 0xa2e, 0xa87, 0xa91, 0xaa6, 0xabe, 0xad2, 0xae2, 0xb3b, 0xb48, 0xb66, 0xb7e, 0xb92, 0xba2, 0xbfd, 0xc14, 0xc28, 0xc38, 0xc8f, 0xca6, 0xcba, 0xcca, 0xd21, 0xd38, 0xd4c, 0xd5c, 0xdc5, 0xe1b, 0xe6b, 0xecc, 0xee0, 0xef0, 0xf0c, 0xf2e, 0xf9f, 0xfea, 0xff2, 0xff6, 0xffa, 0x100a, 0x1012, 0x1016, 0x101a, 0x102a, 0x1032, 0x1036, 0x103a, 0x1043, 0x104c, 0x1067, 0x10ca, 0x10de, 0x10ee, 0x1116, 0x113e, 0x1160, 0x119e, 0x1202, 0x1216, 0x1226, 0x1273, 0x12bc, 0x132c, 0x1340, 0x1350, 0x1402
