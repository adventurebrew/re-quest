.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.CODE
Jump::107:
		link	0x01
		lap	0x01
		aTop	0x08
		lsp	0x00
		ldi	0x02
		eq?	
		bnt	code_22
		lap	0x02
		aTop	0x0a
code_22:
		pushi	0x12
		push0	
		pToa	0x08
		send	0x04
		aTop	0x30
		pushi	0x11
		push0	
		pToa	0x08
		send	0x04
		aTop	0x2e
		pushi	0x12
		push1	
		push0	
		pushi	0x42
		push0	
		pToa	0x08
		send	0x0a
		pTos	0x2a
		ldi	0x4e20
		eq?	
		bnt	code_136
		pushi	0x3a
		push0	
		pToa	0x08
		send	0x04
		sat	0x00
		push	
		ldi	0x014a
		gt?	
		bt	code_99
		lst	0x00
		ldi	0x1e
		lt?	
		bt	code_99
		pushi	0x0096
		lat	0x00
		lt?	
		bnt	code_107
		pprev	
		ldi	0x00d2
		lt?	
code_99:
		bnt	code_107
		ldi	0x00
		jmp	code_134
code_107:
		lst	0x00
		ldi	0x00b4
		lt?	
		bnt	code_126
		pushi	0x36
		push0	
		pToa	0x08
		send	0x04
		jmp	code_134
code_126:
		pushi	0x36
		push0	
		pToa	0x08
		send	0x04
		neg	
code_134:
		aTop	0x2a
code_136:
		pToa	0x32
		bnt	code_150
		pTos	0x2a
		pToa	0x26
		mul	
		push	
		ldi	0x00
		lt?	
code_150:
		not	
		bnt	code_158
		ldi	0x00
		aTop	0x32
code_158:
		pToa	0x34
		bnt	code_172
		pTos	0x2c
		pToa	0x28
		mul	
		push	
		ldi	0x00
		lt?	
code_172:
		not	
		bnt	code_180
		ldi	0x00
		aTop	0x34
code_180:
		pushi	0x0106
		push0	
		self	0x04
		ret	

Jump::60:
		link	0x02
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		aTop	0x22
		pushi	0x03
		push0	
		pToa	0x08
		send	0x04
		aTop	0x24
		pushi	0x04
		push1	
		pTos	0x22
		pToa	0x2a
		add	
		push	
		pushi	0x03
		push1	
		pTos	0x24
		pToa	0x2c
		add	
		push	
		pToa	0x08
		send	0x0c
		pToa	0x2a
		sat	0x00
		pToa	0x2c
		sat	0x01
		pTos	0x2a
		pToa	0x26
		add	
		aTop	0x2a
		pTos	0x2c
		pToa	0x28
		add	
		aTop	0x2c
		pToa	0x32
		not	
		bnt	code_300
		pTos	0x0c
		ldi	0x4e20
		ne?	
		bnt	code_300
		push0	
		pTos	0x10
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0c
		sub	
		mul	
		le?	
		bnt	code_300
		pushi	0x04
		push1	
		pTos	0x0c
		pToa	0x08
		send	0x06
		pushi	0x64
		push0	
		self	0x04
		ret	

code_300:
		pToa	0x34
		not	
		bnt	code_349
		pTos	0x0e
		ldi	0x4e20
		ne?	
		bnt	code_349
		push0	
		pTos	0x12
		pushi	0x03
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0e
		sub	
		mul	
		le?	
		bnt	code_349
		pushi	0x03
		push1	
		pTos	0x0e
		pToa	0x08
		send	0x06
		pushi	0x64
		push0	
		self	0x04
		ret	

code_349:
		lst	0x00
		pToa	0x2a
		mul	
		push	
		ldi	0x00
		le?	
		bnt	code_371
		ldi	0x00
		aTop	0x32
		pushi	0x0106
		push0	
		self	0x04
code_371:
		lst	0x01
		pToa	0x2c
		mul	
		push	
		ldi	0x00
		le?	
		bnt	code_393
		ldi	0x00
		aTop	0x34
		pushi	0x0106
		push0	
		self	0x04
code_393:
		ret	

Jump::100:
		pushi	0x12
		push1	
		pTos	0x30
		pushi	0x11
		push1	
		pTos	0x2e
		pToa	0x08
		send	0x0c
		pToa	0x0a
		bnt	code_421
		ldi	0x01
		sag	0x25
		ldi	0x01
		aTop	0x20
code_421:
		ret	

Jump::262:
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0c
		gt?	
		bt	code_455
		pushi	0x04
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0c
		eq?	
		bnt	code_463
		pTos	0x2a
		ldi	0x00
		gt?	
code_455:
		bnt	code_463
		ldi	0xff
		jmp	code_465
code_463:
		ldi	0x01
code_465:
		aTop	0x10
		pushi	0x03
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0e
		gt?	
		bt	code_500
		pushi	0x03
		push0	
		pToa	0x08
		send	0x04
		push	
		pToa	0x0e
		eq?	
		bnt	code_508
		pTos	0x2c
		ldi	0x00
		gt?	
code_500:
		bnt	code_508
		ldi	0xff
		jmp	code_510
code_508:
		ldi	0x01
code_510:
		aTop	0x12
		ret	

Jump::216:
		pushi	0x3b
		push1	
		push0	
		pToa	0x08
		send	0x06
		pToa	0x20
		bnt	code_543
		push1	
		pTos	0x0a
		callk	0x6, 0x2
		bnt	code_543
		pushi	0x008b
		push0	
		pToa	0x0a
		send	0x04
code_543:
		pushi	0x6c
		push0	
		self	0x04
		ret	

		bnot	

.CLASS Jump of 0x1d
Function area offset: 0x6e
Selectors [27]:
  [0x0] = 0x29
  [0x1] = 0x1d
  [0x2] = 0x8000
  [0x17] = {'val': 'Jump', 'id': 'string_0'}
  [0x2d] = 0x0
  [0x89] = 0x0
  [0x4] = 0x4e20
  [0x3] = 0x4e20
  [0x2e] = 0x0
  [0x2f] = 0x0
  [0x30] = 0x0
  [0x31] = 0x0
  [0x32] = 0x0
  [0x33] = 0x0
  [0x34] = 0x0
  [0x35] = 0x0
  [0xd5] = 0x0
  [0xde] = 0x0
  [0xdf] = 0x0
  [0x102] = 0x0
  [0x103] = 0x3
  [0x36] = 0x4e20
  [0x37] = 0x0
  [0x11] = 0x0
  [0x12] = 0x0
  [0x104] = 0x1
  [0x105] = 0x1
Overriden functions: 5
  [0x6b]  = Jump::107   	 ; @0x4
  [0x3c]  = Jump::60   	 ; @0xbb
  [0x64]  = Jump::100   	 ; @0x18a
  [0xd8]  = Jump::216   	 ; @0x201
  [0x106]  = Jump::262   	 ; @0x1a6

.CODE
JumpTo::107:
		link	0x36
		lap	0x01
		aTop	0x08
		lap	0x02
		aTop	0x0c
		lap	0x03
		aTop	0x0e
		pTos	0x0c
		pushi	0x04
		push0	
		lap	0x01
		send	0x04
		eq?	
		bnt	code_762
		pTos	0x0e
		pushi	0x03
		push0	
		lap	0x01
		send	0x04
		eq?	
		bnt	code_762
		pushi	0x12
		push0	
		pToa	0x08
		send	0x04
		aTop	0x30
		pushi	0x11
		push0	
		pToa	0x08
		send	0x04
		aTop	0x2e
		pushi	0x64
		push0	
		self	0x04
		ret	

code_762:
		pTos	0x0c
		pushi	0x04
		push0	
		lap	0x01
		send	0x04
		sub	
		sat	0x00
		pTos	0x0e
		pushi	0x03
		push0	
		lap	0x01
		send	0x04
		sub	
		sat	0x01
		pushi	0x04
		pushSelf	
		lst	0x00
		push	
		pTos	0x28
		callk	0x52, 0x8
		lat	0x00
		not	
		bnt	code_808
		ldi	0x4e20
		aTop	0x0c
code_808:
		lat	0x01
		not	
		bnt	code_819
		ldi	0x4e20
		aTop	0x0e
code_819:
		lsp	0x00
		dup	
		ldi	0x03
		eq?	
		bnt	code_839
		pushi	0x6b
		push1	
		lsp	0x01
		super	0x29, 0x6
		jmp	code_856
code_839:
		dup	
		ldi	0x04
		eq?	
		bnt	code_856
		pushi	0x6b
		push2	
		lsp	0x01
		lsp	0x04
		super	0x29, 0x8
code_856:
		toss	
		ret	

JumpTo::100:
		pTos	0x0c
		ldi	0x4e20
		ne?	
		bnt	code_876
		pushi	0x04
		push1	
		pTos	0x0c
		pToa	0x08
		send	0x06
code_876:
		pTos	0x0e
		ldi	0x4e20
		ne?	
		bnt	code_894
		pushi	0x03
		push1	
		pTos	0x0e
		pToa	0x08
		send	0x06
code_894:
		pushi	0x64
		push0	
		super	0x29, 0x4
		ret	

		bnot	

.CLASS JumpTo of 0x29
Function area offset: 0x6e
Selectors [27]:
  [0x0] = 0x2a
  [0x1] = 0x29
  [0x2] = 0x8000
  [0x17] = {'val': 'JumpTo', 'id': 'string_1'}
  [0x2d] = 0x0
  [0x89] = 0x0
  [0x4] = 0x4e20
  [0x3] = 0x4e20
  [0x2e] = 0x0
  [0x2f] = 0x0
  [0x30] = 0x0
  [0x31] = 0x0
  [0x32] = 0x0
  [0x33] = 0x0
  [0x34] = 0x0
  [0x35] = 0x0
  [0xd5] = 0x0
  [0xde] = 0x0
  [0xdf] = 0x0
  [0x102] = 0x0
  [0x103] = 0x3
  [0x36] = 0x4e20
  [0x37] = 0x0
  [0x11] = 0x0
  [0x12] = 0x0
  [0x104] = 0x1
  [0x105] = 0x1
Overriden functions: 2
  [0x6b]  = JumpTo::107   	 ; @0x2ba
  [0x64]  = JumpTo::100   	 ; @0x35a

.STRINGS
string_0: "Jump"		 ; special
string_1: "JumpTo"		 ; special
string_unused_2: ""


.RELOCATION
num of pointers: 2
0x238, 0x398
