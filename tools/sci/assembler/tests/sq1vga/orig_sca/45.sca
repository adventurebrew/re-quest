.CONFIG
WIDE_EXPORTS = True
LOFSA_RELATIVE = False

.EXPORTS
OBJECT rm45 of 0x74

.CODE
code_14:
		pushi	0x011d
		push0	
		lofsa	ship
		send	0x04
		pushi	0x011d
		push0	
		lofsa	gear
		send	0x04
		pushi	0x011d
		push0	
		lofsa	canopy
		send	0x04
		pushi	0x011d
		push0	
		lofsa	ladder
		send	0x04
		ret	

code_51:
		pushi	0x011b
		push0	
		lofsa	ship
		send	0x04
		pushi	0x011b
		push0	
		lofsa	gear
		send	0x04
		pushi	0x011b
		push0	
		lofsa	canopy
		send	0x04
		pushi	0x011b
		push0	
		lofsa	ladder
		send	0x04
		ret	

rm45::107:
		pushi	0x0174
		push2	
		pushi	0x22
		push1	
		push2	
		pushi	0x6b
		pushi	0x0c
		pushi	0x0127
		pushi	0x0091
		pushi	0x012c
		pushi	0x0098
		pushi	0x00f8
		pushi	0x009e
		pushi	0x00c2
		pushi	0x0098
		pushi	0x00c8
		pushi	0x0091
		pushi	0x00f8
		pushi	0x008e
		pushi	0x72
		push0	
		pushi	0x6a
		push0	
		class	0x23
		send	0x04
		send	0x26
		push	
		pushi	0x22
		push1	
		push2	
		pushi	0x6b
		pushi	0x0a
		pushi	0x00e9
		pushi	0x7a
		pushi	0x008f
		pushi	0x7a
		pushi	0x5e
		pushi	0x73
		pushi	0x5e
		pushi	0x3a
		pushi	0x00eb
		pushi	0x3a
		pushi	0x72
		push0	
		pushi	0x6a
		push0	
		class	0x23
		send	0x04
		send	0x22
		push	
		self	0x08
		lsg	0x0c
		dup	
		pToa	0x20
		eq?	
		bnt	code_211
		ldi	0x0a
		aTop	0x16
		jmp	code_261
code_211:
		dup	
		pToa	0x1e
		eq?	
		bnt	code_239
		ldi	0x0b
		aTop	0x16
		pushi	0x04
		push1	
		pushi	0x012c
		lag	0x00
		send	0x06
		push0	
		callb	0x3, 0x0
		jmp	code_261
code_239:
		ldi	0x08
		aTop	0x16
		pushi	0x011a
		push2	
		pushi	0x00a0
		pushi	0x00b4
		lag	0x00
		send	0x08
		push0	
		callb	0x3, 0x0
code_261:
		toss	
		pushi	0x0187
		push1	
		pushi	0x02be
		self	0x06
		pushi	0x6b
		push0	
		lag	0x00
		send	0x04
		pushi	0x6b
		push0	
		super	0x74, 0x4
		lsg	0x0c
		pToa	0x20
		eq?	
		bnt	code_310
		push1	
		pushi	0x14
		callb	0x6, 0x2
		not	
		bnt	code_310
		pushi	0x009d
		push0	
		lag	0x9a
		send	0x04
code_310:
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	saucer
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	saucerShadow
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	saucerLid
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	ship
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	canopy
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	gear
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	ladder
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	shadow
		send	0x08
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	radar1
		send	0x0a
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	radar2
		send	0x0a
		push1	
		pushi	0x21
		callb	0x6, 0x2
		bnt	code_459
		pushi	0x6b
		push0	
		pushi	0x69
		push0	
		lofsa	robottrac
		send	0x08
		jmp	code_469
code_459:
		push2	
		pushi	0x0084
		pushi	0x0277
		callk	Load, 0x4
code_469:
		ret	

rm45::380:
		pushi	0x017c
		push0	
		rest	0x01
		super	0x74, 0x4
		push1	
		pushi	0x14
		callb	0x6, 0x2
		bnt	code_563
		pushi	0x6b
		push0	
		pushi	0x008c
		push1	
		lofsa	sellShips
		push	
		lofsa	tiny
		send	0x0a
		pushi	0x0174
		push1	
		pushi	0x22
		push1	
		push2	
		pushi	0x6b
		pushi	0x0c
		pushi	0x4e
		pushi	0x0080
		pushi	0x58
		pushi	0x0089
		pushi	0x45
		pushi	0x0096
		pushi	0x2c
		pushi	0x0097
		pushi	0x1b
		pushi	0x008b
		pushi	0x25
		pushi	0x0081
		pushi	0x72
		push0	
		pushi	0x6a
		push0	
		class	0x23
		send	0x04
		sal	0x04
		send	0x26
		push	
		self	0x06
code_563:
		ret	

rm45::375:
		pushi	0x2b
		push0	
		lag	0x9a
		send	0x04
		push	
		ldi	0x0260
		eq?	
		bnt	code_602
		pushi	0x0098
		push0	
		lag	0x9a
		send	0x04
		push	
		ldi	0xff
		ne?	
		bnt	code_602
		pushi	0x009d
		push0	
		lag	0x9a
		send	0x04
code_602:
		pushi	0x0177
		push1	
		lsp	0x01
		super	0x74, 0x6
		ret	


.OBJECT rm45 of 0x74
Exported
Function area offset: 0x32
Selectors [24]:
  [#0] = 0x74
  [#1] = 0x74
  [#2] = 0x0
  [#3] = {'val': 'rm45', 'id': 'string_1'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = {'val': "You are standing in the back part of Tiny's used space-craft lot.", 'id': 'string_0'}
  [#10] = 0x2d
  [#11] = 0xffff
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x2e
  [#16] = 0x28
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0xa0
  [#21] = 0x8ad0
  [#22] = 0x0
  [#23] = 0x0
Overriden functions: 3
  [0x6b]  = rm45::107   	 ; @0x58
  [0x177]  = rm45::375   	 ; @0x234
  [0x17c]  = rm45::380   	 ; @0x1d6

.CODE
sellShips::60:
		link	0x01
		pushi	0x3c
		push0	
		rest	0x01
		super	0x6, 0x4
		pushi	0x3b
		push0	
		lag	0x00
		send	0x04
		bnt	code_737
		pushi	0x0089
		push0	
		pushi	0x3b
		push0	
		lag	0x00
		send	0x04
		send	0x04
		push	
		class	0x2b
		eq?	
		bnt	code_737
		ldi	0x00
		jmp	code_890
code_737:
		pushi	0x0130
		pushi	0x04
		pushi	0x00b9
		pushi	0x008c
		pushi	0x012c
		pushi	0x00af
		lag	0x00
		send	0x0c
		bnt	code_788
		lsl	0x02
		ldi	0x01
		ne?	
		bnt	code_890
		ldi	0x01
		sal	0x02
		pushi	0x008c
		push1	
		lofsa	sellSaucer
		push	
		pToa	0x08
		send	0x06
		jmp	code_890
code_788:
		pushi	0x0130
		pushi	0x04
		pushi	0x64
		pushi	0x50
		pushi	0x00f6
		pushi	0x0088
		lag	0x00
		send	0x0c
		bnt	code_837
		lsl	0x02
		ldi	0x02
		ne?	
		bnt	code_890
		ldi	0x02
		sal	0x02
		pushi	0x008c
		push1	
		lofsa	sellRealShip
		push	
		pToa	0x08
		send	0x06
		jmp	code_890
code_837:
		pushi	0x0088
		push0	
		lag	0x02
		send	0x04
		push	
		push2	
		pushi	0x032c
		push0	
		callk	ScriptID, 0x4
		ne?	
		bnt	code_890
		pushi	0x0144
		push0	
		lag	0x00
		send	0x04
		push	
		ldi	0x03
		eq?	
		bnt	code_890
		pushi	0x008c
		push1	
		lofsa	walkTinyOutFirst
		push	
		lag	0x02
		send	0x06
		pushi	0x6c
		push0	
		self	0x04
code_890:
		ret	

sellShips::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_942
		push0	
		callb	0x2, 0x0
		pushi	0x00a0
		push1	
		pushi	0x03
		pushi	0x0094
		push1	
		class	0x18
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x36
		pushi	0x008c
		pushSelf	
		lofsa	tiny
		send	0x18
		jmp	code_1799
code_942:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1058
		pushi	0x05
		push1	
		pushi	0x01bd
		pushi	0x00a0
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x011b
		push0	
		lofsa	tiny
		send	0x16
		pushi	0x6b
		push0	
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x08
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_1799
code_1058:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1086
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_1799
code_1086:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1124
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		push0	
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_1799
code_1124:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1138
		ldi	0x04
		aTop	0x10
		jmp	code_1799
code_1138:
		dup	
		ldi	0x05
		eq?	
		bnt	code_1161
		push0	
		call	code_51, 0
		push0	
		callb	0x3, 0x0
		ldi	0x06
		aTop	0x12
		jmp	code_1799
code_1161:
		dup	
		ldi	0x06
		eq?	
		bnt	code_1180
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_1799
code_1180:
		dup	
		ldi	0x07
		eq?	
		bnt	code_1409
		push2	
		push0	
		pushi	0x04
		callk	Random, 0x4
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1237
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		push1	
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		ldi	0x02
		aTop	0x1a
		jmp	code_1405
code_1237:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1279
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		push2	
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		ldi	0x01
		aTop	0x1a
		jmp	code_1405
code_1279:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1322
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x03
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		ldi	0x03
		aTop	0x1a
		jmp	code_1405
code_1322:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1365
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x04
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		ldi	0x02
		aTop	0x1a
		jmp	code_1405
code_1365:
		dup	
		ldi	0x04
		eq?	
		bnt	code_1405
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x05
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		ldi	0x03
		aTop	0x1a
code_1405:
		toss	
		jmp	code_1799
code_1409:
		dup	
		ldi	0x08
		eq?	
		bnt	code_1666
		push0	
		call	code_51, 0
		pTos	0x1a
		dup	
		ldi	0x01
		eq?	
		bnt	code_1503
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_1662
code_1503:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1584
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_1662
code_1584:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1662
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
code_1662:
		toss	
		jmp	code_1799
code_1666:
		dup	
		ldi	0x09
		eq?	
		bnt	code_1685
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_1799
code_1685:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_1750
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		pTos	0x1a
		ldi	0x03
		ne?	
		bnt	code_1741
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_2		; "\"Talk to me, chief.\""
		push	
		push0	
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_1799
code_1741:
		pushi	0x008b
		push0	
		self	0x04
		jmp	code_1799
code_1750:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_1764
		ldi	0x04
		aTop	0x10
		jmp	code_1799
code_1764:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_1783
		push0	
		call	code_51, 0
		ldi	0x0c
		aTop	0x12
		jmp	code_1799
code_1783:
		dup	
		ldi	0x0d
		eq?	
		bnt	code_1799
		ldi	0x03
		aTop	0x0c
		pushi	0x6b
		push0	
		self	0x04
code_1799:
		toss	
		ret	

		bnot	

.OBJECT sellShips of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'sellShips', 'id': 'string_3'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 2
  [0x3c]  = sellShips::60   	 ; @0x2b4
  [0x8a]  = sellShips::138   	 ; @0x37b

.CODE
walkTinyOutFirst::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_1910
		push0	
		callb	0x2, 0x0
		pushi	0x0119
		push1	
		push0	
		pushi	0x03
		push1	
		pushi	0x00bc
		lag	0x00
		send	0x0c
		pushi	0x03
		lsg	0x00
		lofsa	tiny
		push	
		pushSelf	
		callb	0xd, 0x6
		jmp	code_2214
code_1910:
		dup	
		ldi	0x01
		eq?	
		bnt	code_1929
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_2214
code_1929:
		dup	
		ldi	0x02
		eq?	
		bnt	code_1968
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x06
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_2214
code_1968:
		dup	
		ldi	0x03
		eq?	
		bnt	code_1982
		ldi	0x04
		aTop	0x10
		jmp	code_2214
code_1982:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2067
		push0	
		call	code_51, 0
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_2214
code_2067:
		dup	
		ldi	0x05
		eq?	
		bnt	code_2168
		pushi	0x6c
		push0	
		lofsa	arm
		send	0x04
		pushi	0x05
		push1	
		pushi	0x01be
		pushi	0x00a0
		push1	
		push2	
		pushi	0x008c
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x18
		push	
		lofsa	tiny
		send	0x18
		pushi	0x04
		push0	
		lag	0x00
		send	0x04
		push	
		ldi	0x37
		gt?	
		bnt	code_2146
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x0c
		pushi	0x00f0
		pushSelf	
		lofsa	tiny
		send	0x0c
		jmp	code_2214
code_2146:
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0xe2
		pushi	0x00b4
		pushSelf	
		lofsa	tiny
		send	0x0c
		jmp	code_2214
code_2168:
		dup	
		ldi	0x06
		eq?	
		bnt	code_2202
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x04
		push0	
		lag	0x00
		send	0x04
		push	
		pushi	0x00be
		pushSelf	
		lag	0x00
		send	0x0c
		jmp	code_2214
code_2202:
		dup	
		ldi	0x07
		eq?	
		bnt	code_2214
		pushi	0x6c
		push0	
		self	0x04
code_2214:
		toss	
		ret	


.OBJECT walkTinyOutFirst of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'walkTinyOutFirst', 'id': 'string_4'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = walkTinyOutFirst::138   	 ; @0x748

.CODE
sellSaucer::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_2305
		push0	
		callb	0x2, 0x0
		pushi	0x03
		lsg	0x00
		lofsa	saucer
		push	
		pushSelf	
		callb	0xd, 0x6
		jmp	code_2773
code_2305:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2324
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_2773
code_2324:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2363
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x07
		push0	
		push0	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_2773
code_2363:
		dup	
		ldi	0x03
		eq?	
		bnt	code_2444
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_2773
code_2444:
		dup	
		ldi	0x04
		eq?	
		bnt	code_2488
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		pushi	0x01fd
		pushi	0x05
		pushi	0x0091
		pushi	0x08
		push0	
		push1	
		pushi	0x18
		callb	0x6, 0x2
		not	
		push	
		pushSelf	
		lofsa	tinyTalk
		send	0x0e
		jmp	code_2773
code_2488:
		dup	
		ldi	0x05
		eq?	
		bnt	code_2568
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_2773
code_2568:
		dup	
		ldi	0x06
		eq?	
		bnt	code_2697
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		push1	
		pushi	0x18
		callb	0x6, 0x2
		bnt	code_2618
		pushi	0x01fd
		pushi	0x05
		pushi	0x0091
		pushi	0x09
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x0e
		ldi	0x73
		sal	0x03
		jmp	code_2773
code_2618:
		ldi	0x00b9
		sal	0x03
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_2773
code_2697:
		dup	
		ldi	0x07
		eq?	
		bnt	code_2711
		ldi	0x04
		aTop	0x10
		jmp	code_2773
code_2711:
		dup	
		ldi	0x08
		eq?	
		bnt	code_2730
		push0	
		call	code_51, 0
		ldi	0x04
		aTop	0x10
		jmp	code_2773
code_2730:
		dup	
		ldi	0x09
		eq?	
		bnt	code_2773
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		pushi	0x0082
		push1	
		pushi	0x03
		lofsa	sellShips
		send	0x06
		push0	
		callb	0x3, 0x0
		pushi	0x008c
		push1	
		lofsa	sellShips
		push	
		pToa	0x08
		send	0x06
code_2773:
		toss	
		ret	

		bnot	

.OBJECT sellSaucer of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'sellSaucer', 'id': 'string_5'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = sellSaucer::138   	 ; @0x8e2

.CODE
sellRealShip::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_2865
		push0	
		callb	0x2, 0x0
		pushi	0x03
		lsg	0x00
		lofsa	ship
		push	
		pushSelf	
		callb	0xd, 0x6
		jmp	code_3326
code_2865:
		dup	
		ldi	0x01
		eq?	
		bnt	code_2884
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_3326
code_2884:
		dup	
		ldi	0x02
		eq?	
		bnt	code_2923
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x0a
		push0	
		push0	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_3326
code_2923:
		dup	
		ldi	0x03
		eq?	
		bnt	code_3004
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_3326
code_3004:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3048
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		pushi	0x01fd
		pushi	0x05
		pushi	0x0091
		pushi	0x0b
		push0	
		push1	
		pushi	0x18
		callb	0x6, 0x2
		not	
		push	
		pushSelf	
		lofsa	tinyTalk
		send	0x0e
		jmp	code_3326
code_3048:
		dup	
		ldi	0x05
		eq?	
		bnt	code_3128
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_3326
code_3128:
		dup	
		ldi	0x06
		eq?	
		bnt	code_3264
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		push1	
		pushi	0x18
		callb	0x6, 0x2
		bnt	code_3185
		pushi	0x01fd
		pushi	0x05
		pushi	0x0091
		pushi	0x0c
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x0e
		ldi	0x0090
		sal	0x03
		pushi	0x008b
		push0	
		self	0x04
		jmp	code_3326
code_3185:
		ldi	0x00d6
		sal	0x03
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_3326
code_3264:
		dup	
		ldi	0x07
		eq?	
		bnt	code_3278
		ldi	0x04
		aTop	0x10
		jmp	code_3326
code_3278:
		dup	
		ldi	0x08
		eq?	
		bnt	code_3326
		push0	
		call	code_51, 0
		pushi	0x011b
		push0	
		lofsa	arm
		send	0x04
		pushi	0x0082
		push1	
		pushi	0x03
		lofsa	sellShips
		send	0x06
		push0	
		callb	0x3, 0x0
		pushi	0x008c
		push1	
		lofsa	sellShips
		push	
		pToa	0x08
		send	0x06
code_3326:
		toss	
		ret	


.OBJECT sellRealShip of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'sellRealShip', 'id': 'string_6'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = sellRealShip::138   	 ; @0xb12

.CODE
getInShip::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_3447
		push0	
		callb	0x2, 0x0
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00a7
		pushi	0x7a
		pushSelf	
		lag	0x00
		send	0x0c
		push1	
		pushi	0x21
		callb	0x6, 0x2
		bnt	code_4087
		pushi	0x0119
		push1	
		push0	
		push2	
		pushi	0x02be
		push1	
		callk	ScriptID, 0x4
		send	0x06
		jmp	code_4087
code_3447:
		dup	
		ldi	0x01
		eq?	
		bnt	code_3466
		push0	
		call	code_14, 0
		ldi	0x04
		aTop	0x10
		jmp	code_4087
code_3466:
		dup	
		ldi	0x02
		eq?	
		bnt	code_3573
		pushi	0x77
		push1	
		lofsa	tiny
		push	
		lag	0x05
		send	0x06
		bnt	code_3560
		push1	
		pushi	0x21
		callb	0x6, 0x2
		bnt	code_3528
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x0d
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_4087
code_3528:
		pushi	0x6b
		pushi	0x08
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x0e
		push0	
		push1	
		pushSelf	
		lofsa	tinyTalk
		send	0x14
		jmp	code_4087
code_3560:
		ipToa	0x0a
		ipToa	0x0a
		pushi	0x008b
		push0	
		self	0x04
		jmp	code_4087
code_3573:
		dup	
		ldi	0x03
		eq?	
		bnt	code_3587
		ldi	0x04
		aTop	0x10
		jmp	code_4087
code_3587:
		dup	
		ldi	0x04
		eq?	
		bnt	code_3672
		push0	
		call	code_51, 0
		pushi	0x00c0
		push0	
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x04
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x11
		add	
		push	
		pushi	0x03
		push0	
		lofsa	tiny
		send	0x04
		push	
		ldi	0x1c
		sub	
		push	
		pushi	0x42
		push1	
		pushi	0x3f
		push0	
		lofsa	tiny
		send	0x04
		push	
		pushi	0x0094
		pushi	0x03
		class	0x5f
		push	
		push1	
		pushSelf	
		lofsa	arm
		send	0x28
		jmp	code_4087
code_3672:
		dup	
		ldi	0x05
		eq?	
		bnt	code_3808
		pushi	0x77
		push1	
		lofsa	tiny
		push	
		lag	0x05
		send	0x06
		bnt	code_3758
		pushi	0x6c
		push0	
		lofsa	arm
		send	0x04
		pushi	0x05
		push1	
		pushi	0x01be
		pushi	0x00a0
		push1	
		push2	
		pushi	0x008c
		push1	
		push0	
		pushi	0x0094
		push1	
		class	0x18
		push	
		pushi	0x0119
		pushi	0x03
		class	0x1e
		push	
		pushi	0x0c
		pushi	0x00f0
		lofsa	tiny
		send	0x22
		pushi	0x22
		push1	
		push0	
		lal	0x04
		send	0x06
		pushi	0x009d
		push0	
		lag	0x9a
		send	0x04
code_3758:
		pushi	0x011a
		push2	
		pushi	0x00ab
		pushi	0x56
		pushi	0x42
		push1	
		pushi	0x0e
		pushi	0x05
		push1	
		pushi	0x0091
		pushi	0x00a0
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x08
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x00
		send	0x2e
		jmp	code_4087
code_3808:
		dup	
		ldi	0x06
		eq?	
		bnt	code_3847
		pushi	0x06
		push1	
		pushi	0x05
		pushi	0x07
		push1	
		push0	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	canopy
		send	0x14
		pushi	0x69
		push0	
		lag	0x00
		send	0x04
		jmp	code_4087
code_3847:
		dup	
		ldi	0x07
		eq?	
		bnt	code_3878
		pushi	0x2b
		push1	
		pushi	0x025b
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		ldi	0x04
		aTop	0x12
		jmp	code_4087
code_3878:
		dup	
		ldi	0x08
		eq?	
		bnt	code_3966
		push1	
		pushi	0x21
		callb	0x6, 0x2
		bnt	code_3909
		pushi	0x008c
		push1	
		lofsa	robotIntoShip
		push	
		pToa	0x08
		send	0x06
		jmp	code_4087
code_3909:
		push2	
		pushi	0x2d
		push0	
		calle	0xff, 0x00, 0x04
		push2	
		pushi	0x2d
		push1	
		calle	0xff, 0x00, 0x04
		pushi	0x2b
		push1	
		pushi	0x025b
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	canopy
		send	0x08
		pushi	0x00c0
		push0	
		lag	0x00
		send	0x04
		jmp	code_4087
code_3966:
		dup	
		ldi	0x09
		eq?	
		bnt	code_3980
		ldi	0x03
		aTop	0x12
		jmp	code_4087
code_3980:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_4007
		pushi	0x42
		push1	
		pushi	0x0e
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lag	0x00
		send	0x0e
		jmp	code_4087
code_4007:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_4063
		pushi	0x03
		push0	
		push1	
		pushi	0x3d
		callb	0x1, 0x6
		pushi	0x011a
		push2	
		pushi	0x00a7
		pushi	0x7a
		pushi	0x06
		push1	
		pushi	0x03
		pushi	0x3a
		push1	
		push0	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00a7
		pushi	0x0085
		pushSelf	
		lag	0x00
		send	0x20
		jmp	code_4087
code_4063:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_4087
		pushi	0x6c
		push0	
		lofsa	tiny
		send	0x04
		push0	
		callb	0x3, 0x0
		pushi	0x6c
		push0	
		self	0x04
code_4087:
		toss	
		ret	

		bnot	

.OBJECT getInShip of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'getInShip', 'id': 'string_7'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = getInShip::138   	 ; @0xd3a

.CODE
robotIntoShip::60:
		pushi	0x3c
		push0	
		super	0x6, 0x4
		pTos	0x0a
		ldi	0x04
		eq?	
		bnt	code_4190
		pushi	0x0098
		push0	
		lag	0x9a
		send	0x04
		push	
		ldi	0x0a
		eq?	
		bnt	code_4190
		pushi	0x0098
		push1	
		push0	
		lag	0x9a
		send	0x06
		ldi	0x04
		aTop	0x10
code_4190:
		ret	

robotIntoShip::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_4234
		pushi	0x12
		push1	
		push0	
		pushi	0x0119
		pushi	0x04
		class	0x24
		push	
		pushi	0x00eb
		pushi	0x75
		pushSelf	
		push2	
		pushi	0x02be
		push1	
		callk	ScriptID, 0x4
		send	0x12
		jmp	code_4818
code_4234:
		dup	
		ldi	0x01
		eq?	
		bnt	code_4273
		pushi	0x42
		push1	
		pushi	0x04
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x0097
		pushi	0x75
		pushSelf	
		push2	
		pushi	0x02be
		push1	
		callk	ScriptID, 0x4
		send	0x12
		jmp	code_4818
code_4273:
		dup	
		ldi	0x02
		eq?	
		bnt	code_4295
		push2	
		pushi	0x2d
		push2	
		calle	0xff, 0x00, 0x04
		ldi	0x04
		aTop	0x10
		jmp	code_4818
code_4295:
		dup	
		ldi	0x03
		eq?	
		bnt	code_4392
		pushi	0x2b
		push1	
		pushi	0x025e
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x011a
		push2	
		pushi	0x0097
		pushi	0x75
		pushi	0x00c0
		push0	
		pushi	0x011b
		push0	
		lofsa	robottrac
		send	0x10
		pushi	0x42
		push1	
		pushi	0x0e
		pushi	0x05
		push1	
		pushi	0x0091
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x0097
		pushi	0x57
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		push2	
		pushi	0x02be
		push1	
		callk	ScriptID, 0x4
		send	0x28
		jmp	code_4818
code_4392:
		dup	
		ldi	0x04
		eq?	
		bnt	code_4473
		pushi	0x009a
		push0	
		lag	0xb1
		send	0x04
		pushi	0x2b
		push1	
		pushi	0x0270
		pushi	0x06
		push1	
		push1	
		pushi	0x66
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0x9a
		send	0x16
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	zap1
		send	0x0a
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x17
		push	
		lofsa	zap2
		send	0x0a
		pushi	0x0094
		push1	
		class	0x1a
		push	
		lofsa	gear
		send	0x06
		jmp	code_4818
code_4473:
		dup	
		ldi	0x05
		eq?	
		bnt	code_4559
		pushi	0x6c
		push0	
		lofsa	canopy
		send	0x04
		pushi	0x6c
		push0	
		push2	
		pushi	0x02be
		push1	
		callk	ScriptID, 0x4
		send	0x04
		pushi	0x011e
		push1	
		push1	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x04
		push0	
		lofsa	ship
		send	0x04
		push	
		pushi	0xce
		pushSelf	
		lofsa	ship
		send	0x12
		pushi	0x0094
		push1	
		class	0x1a
		push	
		lofsa	shadow
		send	0x06
		pushi	0x008c
		push1	
		lofsa	fallDown
		push	
		lofsa	ladder
		send	0x06
		jmp	code_4818
code_4559:
		dup	
		ldi	0x06
		eq?	
		bnt	code_4648
		pushi	0x011b
		push0	
		lofsa	ship
		send	0x04
		pushi	0x6c
		push0	
		lofsa	zap1
		send	0x04
		pushi	0x6c
		push0	
		lofsa	zap2
		send	0x04
		pushi	0x009d
		pushi	0x04
		pushi	0x28
		pushi	0x19
		pushi	0x04
		push0	
		lag	0x9a
		send	0x0c
		push2	
		pushi	0x19
		pushi	0x009f
		callb	0xb, 0x4
		pushi	0x6b
		push0	
		pushi	0x0094
		push1	
		class	0x18
		push	
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00fa
		pushi	0x78
		pushSelf	
		lofsa	mugger
		send	0x16
		jmp	code_4818
code_4648:
		dup	
		ldi	0x07
		eq?	
		bnt	code_4686
		pushi	0x00a0
		push1	
		pushi	0x07
		dup	
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x05
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	mugger
		send	0x1a
		jmp	code_4818
code_4686:
		dup	
		ldi	0x08
		eq?	
		bnt	code_4718
		push2	
		pushi	0x2d
		pushi	0x03
		calle	0xff, 0x00, 0x04
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	mugger
		send	0x08
		jmp	code_4818
code_4718:
		dup	
		ldi	0x09
		eq?	
		bnt	code_4783
		pushi	0x42
		push1	
		pushi	0xff
		pushi	0x011e
		push1	
		pushi	0xff
		pushi	0x05
		push1	
		pushi	0x0343
		pushi	0x011a
		push2	
		pushi	0x41
		pushi	0x009e
		pushi	0x07
		push1	
		pushi	0x0a
		pushi	0x00a0
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x12
		pushi	0x0094
		push2	
		class	0x1b
		push	
		pushSelf	
		lofsa	ship
		send	0x34
		jmp	code_4818
code_4783:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_4818
		pushi	0x2b
		push1	
		pushi	0x01d1
		pushi	0x06
		push1	
		pushi	0xff
		pushi	0x2a
		push0	
		lag	0x64
		send	0x10
		pushi	0x0177
		push1	
		pushi	0x31
		lag	0x02
		send	0x06
code_4818:
		toss	
		ret	


.OBJECT robotIntoShip of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'robotIntoShip', 'id': 'string_8'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 2
  [0x3c]  = robotIntoShip::60   	 ; @0x1034
  [0x8a]  = robotIntoShip::138   	 ; @0x105f

.CODE
getInSaucer::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_4920
		push0	
		callb	0x2, 0x0
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00df
		pushi	0x0092
		pushSelf	
		lag	0x00
		send	0x0c
		jmp	code_5417
code_4920:
		dup	
		ldi	0x01
		eq?	
		bnt	code_4972
		pushi	0x05
		push1	
		pushi	0x00f5
		pushi	0x00a0
		push1	
		push0	
		pushi	0x07
		push1	
		push0	
		pushi	0x011a
		push2	
		pushi	0x00f7
		pushi	0x008d
		pushi	0x42
		push1	
		pushi	0x0e
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lag	0x00
		send	0x28
		jmp	code_5417
code_4972:
		dup	
		ldi	0x02
		eq?	
		bnt	code_5014
		pushi	0x07
		push1	
		push1	
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	saucerLid
		send	0x0e
		pushi	0x69
		push0	
		lag	0x00
		send	0x04
		pushi	0x009a
		push0	
		lag	0x9a
		send	0x04
		jmp	code_5417
code_5014:
		dup	
		ldi	0x03
		eq?	
		bnt	code_5042
		pushi	0x2b
		push1	
		pushi	0x025b
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push1	
		pushSelf	
		lag	0xb1
		send	0x12
		jmp	code_5417
code_5042:
		dup	
		ldi	0x04
		eq?	
		bnt	code_5100
		pushi	0x2b
		push1	
		pushi	0x0262
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		pushi	0x009c
		push1	
		push1	
		lag	0xb1
		send	0x16
		pushi	0x69
		push0	
		lofsa	saucerLid
		send	0x04
		pushi	0x00a0
		push1	
		push2	
		pushi	0x07
		push1	
		push0	
		lofsa	saucer
		send	0x0c
		ldi	0x04
		aTop	0x10
		jmp	code_5417
code_5100:
		dup	
		ldi	0x05
		eq?	
		bnt	code_5135
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	saucer
		send	0x08
		pushi	0x0094
		push1	
		class	0x1a
		push	
		lofsa	saucerShadow
		send	0x06
		jmp	code_5417
code_5135:
		dup	
		ldi	0x06
		eq?	
		bnt	code_5199
		pushi	0x009c
		push1	
		push0	
		lag	0xb1
		send	0x06
		pushi	0x00d9
		push1	
		pushi	0x06
		pushi	0x0094
		pushi	0x03
		class	0x19
		push	
		pushi	0x04
		pushi	0xff
		pushi	0x0132
		push2	
		pushi	0x04
		pushi	0x07
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x00c8
		pushi	0x3c
		pushSelf	
		lofsa	saucer
		send	0x24
		jmp	code_5417
code_5199:
		dup	
		ldi	0x07
		eq?	
		bnt	code_5257
		pushi	0x009d
		push0	
		lag	0xb1
		send	0x04
		pushi	0x00d9
		push1	
		pushi	0x08
		pushi	0x0094
		push1	
		class	0x1a
		push	
		pushi	0x0132
		push2	
		pushi	0x04
		pushi	0x0c
		pushi	0x0119
		pushi	0x04
		class	0x1e
		push	
		pushi	0x0104
		pushi	0xc4
		pushSelf	
		lofsa	saucer
		send	0x20
		jmp	code_5417
code_5257:
		dup	
		ldi	0x08
		eq?	
		bnt	code_5287
		pushi	0x6c
		push0	
		lofsa	saucerShadow
		send	0x04
		pushi	0x6c
		push0	
		lofsa	saucerLid
		send	0x04
		ldi	0x03
		aTop	0x12
		jmp	code_5417
code_5287:
		dup	
		ldi	0x09
		eq?	
		bnt	code_5356
		pushi	0x2b
		push1	
		pushi	0x0269
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x011a
		push2	
		pushi	0x00dc
		pushi	0x1e
		pushi	0x00a0
		push1	
		pushi	0x04
		pushi	0x07
		push1	
		push0	
		pushi	0x00d9
		push1	
		pushi	0x06
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		pushi	0x05
		push1	
		pushSelf	
		lofsa	saucer
		send	0x26
		jmp	code_5417
code_5356:
		dup	
		ldi	0x0a
		eq?	
		bnt	code_5396
		pushi	0x2b
		push1	
		pushi	0x026a
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	saucer
		send	0x08
		jmp	code_5417
code_5396:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_5417
		pushi	0x05
		pushi	0x03b1
		push0	
		push0	
		pushi	0x2d
		pushi	0x04
		callb	0xa, 0xa
code_5417:
		toss	
		ret	

		bnot	

.OBJECT getInSaucer of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'getInSaucer', 'id': 'string_9'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = getInSaucer::138   	 ; @0x1312

.CODE
fallDown::138:
		lap	0x01
		aTop	0x0a
		push	
		dup	
		ldi	0x00
		eq?	
		bnt	code_5509
		pushi	0x0094
		pushi	0x04
		class	0x19
		push	
		push2	
		push1	
		pushSelf	
		lofsa	ladder
		send	0x0c
		jmp	code_5566
code_5509:
		dup	
		ldi	0x01
		eq?	
		bnt	code_5554
		pushi	0x2b
		push1	
		pushi	0x0277
		pushi	0x06
		push1	
		push1	
		pushi	0x2a
		push0	
		lag	0xb1
		send	0x10
		pushi	0x07
		push1	
		pushi	0x03
		pushi	0x0094
		push2	
		class	0x1a
		push	
		pushSelf	
		lofsa	ladder
		send	0x0e
		jmp	code_5566
code_5554:
		dup	
		ldi	0x02
		eq?	
		bnt	code_5566
		pushi	0x6c
		push0	
		self	0x04
code_5566:
		toss	
		ret	


.OBJECT fallDown of 0x6
Function area offset: 0x24
Selectors [17]:
  [#0] = 0x6
  [#1] = 0x6
  [#2] = 0x0
  [#3] = {'val': 'fallDown', 'id': 'string_10'}
  [#4] = 0x0
  [#5] = 0xffff
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
Overriden functions: 1
  [0x8a]  = fallDown::138   	 ; @0x1566

.OBJECT arm of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'arm', 'id': 'string_11'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x1bd
  [#24] = 0x2
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x6000
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x7
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.CODE
zap1::60:
		pushi	0x03
		push0	
		lofsa	ship
		send	0x04
		push	
		ldi	0x0d
		sub	
		aTop	0x0a
		pushi	0x3c
		push0	
		rest	0x01
		super	0x2f, 0x4
		ret	

		bnot	

.OBJECT zap1 of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'zap1', 'id': 'string_12'}
  [#4] = 0xc0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x2
  [#25] = 0x0
  [#26] = 0xe
  [#27] = 0x0
  [#28] = 0x2010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x1
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x3c]  = zap1::60   	 ; @0x1660

.CODE
zap2::60:
		pushi	0x03
		push0	
		lofsa	ship
		send	0x04
		push	
		ldi	0x0d
		sub	
		aTop	0x0a
		pushi	0x3c
		push0	
		rest	0x01
		super	0x2f, 0x4
		ret	

		bnot	

.OBJECT zap2 of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'zap2', 'id': 'string_13'}
  [#4] = 0xd1
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x3
  [#25] = 0x3
  [#26] = 0xe
  [#27] = 0x0
  [#28] = 0x2010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x1
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x3c]  = zap2::60   	 ; @0x16e6

.CODE
tiny::60:
		pTos	0x08
		ldi	0x10
		add	
		aTop	0x22
		pTos	0x0a
		ldi	0x08
		add	
		aTop	0x24
		pushi	0x3c
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

tiny::107:
		pushi	0x0117
		push1	
		pushi	0x04
		self	0x06
		pushi	0x6b
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

tiny::139:
		push1	
		pushi	0x18
		callb	0x6, 0x2
		bnt	code_6057
		pushi	0x03
		pushi	0x2d
		pushi	0x05
		lsl	0x03
		calle	0xff, 0x04, 0x06
code_6057:
		pushi	0x008b
		push0	
		rest	0x01
		super	0x30, 0x4
		ret	

tiny::266:
		link	0x3c
		lsp	0x01
		dup	
		ldi	0x05
		eq?	
		bnt	code_6181
		push1	
		pushi	0x13
		callb	0x6, 0x2
		not	
		bnt	code_6119
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x0f
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6906
code_6119:
		lal	0x03
		bnt	code_6169
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x04
		lea	0x04, 0x00
		push	
		pushi	0x2d
		pushi	0x06
		lal	0x02
		lsli	0x00
		callk	Format, 0x8
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6906
code_6169:
		push2	
		pushi	0x2d
		pushi	0x07
		calle	0xff, 0x00, 0x04
		jmp	code_6906
code_6181:
		dup	
		ldi	0x03
		eq?	
		bnt	code_6200
		push2	
		pushi	0x2d
		pushi	0x08
		calle	0xff, 0x00, 0x04
		jmp	code_6906
code_6200:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_6219
		push2	
		pushi	0x2d
		pushi	0x09
		calle	0xff, 0x00, 0x04
		jmp	code_6906
code_6219:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_6238
		push2	
		pushi	0x2d
		pushi	0x0a
		calle	0xff, 0x00, 0x04
		jmp	code_6906
code_6238:
		dup	
		ldi	0x04
		eq?	
		bnt	code_6895
		lsp	0x02
		dup	
		ldi	0x0a
		eq?	
		bnt	code_6455
		lal	0x03
		bnt	code_6443
		lsl	0x02
		ldi	0x01
		eq?	
		bnt	code_6273
		push1	
		pushi	0x1a
		callb	0x6, 0x2
code_6273:
		bt	code_6290
		lsl	0x02
		ldi	0x02
		eq?	
		bnt	code_6324
		push1	
		pushi	0x1b
		callb	0x6, 0x2
code_6290:
		bnt	code_6324
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_16		; "I'd like to take your money, pal. But, even I wouldn't sell you the same ship twice."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6324:
		lsg	0xa5
		lal	0x03
		lt?	
		bnt	code_6363
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x10
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6363:
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x11
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		push1	
		lsl	0x02
		ldi	0x01
		eq?	
		bnt	code_6405
		ldi	0x1a
		jmp	code_6422
code_6405:
		push1	
		pushi	0x14
		callb	0x8, 0x2
		push2	
		pushi	0x04
		pushi	0x009e
		callb	0xb, 0x4
		ldi	0x1b
code_6422:
		push	
		callb	0x7, 0x2
		lsg	0xa5
		lal	0x03
		sub	
		sag	0xa5
		pushi	0x008c
		push1	
		push0	
		self	0x06
		jmp	code_6891
code_6443:
		push2	
		pushi	0x2d
		pushi	0x0b
		calle	0xff, 0x00, 0x04
		jmp	code_6891
code_6455:
		dup	
		ldi	0x01
		eq?	
		bnt	code_6502
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x12
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		pushi	0x0146
		push1	
		push1	
		lag	0x00
		send	0x06
		jmp	code_6891
code_6502:
		dup	
		ldi	0x02
		eq?	
		bnt	code_6540
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_17		; "Lovely gadget - lovely. So are we gonna make a deal here? Talk to me."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6540:
		dup	
		ldi	0x00
		eq?	
		bnt	code_6587
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x13
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		pushi	0x0146
		push1	
		push0	
		lag	0x00
		send	0x06
		jmp	code_6891
code_6587:
		dup	
		ldi	0x04
		eq?	
		bnt	code_6625
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x14
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6625:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_6663
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_18		; "That's a smell jet ack, all right, but for exploring space, you need a real ship. Can we talk business."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6663:
		dup	
		ldi	0x05
		eq?	
		bnt	code_6711
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x15
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		pushi	0x0146
		push1	
		pushi	0x05
		lag	0x00
		send	0x06
		jmp	code_6891
code_6711:
		dup	
		ldi	0x06
		eq?	
		bnt	code_6749
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x16
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6749:
		dup	
		ldi	0x07
		eq?	
		bnt	code_6787
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		pushi	0x0091
		pushi	0x17
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6787:
		dup	
		ldi	0x09
		eq?	
		bnt	code_6825
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_19		; "Sorry, bud, but I only deal in space ships, not sand skimmers."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6825:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_6863
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_20		; "Sorry, bud, but I only deal in space ships, not itsy-bitsy jetpacks."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
		jmp	code_6891
code_6863:
		pushi	0x6b
		pushi	0x07
		lofsa	tinyHead
		push	
		lofsa	tinyEyes
		push	
		lofsa	tinyLips
		push	
		lofsa	string_21		; "Sorry, pal, but I only take cash."
		push	
		push0	
		push0	
		push1	
		lofsa	tinyTalk
		send	0x12
code_6891:
		toss	
		jmp	code_6906
code_6895:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x30, 0x8
code_6906:
		toss	
		ret	


.OBJECT tiny of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'tiny', 'id': 'string_22'}
  [#4] = 0xc
  [#5] = 0xdb
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'Tiny', 'id': 'string_14'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'Tiny is a large, green-scale-covered jaw jockey with the personality of a true salesman. Not a prime combination of traits, I must say.', 'id': 'string_15'}
  [#22] = 0x3
  [#23] = 0x1be
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4000
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x9
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x0
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x4
  [#47] = 0x9
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 4
  [0x6b]  = tiny::107   	 ; @0x1783
  [0x3c]  = tiny::60   	 ; @0x176c
  [0x10a]  = tiny::266   	 ; @0x17b3
  [0x8b]  = tiny::139   	 ; @0x1794

.CODE
mugger::266:
		lsp	0x01
		dup	
		ldi	0x03
		eq?	
		bnt	code_7075
		push1	
		lofsa	string_25		; "That's not possible from up here."
		push	
		calle	0xff, 0x00, 0x02
		jmp	code_7143
code_7075:
		dup	
		ldi	0x05
		eq?	
		bnt	code_7094
		push1	
		lofsa	string_25		; "That's not possible from up here."
		push	
		calle	0xff, 0x00, 0x02
		jmp	code_7143
code_7094:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_7113
		push1	
		lofsa	string_25		; "That's not possible from up here."
		push	
		calle	0xff, 0x00, 0x02
		jmp	code_7143
code_7113:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_7132
		push1	
		lofsa	string_25		; "That's not possible from up here."
		push	
		calle	0xff, 0x00, 0x02
		jmp	code_7143
code_7132:
		pushi	0x010a
		push1	
		lsp	0x01
		rest	0x02
		super	0x30, 0x6
code_7143:
		toss	
		ret	

		bnot	

.OBJECT mugger of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'mugger', 'id': 'string_23'}
  [#4] = 0x14c
  [#5] = 0x8c
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'mugger', 'id': 'string_23'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'As you rise high above the sands of Ulence, you look down and see someone waving good-bye. This really is a friendly place after-all!', 'id': 'string_24'}
  [#22] = 0x2
  [#23] = 0x1b0
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x800
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x4
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x4
  [#47] = 0x4
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 1
  [0x10a]  = mugger::266   	 ; @0x1b8e

.CODE
ship::107:
		pushi	0x6b
		push0	
		rest	0x01
		super	0x30, 0x4
		pushi	0x0117
		push1	
		pushi	0x03
		self	0x06
		ret	

ship::266:
		lsp	0x01
		dup	
		ldi	0x02
		eq?	
		bnt	code_7339
		push1	
		pushi	0x1c
		callb	0x6, 0x2
		bnt	code_7327
		push2	
		pushi	0x2d
		pushi	0x0c
		calle	0xff, 0x00, 0x04
		jmp	code_7474
code_7327:
		push2	
		pushi	0x2d
		pushi	0x0d
		calle	0xff, 0x00, 0x04
		jmp	code_7474
code_7339:
		dup	
		ldi	0x03
		eq?	
		bnt	code_7382
		push1	
		pushi	0x1b
		callb	0x6, 0x2
		bnt	code_7370
		pushi	0x008c
		push1	
		lofsa	getInShip
		push	
		lag	0x02
		send	0x06
		jmp	code_7474
code_7370:
		push2	
		pushi	0x2d
		pushi	0x0e
		calle	0xff, 0x00, 0x04
		jmp	code_7474
code_7382:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_7401
		push2	
		pushi	0x2d
		pushi	0x0f
		calle	0xff, 0x00, 0x04
		jmp	code_7474
code_7401:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_7420
		push2	
		pushi	0x2d
		pushi	0x10
		calle	0xff, 0x00, 0x04
		jmp	code_7474
code_7420:
		dup	
		ldi	0x04
		eq?	
		bnt	code_7463
		lsp	0x02
		dup	
		ldi	0x0b
		eq?	
		bnt	code_7448
		push2	
		pushi	0x2d
		pushi	0x11
		calle	0xff, 0x00, 0x04
		jmp	code_7459
code_7448:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x30, 0x8
code_7459:
		toss	
		jmp	code_7474
code_7463:
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x30, 0x8
code_7474:
		toss	
		ret	


.OBJECT ship of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'ship', 'id': 'string_26'}
  [#4] = 0xab
  [#5] = 0x56
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'ship', 'id': 'string_26'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0xa7
  [#18] = 0x82
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x8
  [#25] = 0x0
  [#26] = 0x7
  [#27] = 0x0
  [#28] = 0x7810
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x4
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x6b]  = ship::107   	 ; @0x1c70
  [0x10a]  = ship::266   	 ; @0x1c81

.OBJECT canopy of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'canopy', 'id': 'string_27'}
  [#4] = 0xbc
  [#5] = 0x3d
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x5
  [#25] = 0x0
  [#26] = 0x7
  [#27] = 0x0
  [#28] = 0x6010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x8
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 0

.OBJECT gear of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'gear', 'id': 'string_28'}
  [#4] = 0xab
  [#5] = 0x56
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0x3
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.OBJECT robottrac of 0x2e
Function area offset: 0x4e
Selectors [38]:
  [#0] = 0x2e
  [#1] = 0x2e
  [#2] = 0x0
  [#3] = {'val': 'robottrac', 'id': 'string_29'}
  [#4] = 0x14c
  [#5] = 0x8b
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x8
  [#25] = 0x2
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x4800
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
Overriden functions: 0

.CODE
ladder::107:
		pushi	0x6b
		push0	
		rest	0x01
		super	0x2f, 0x4
		pushi	0x0117
		push1	
		pushi	0x03
		self	0x06
		ret	

ladder::266:
		lsp	0x01
		ldi	0x03
		eq?	
		bnt	code_7975
		pushi	0x010a
		push1	
		lsp	0x01
		rest	0x02
		lofsa	ship
		send	0x06
		jmp	code_7986
code_7975:
		pushi	0x010a
		push1	
		lsp	0x01
		rest	0x02
		super	0x2f, 0x6
code_7986:
		ret	

		bnot	

.OBJECT ladder of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'ladder', 'id': 'string_30'}
  [#4] = 0xa9
  [#5] = 0x76
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'ladder', 'id': 'string_30'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0xa7
  [#18] = 0x82
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "It's just a regular old ladder.", 'id': 'string_31'}
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x6
  [#25] = 0x0
  [#26] = 0x7
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 2
  [0x6b]  = ladder::107   	 ; @0x1efe
  [0x10a]  = ladder::266   	 ; @0x1f0f

.OBJECT shadow of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'shadow', 'id': 'string_32'}
  [#4] = 0xa9
  [#5] = 0x76
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x91
  [#24] = 0x7
  [#25] = 0x0
  [#26] = 0x2
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0xc
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.CODE
saucer::107:
		pushi	0x6b
		push0	
		rest	0x01
		super	0x30, 0x4
		pushi	0x0117
		push2	
		pushi	0x03
		push1	
		self	0x08
		ret	

saucer::266:
		lsp	0x01
		dup	
		ldi	0x03
		eq?	
		bnt	code_8267
		push1	
		pushi	0x1a
		callb	0x6, 0x2
		bnt	code_8255
		pushi	0x008c
		push1	
		lofsa	getInSaucer
		push	
		lag	0x02
		send	0x06
		jmp	code_8278
code_8255:
		push2	
		pushi	0x2d
		pushi	0x0e
		calle	0xff, 0x00, 0x04
		jmp	code_8278
code_8267:
		pushi	0x010a
		push1	
		lsp	0x01
		rest	0x02
		super	0x30, 0x6
code_8278:
		toss	
		ret	


.OBJECT saucer of 0x30
Function area offset: 0x70
Selectors [55]:
  [#0] = 0x30
  [#1] = 0x30
  [#2] = 0x0
  [#3] = {'val': 'saucer', 'id': 'string_35'}
  [#4] = 0xf9
  [#5] = 0x8d
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'saucer ship', 'id': 'string_33'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0xd9
  [#18] = 0x8e
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "It's awfully small, and also much older than you.", 'id': 'string_34'}
  [#22] = 0x2
  [#23] = 0xf5
  [#24] = 0x5
  [#25] = 0x0
  [#26] = 0xb
  [#27] = 0x0
  [#28] = 0x6010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x12
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x8000
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x3
  [#47] = 0x0
  [#48] = 0x0
  [#49] = 0x0
  [#50] = 0x0
  [#51] = 0x0
  [#52] = 0x0
  [#53] = 0x0
  [#54] = 0x0
Overriden functions: 2
  [0x6b]  = saucer::107   	 ; @0x200c
  [0x10a]  = saucer::266   	 ; @0x201e

.OBJECT saucerShadow of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'saucerShadow', 'id': 'string_36'}
  [#4] = 0xf9
  [#5] = 0x9c
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0xf5
  [#24] = 0x3
  [#25] = 0x0
  [#26] = 0x2
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x12
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.OBJECT saucerLid of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'saucerLid', 'id': 'string_39'}
  [#4] = 0x107
  [#5] = 0x92
  [#6] = 0x7
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': "saucer's bubble", 'id': 'string_37'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': "That's the lid that covers and protects you during flight. Provided this thing does fly.", 'id': 'string_38'}
  [#22] = 0x2
  [#23] = 0xf5
  [#24] = 0x1
  [#25] = 0x0
  [#26] = 0xb
  [#27] = 0x0
  [#28] = 0x4010
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.CODE
radar1::266:
		lsp	0x01
		dup	
		ldi	0x03
		eq?	
		bnt	code_8643
		push2	
		pushi	0x2d
		pushi	0x12
		calle	0xff, 0x00, 0x04
		jmp	code_8716
code_8643:
		dup	
		ldi	0x05
		eq?	
		bnt	code_8662
		push2	
		pushi	0x2d
		pushi	0x13
		calle	0xff, 0x00, 0x04
		jmp	code_8716
code_8662:
		dup	
		ldi	0x0c
		eq?	
		bnt	code_8681
		push2	
		pushi	0x2d
		pushi	0x12
		calle	0xff, 0x00, 0x04
		jmp	code_8716
code_8681:
		dup	
		ldi	0x0b
		eq?	
		bnt	code_8700
		push2	
		pushi	0x2d
		pushi	0x12
		calle	0xff, 0x00, 0x04
		jmp	code_8716
code_8700:
		dup	
		pushi	0x010a
		push2	
		lsp	0x01
		lsp	0x02
		super	0x2f, 0x8
		eq?	
		bnt	-4096
code_8716:
		toss	
		ret	


.OBJECT radar1 of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'radar1', 'id': 'string_42'}
  [#4] = 0x57
  [#5] = 0x4e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'force field sensor', 'id': 'string_40'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'The settlement of Ulence Flats is surrounded by these force field generators. They repel such undesirables such as the grell which thrive below the sands. It will allow only airborne vehicles in or out.', 'id': 'string_41'}
  [#22] = 0x2
  [#23] = 0xab
  [#24] = 0x2
  [#25] = 0x1
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = radar1::266   	 ; @0x21ae

.CODE
radar2::266:
		pushi	0x010a
		push1	
		lsp	0x01
		lofsa	radar1
		send	0x06
		ret	


.OBJECT radar2 of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'radar2', 'id': 'string_43'}
  [#4] = 0x11f
  [#5] = 0x4e
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = {'val': 'force field sensor', 'id': 'string_40'}
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = {'val': 'The settlement of Ulence Flats is surrounded by these force field generators. They repel such undesirables such as the grell which thrive below the sands. It will allow only airborne vehicles in or out.', 'id': 'string_41'}
  [#22] = 0x2
  [#23] = 0xab
  [#24] = 0x2
  [#25] = 0x7
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x8
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 1
  [0x10a]  = radar2::266   	 ; @0x227c

.OBJECT tinyTalk of 0x6f
Function area offset: 0x64
Selectors [49]:
  [#0] = 0x6f
  [#1] = 0x6f
  [#2] = 0x0
  [#3] = {'val': 'tinyTalk', 'id': 'string_44'}
  [#4] = 0x63
  [#5] = 0x10
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x5
  [#10] = 0xb
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x202
  [#24] = 0x0
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x0
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
  [#43] = 0x0
  [#44] = 0x0
  [#45] = 0x0
  [#46] = 0x0
  [#47] = 0x1
  [#48] = 0x0
Overriden functions: 0

.OBJECT tinyHead of 0x2e
Function area offset: 0x4e
Selectors [38]:
  [#0] = 0x2e
  [#1] = 0x2e
  [#2] = 0x0
  [#3] = {'val': 'tinyHead', 'id': 'string_45'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x0
  [#10] = 0x0
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x202
  [#24] = 0x0
  [#25] = 0x1
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x101
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
Overriden functions: 0

.OBJECT tinyLips of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'tinyLips', 'id': 'string_46'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x2c
  [#10] = 0x1d
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x202
  [#24] = 0x4
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x9
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.OBJECT tinyEyes of 0x2f
Function area offset: 0x58
Selectors [43]:
  [#0] = 0x2f
  [#1] = 0x2f
  [#2] = 0x0
  [#3] = {'val': 'tinyEyes', 'id': 'string_47'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x0
  [#9] = 0x1a
  [#10] = 0x23
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x6789
  [#15] = 0x0
  [#16] = 0x6789
  [#17] = 0x0
  [#18] = 0x0
  [#19] = 0x0
  [#20] = 0x6789
  [#21] = 0x0
  [#22] = 0x2
  [#23] = 0x202
  [#24] = 0x2
  [#25] = 0x0
  [#26] = 0x0
  [#27] = 0x0
  [#28] = 0x0
  [#29] = 0x0
  [#30] = 0x0
  [#31] = 0x0
  [#32] = 0x0
  [#33] = 0x0
  [#34] = 0x0
  [#35] = 0x0
  [#36] = 0x0
  [#37] = 0x0
  [#38] = 0x1e
  [#39] = 0x0
  [#40] = 0x0
  [#41] = 0x0
  [#42] = 0x0
Overriden functions: 0

.OBJECT extraSound of 0xa
Function area offset: 0x28
Selectors [19]:
  [#0] = 0xa
  [#1] = 0xa
  [#2] = 0x0
  [#3] = {'val': 'extraSound', 'id': 'string_48'}
  [#4] = 0x0
  [#5] = 0x0
  [#6] = 0x0
  [#7] = 0x0
  [#8] = 0x7f
  [#9] = 0x0
  [#10] = 0x1
  [#11] = 0x0
  [#12] = 0x0
  [#13] = 0x0
  [#14] = 0x0
  [#15] = 0x0
  [#16] = 0x0
  [#17] = 0x0
  [#18] = 0x0
Overriden functions: 0

.STRINGS
string_0: "You are standing in the back part of Tiny's used space-craft lot."
string_1: "rm45"		 ; special
string_2: "\"Talk to me, chief.\""
string_3: "sellShips"		 ; special
string_4: "walkTinyOutFirst"		 ; special
string_5: "sellSaucer"		 ; special
string_6: "sellRealShip"		 ; special
string_7: "getInShip"		 ; special
string_8: "robotIntoShip"		 ; special
string_9: "getInSaucer"		 ; special
string_10: "fallDown"		 ; special
string_11: "arm"		 ; special
string_12: "zap1"		 ; special
string_13: "zap2"		 ; special
string_14: "Tiny"
string_15: "Tiny is a large, green-scale-covered jaw jockey with the personality of a true salesman. Not a prime combination of traits, I must say."
string_16: "I'd like to take your money, pal. But, even I wouldn't sell you the same ship twice."
string_17: "Lovely gadget - lovely. So are we gonna make a deal here? Talk to me."
string_18: "That's a smell jet ack, all right, but for exploring space, you need a real ship. Can we talk business."
string_19: "Sorry, bud, but I only deal in space ships, not sand skimmers."
string_20: "Sorry, bud, but I only deal in space ships, not itsy-bitsy jetpacks."
string_21: "Sorry, pal, but I only take cash."
string_22: "tiny"		 ; special
string_23: "mugger"		 ; special
string_24: "As you rise high above the sands of Ulence, you look down and see someone waving good-bye. This really is a friendly place after-all!"
string_25: "That's not possible from up here."
string_26: "ship"		 ; special
string_27: "canopy"		 ; special
string_28: "gear"		 ; special
string_29: "robottrac"		 ; special
string_30: "ladder"		 ; special
string_31: "It's just a regular old ladder."
string_32: "shadow"		 ; special
string_33: "saucer ship"
string_34: "It's awfully small, and also much older than you."
string_35: "saucer"		 ; special
string_36: "saucerShadow"		 ; special
string_37: "saucer's bubble"
string_38: "That's the lid that covers and protects you during flight. Provided this thing does fly."
string_39: "saucerLid"		 ; special
string_40: "force field sensor"
string_41: "The settlement of Ulence Flats is surrounded by these force field generators. They repel such undesirables such as the grell which thrive below the sands. It will allow only airborne vehicles in or out."
string_42: "radar1"		 ; special
string_43: "radar2"		 ; special
string_44: "tinyTalk"		 ; special
string_45: "tinyHead"		 ; special
string_46: "tinyLips"		 ; special
string_47: "tinyEyes"		 ; special
string_48: "extraSound"		 ; special
string_unused_49: ""
string_unused_50: ""


.PRELOAD_TEXT

.LOCAL_VARS
0x91, 0xd2, 0x0, 0x0, 0x0

.RELOCATION
 ; This section is automatically created on assembling, regardless of the content written here
 ; the following is only for informative purposes
num of pointers: 311
; code_18  ; lofsa
; code_27  ; lofsa
; code_36  ; lofsa
; code_45  ; lofsa
; code_55  ; lofsa
; code_64  ; lofsa
; code_73  ; lofsa
; code_82  ; lofsa
; code_317  ; lofsa
; code_329  ; lofsa
; code_341  ; lofsa
; code_353  ; lofsa
; code_365  ; lofsa
; code_377  ; lofsa
; code_389  ; lofsa
; code_401  ; lofsa
; code_416  ; lofsa
; code_431  ; lofsa
; code_451  ; lofsa
; code_495  ; lofsa
; code_499  ; lofsa
; OBJECT rm45 of 0x74 selector #3
; OBJECT rm45 of 0x74 selector #9
; code_777  ; lofsa
; code_826  ; lofsa
; code_877  ; lofsa
; code_934  ; lofsa
; code_968  ; lofsa
; code_980  ; lofsa
; code_1005  ; lofsa
; code_1018  ; lofsa
; code_1034  ; lofsa
; code_1050  ; lofsa
; code_1069  ; lofsa
; code_1097  ; lofsa
; code_1101  ; lofsa
; code_1105  ; lofsa
; code_1116  ; lofsa
; code_1206  ; lofsa
; code_1210  ; lofsa
; code_1214  ; lofsa
; code_1225  ; lofsa
; code_1248  ; lofsa
; code_1252  ; lofsa
; code_1256  ; lofsa
; code_1267  ; lofsa
; code_1290  ; lofsa
; code_1294  ; lofsa
; code_1298  ; lofsa
; code_1310  ; lofsa
; code_1333  ; lofsa
; code_1337  ; lofsa
; code_1341  ; lofsa
; code_1353  ; lofsa
; code_1376  ; lofsa
; code_1380  ; lofsa
; code_1384  ; lofsa
; code_1396  ; lofsa
; code_1450  ; lofsa
; code_1463  ; lofsa
; code_1479  ; lofsa
; code_1495  ; lofsa
; code_1531  ; lofsa
; code_1544  ; lofsa
; code_1560  ; lofsa
; code_1576  ; lofsa
; code_1612  ; lofsa
; code_1625  ; lofsa
; code_1641  ; lofsa
; code_1657  ; lofsa
; code_1696  ; lofsa
; code_1713  ; lofsa
; code_1717  ; lofsa
; code_1721  ; lofsa
; code_1725  ; lofsa
; code_1733  ; lofsa
; OBJECT sellShips of 0x6 selector #3
; code_1899  ; lofsa
; code_1940  ; lofsa
; code_1944  ; lofsa
; code_1948  ; lofsa
; code_1960  ; lofsa
; code_2014  ; lofsa
; code_2027  ; lofsa
; code_2043  ; lofsa
; code_2059  ; lofsa
; code_2077  ; lofsa
; code_2105  ; lofsa
; code_2138  ; lofsa
; code_2160  ; lofsa
; OBJECT walkTinyOutFirst of 0x6 selector #3
; code_2294  ; lofsa
; code_2335  ; lofsa
; code_2339  ; lofsa
; code_2343  ; lofsa
; code_2355  ; lofsa
; code_2391  ; lofsa
; code_2404  ; lofsa
; code_2420  ; lofsa
; code_2436  ; lofsa
; code_2455  ; lofsa
; code_2480  ; lofsa
; code_2515  ; lofsa
; code_2528  ; lofsa
; code_2544  ; lofsa
; code_2560  ; lofsa
; code_2579  ; lofsa
; code_2606  ; lofsa
; code_2644  ; lofsa
; code_2657  ; lofsa
; code_2673  ; lofsa
; code_2689  ; lofsa
; code_2741  ; lofsa
; code_2752  ; lofsa
; code_2765  ; lofsa
; OBJECT sellSaucer of 0x6 selector #3
; code_2854  ; lofsa
; code_2895  ; lofsa
; code_2899  ; lofsa
; code_2903  ; lofsa
; code_2915  ; lofsa
; code_2951  ; lofsa
; code_2964  ; lofsa
; code_2980  ; lofsa
; code_2996  ; lofsa
; code_3015  ; lofsa
; code_3040  ; lofsa
; code_3075  ; lofsa
; code_3088  ; lofsa
; code_3104  ; lofsa
; code_3120  ; lofsa
; code_3139  ; lofsa
; code_3166  ; lofsa
; code_3211  ; lofsa
; code_3224  ; lofsa
; code_3240  ; lofsa
; code_3256  ; lofsa
; code_3294  ; lofsa
; code_3305  ; lofsa
; code_3318  ; lofsa
; OBJECT sellRealShip of 0x6 selector #3
; code_3476  ; lofsa
; code_3500  ; lofsa
; code_3504  ; lofsa
; code_3508  ; lofsa
; code_3520  ; lofsa
; code_3532  ; lofsa
; code_3536  ; lofsa
; code_3540  ; lofsa
; code_3552  ; lofsa
; code_3619  ; lofsa
; code_3632  ; lofsa
; code_3648  ; lofsa
; code_3664  ; lofsa
; code_3682  ; lofsa
; code_3696  ; lofsa
; code_3737  ; lofsa
; code_3832  ; lofsa
; code_3898  ; lofsa
; code_3950  ; lofsa
; code_4073  ; lofsa
; OBJECT getInShip of 0x6 selector #3
; code_4336  ; lofsa
; code_4438  ; lofsa
; code_4453  ; lofsa
; code_4465  ; lofsa
; code_4483  ; lofsa
; code_4517  ; lofsa
; code_4526  ; lofsa
; code_4538  ; lofsa
; code_4547  ; lofsa
; code_4551  ; lofsa
; code_4570  ; lofsa
; code_4578  ; lofsa
; code_4586  ; lofsa
; code_4640  ; lofsa
; code_4678  ; lofsa
; code_4710  ; lofsa
; code_4775  ; lofsa
; OBJECT robotIntoShip of 0x6 selector #3
; code_4991  ; lofsa
; code_5074  ; lofsa
; code_5088  ; lofsa
; code_5115  ; lofsa
; code_5127  ; lofsa
; code_5191  ; lofsa
; code_5249  ; lofsa
; code_5267  ; lofsa
; code_5275  ; lofsa
; code_5348  ; lofsa
; code_5388  ; lofsa
; OBJECT getInSaucer of 0x6 selector #3
; code_5501  ; lofsa
; code_5546  ; lofsa
; OBJECT fallDown of 0x6 selector #3
; OBJECT arm of 0x2f selector #3
; code_5731  ; lofsa
; OBJECT zap1 of 0x2f selector #3
; code_5865  ; lofsa
; OBJECT zap2 of 0x2f selector #3
; code_6092  ; lofsa
; code_6096  ; lofsa
; code_6100  ; lofsa
; code_6111  ; lofsa
; code_6128  ; lofsa
; code_6132  ; lofsa
; code_6136  ; lofsa
; code_6161  ; lofsa
; code_6297  ; lofsa
; code_6301  ; lofsa
; code_6305  ; lofsa
; code_6309  ; lofsa
; code_6316  ; lofsa
; code_6336  ; lofsa
; code_6340  ; lofsa
; code_6344  ; lofsa
; code_6355  ; lofsa
; code_6367  ; lofsa
; code_6371  ; lofsa
; code_6375  ; lofsa
; code_6386  ; lofsa
; code_6466  ; lofsa
; code_6470  ; lofsa
; code_6474  ; lofsa
; code_6485  ; lofsa
; code_6513  ; lofsa
; code_6517  ; lofsa
; code_6521  ; lofsa
; code_6525  ; lofsa
; code_6532  ; lofsa
; code_6551  ; lofsa
; code_6555  ; lofsa
; code_6559  ; lofsa
; code_6570  ; lofsa
; code_6598  ; lofsa
; code_6602  ; lofsa
; code_6606  ; lofsa
; code_6617  ; lofsa
; code_6636  ; lofsa
; code_6640  ; lofsa
; code_6644  ; lofsa
; code_6648  ; lofsa
; code_6655  ; lofsa
; code_6674  ; lofsa
; code_6678  ; lofsa
; code_6682  ; lofsa
; code_6693  ; lofsa
; code_6722  ; lofsa
; code_6726  ; lofsa
; code_6730  ; lofsa
; code_6741  ; lofsa
; code_6760  ; lofsa
; code_6764  ; lofsa
; code_6768  ; lofsa
; code_6779  ; lofsa
; code_6798  ; lofsa
; code_6802  ; lofsa
; code_6806  ; lofsa
; code_6810  ; lofsa
; code_6817  ; lofsa
; code_6836  ; lofsa
; code_6840  ; lofsa
; code_6844  ; lofsa
; code_6848  ; lofsa
; code_6855  ; lofsa
; code_6867  ; lofsa
; code_6871  ; lofsa
; code_6875  ; lofsa
; code_6879  ; lofsa
; code_6886  ; lofsa
; OBJECT tiny of 0x30 selector #3
; OBJECT tiny of 0x30 selector #13
; OBJECT tiny of 0x30 selector #21
; code_7064  ; lofsa
; code_7083  ; lofsa
; code_7102  ; lofsa
; code_7121  ; lofsa
; OBJECT mugger of 0x30 selector #3
; OBJECT mugger of 0x30 selector #13
; OBJECT mugger of 0x30 selector #21
; code_7359  ; lofsa
; OBJECT ship of 0x30 selector #3
; OBJECT ship of 0x30 selector #13
; OBJECT canopy of 0x30 selector #3
; OBJECT gear of 0x2f selector #3
; OBJECT robottrac of 0x2e selector #3
; code_7967  ; lofsa
; OBJECT ladder of 0x2f selector #3
; OBJECT ladder of 0x2f selector #13
; OBJECT ladder of 0x2f selector #21
; OBJECT shadow of 0x2f selector #3
; code_8244  ; lofsa
; OBJECT saucer of 0x30 selector #3
; OBJECT saucer of 0x30 selector #13
; OBJECT saucer of 0x30 selector #21
; OBJECT saucerShadow of 0x2f selector #3
; OBJECT saucerLid of 0x2f selector #3
; OBJECT saucerLid of 0x2f selector #13
; OBJECT saucerLid of 0x2f selector #21
; OBJECT radar1 of 0x2f selector #3
; OBJECT radar1 of 0x2f selector #13
; OBJECT radar1 of 0x2f selector #21
; code_8834  ; lofsa
; OBJECT radar2 of 0x2f selector #3
; OBJECT radar2 of 0x2f selector #13
; OBJECT radar2 of 0x2f selector #21
; OBJECT tinyTalk of 0x6f selector #3
; OBJECT tinyHead of 0x2e selector #3
; OBJECT tinyLips of 0x2f selector #3
; OBJECT tinyEyes of 0x2f selector #3
; OBJECT extraSound of 0xa selector #3
